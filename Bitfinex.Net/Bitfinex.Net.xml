<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Bitfinex.Net</name>
    </assembly>
    <members>
        <member name="T:Bitfinex.Net.BitfinexEnvironment">
            <summary>
            Bitfinex environments
            </summary>
        </member>
        <member name="P:Bitfinex.Net.BitfinexEnvironment.RestAddress">
            <summary>
            Rest client address
            </summary>
        </member>
        <member name="P:Bitfinex.Net.BitfinexEnvironment.SocketAddress">
            <summary>
            Socket client address
            </summary>
        </member>
        <member name="P:Bitfinex.Net.BitfinexEnvironment.Live">
            <summary>
            Live environment
            </summary>
        </member>
        <member name="M:Bitfinex.Net.BitfinexEnvironment.CreateCustom(System.String,System.String,System.String)">
            <summary>
            Create a custom environment
            </summary>
            <param name="name"></param>
            <param name="restAddress"></param>
            <param name="socketAddress"></param>
            <returns></returns>
        </member>
        <member name="T:Bitfinex.Net.Clients.BitfinexRestClient">
            <inheritdoc cref="T:Bitfinex.Net.Interfaces.Clients.IBitfinexRestClient" />
        </member>
        <member name="P:Bitfinex.Net.Clients.BitfinexRestClient.GeneralApi">
            <inheritdoc />
        </member>
        <member name="P:Bitfinex.Net.Clients.BitfinexRestClient.SpotApi">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.BitfinexRestClient.#ctor(System.Action{Bitfinex.Net.Objects.Options.BitfinexRestOptions})">
            <summary>
            Create a new instance of the BitfinexRestClient using provided options
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:Bitfinex.Net.Clients.BitfinexRestClient.#ctor(System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILoggerFactory,System.Action{Bitfinex.Net.Objects.Options.BitfinexRestOptions})">
            <summary>
            Create a new instance of the BitfinexRestClient using provided options
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
            <param name="loggerFactory">The logger factory</param>
            <param name="httpClient">Http client for this client</param>
        </member>
        <member name="M:Bitfinex.Net.Clients.BitfinexRestClient.SetDefaultOptions(System.Action{Bitfinex.Net.Objects.Options.BitfinexRestOptions})">
            <summary>
            Set the default options to be used when creating new clients
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:Bitfinex.Net.Clients.BitfinexRestClient.SetApiCredentials(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="T:Bitfinex.Net.Clients.BitfinexSocketClient">
            <inheritdoc cref="T:Bitfinex.Net.Interfaces.Clients.IBitfinexSocketClient" />
        </member>
        <member name="P:Bitfinex.Net.Clients.BitfinexSocketClient.SpotApi">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.BitfinexSocketClient.#ctor(Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Create a new instance of the BitfinexSocketClient
            </summary>
            <param name="loggerFactory">The logger factory</param>
        </member>
        <member name="M:Bitfinex.Net.Clients.BitfinexSocketClient.#ctor(System.Action{Bitfinex.Net.Objects.Options.BitfinexSocketOptions})">
            <summary>
            Create a new instance of the BitfinexSocketClient
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:Bitfinex.Net.Clients.BitfinexSocketClient.#ctor(System.Action{Bitfinex.Net.Objects.Options.BitfinexSocketOptions},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Create a new instance of the BitfinexSocketClient
            </summary>
            <param name="loggerFactory">The logger factory</param>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:Bitfinex.Net.Clients.BitfinexSocketClient.SetDefaultOptions(System.Action{Bitfinex.Net.Objects.Options.BitfinexSocketOptions})">
            <summary>
            Set the default options to be used when creating new clients
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:Bitfinex.Net.Clients.BitfinexSocketClient.SetApiCredentials(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="T:Bitfinex.Net.Clients.GeneralApi.BitfinexRestClientGeneralApi">
            <inheritdoc cref="T:Bitfinex.Net.Interfaces.Clients.GeneralApi.IBitfinexRestClientGeneralApi" />
        </member>
        <member name="P:Bitfinex.Net.Clients.GeneralApi.BitfinexRestClientGeneralApi.ClientOptions">
            <inheritdoc />
        </member>
        <member name="P:Bitfinex.Net.Clients.GeneralApi.BitfinexRestClientGeneralApi.Funding">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.GeneralApi.BitfinexRestClientGeneralApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.GeneralApi.BitfinexRestClientGeneralApi.ParseErrorResponse(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}},System.String)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.GeneralApi.BitfinexRestClientGeneralApi.GetTimeSyncInfo">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.GeneralApi.BitfinexRestClientGeneralApi.GetTimeOffset">
            <inheritdoc />
        </member>
        <member name="T:Bitfinex.Net.Clients.GeneralApi.BitfinexRestClientGeneralApiFunding">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.GeneralApi.BitfinexRestClientGeneralApiFunding.GetActiveFundingOffersAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.GeneralApi.BitfinexRestClientGeneralApiFunding.GetFundingOfferHistoryAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.GeneralApi.BitfinexRestClientGeneralApiFunding.SubmitFundingOfferAsync(Bitfinex.Net.Enums.FundingOrderType,System.String,System.Decimal,System.Decimal,System.Int32,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.GeneralApi.BitfinexRestClientGeneralApiFunding.CloseFundingAsync(System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.GeneralApi.BitfinexRestClientGeneralApiFunding.CancelFundingOfferAsync(System.Int64,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.GeneralApi.BitfinexRestClientGeneralApiFunding.KeepFundingAsync(Bitfinex.Net.Enums.FundType,System.Collections.Generic.IEnumerable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.GeneralApi.BitfinexRestClientGeneralApiFunding.CancelAllFundingOffersAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.GeneralApi.BitfinexRestClientGeneralApiFunding.GetFundingLoansAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.GeneralApi.BitfinexRestClientGeneralApiFunding.GetFundingLoansHistoryAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.GeneralApi.BitfinexRestClientGeneralApiFunding.GetFundingCreditsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.GeneralApi.BitfinexRestClientGeneralApiFunding.GetFundingCreditsHistoryAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.GeneralApi.BitfinexRestClientGeneralApiFunding.GetFundingTradesHistoryAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.GeneralApi.BitfinexRestClientGeneralApiFunding.GetFundingInfoAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.GeneralApi.BitfinexRestClientGeneralApiFunding.SubmitFundingAutoRenewAsync(System.String,System.Boolean,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.GeneralApi.BitfinexRestClientGeneralApiFunding.GetFundingAutoRenewStatusAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApi">
            <inheritdoc cref="T:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApi" />
        </member>
        <member name="P:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApi.ClientOptions">
            <inheritdoc />
        </member>
        <member name="P:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApi.ExchangeName">
            <inheritdoc />
        </member>
        <member name="P:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApi.Account">
            <inheritdoc />
        </member>
        <member name="P:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApi.ExchangeData">
            <inheritdoc />
        </member>
        <member name="P:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApi.Trading">
            <inheritdoc />
        </member>
        <member name="E:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApi.OnOrderPlaced">
            <summary>
            Event triggered when an order is placed via this client
            </summary>
        </member>
        <member name="E:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApi.OnOrderCanceled">
            <summary>
            Event triggered when an order is canceled via this client
            </summary>
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApi.GetSymbolName(System.String,System.String)">
            <summary>
            Get the name of a symbol for Bitfinex based on the base and quote asset
            </summary>
            <param name="baseAsset"></param>
            <param name="quoteAsset"></param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApi.GetTimeSyncInfo">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApi.GetTimeOffset">
            <inheritdoc />
        </member>
        <member name="P:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApi.CommonSpotClient">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApi.ParseErrorResponse(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}},System.String)">
            <inheritdoc />
        </member>
        <member name="T:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiAccount">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiAccount.GetBalancesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiAccount.GetBaseMarginInfoAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiAccount.GetSymbolMarginInfoAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiAccount.GetMovementsAsync(System.String,System.Collections.Generic.IEnumerable{System.Int64},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiAccount.GetMovementsDetailsAsync(System.Int64,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiAccount.GetAlertListAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiAccount.SetAlertAsync(System.String,System.Decimal,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiAccount.DeleteAlertAsync(System.String,System.Decimal,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiAccount.GetAvailableBalanceAsync(System.String,Bitfinex.Net.Enums.OrderSide,System.Decimal,Bitfinex.Net.Enums.WalletType,System.Nullable{System.Decimal},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiAccount.GetLedgerEntriesAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiAccount.GetUserInfoAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiAccount.Get30DaySummaryAndFeesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiAccount.GetDepositAddressAsync(System.String,Bitfinex.Net.Enums.WithdrawWallet,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiAccount.WalletTransferAsync(System.String,System.Decimal,Bitfinex.Net.Enums.WithdrawWallet,Bitfinex.Net.Enums.WithdrawWallet,System.String,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiAccount.WithdrawAsync(System.String,Bitfinex.Net.Enums.WithdrawWallet,System.Decimal,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiAccount.GetLoginHistoryAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiAccount.GetApiKeyPermissionsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiAccount.GetAccountChangeLogAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiExchangeData">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiExchangeData.GetPlatformStatusAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiExchangeData.GetAssetsListAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiExchangeData.GetSymbolNamesAsync(Bitfinex.Net.Enums.SymbolType,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiExchangeData.GetAssetNamesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiExchangeData.GetAssetSymbolsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiExchangeData.GetAssetFullNamesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiExchangeData.GetAssetUnitsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiExchangeData.GetAssetUnderlyingsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiExchangeData.GetAssetNetworksAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiExchangeData.GetAssetBlockExplorerUrlsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiExchangeData.GetAssetWithdrawalFeesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiExchangeData.GetAssetDepositWithdrawalMethodsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiExchangeData.GetSymbolsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiExchangeData.GetFuturesSymbolsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiExchangeData.GetDepositWithdrawalStatusAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiExchangeData.GetMarginInfoAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiExchangeData.GetDerivativesFeesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiExchangeData.GetTickerAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiExchangeData.GetFundingTickerAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiExchangeData.GetTickersAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiExchangeData.GetFundingTickersAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiExchangeData.GetTickerHistoryAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiExchangeData.GetTradeHistoryAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Bitfinex.Net.Enums.Sorting},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiExchangeData.GetOrderBookAsync(System.String,Bitfinex.Net.Enums.Precision,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiExchangeData.GetFundingOrderBookAsync(System.String,Bitfinex.Net.Enums.Precision,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiExchangeData.GetRawOrderBookAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiExchangeData.GetRawFundingOrderBookAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiExchangeData.GetLastKlineAsync(System.String,Bitfinex.Net.Enums.KlineInterval,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiExchangeData.GetKlinesAsync(System.String,Bitfinex.Net.Enums.KlineInterval,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Bitfinex.Net.Enums.Sorting},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiExchangeData.GetAveragePriceAsync(System.String,System.Decimal,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiExchangeData.GetForeignExchangeRateAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiExchangeData.GetDerivativesStatusAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiExchangeData.GetDerivativesStatusHistoryAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Bitfinex.Net.Enums.Sorting},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiExchangeData.GetLiquidationsAsync(System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Bitfinex.Net.Enums.Sorting},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiExchangeData.GetFundingStatisticsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiExchangeData.GetFundingSizeAsync(System.String,Bitfinex.Net.Enums.StatSection,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Bitfinex.Net.Enums.Sorting},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiExchangeData.GetCreditSizeAsync(System.String,Bitfinex.Net.Enums.StatSection,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Bitfinex.Net.Enums.Sorting},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiExchangeData.GetCreditSizeAsync(System.String,System.String,Bitfinex.Net.Enums.StatSection,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Bitfinex.Net.Enums.Sorting},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiExchangeData.GetLongsShortsTotalsAsync(System.String,Bitfinex.Net.Enums.StatSide,Bitfinex.Net.Enums.StatSection,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Bitfinex.Net.Enums.Sorting},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiExchangeData.GetTradingVolumeAsync(System.Int32,Bitfinex.Net.Enums.StatSection,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Bitfinex.Net.Enums.Sorting},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiExchangeData.GetVolumeWeightedAveragePriceAsync(System.String,Bitfinex.Net.Enums.StatSection,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Bitfinex.Net.Enums.Sorting},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiTrading">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiTrading.GetOpenOrdersAsync(System.String,System.Collections.Generic.IEnumerable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiTrading.GetClosedOrdersAsync(System.String,System.Collections.Generic.IEnumerable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiTrading.GetOrderTradesAsync(System.String,System.Int64,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiTrading.GetUserTradesAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiTrading.PlaceOrderAsync(System.String,Bitfinex.Net.Enums.OrderSide,Bitfinex.Net.Enums.OrderType,System.Decimal,System.Decimal,System.Nullable{Bitfinex.Net.Enums.OrderFlags},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiTrading.CancelOrderAsync(System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiTrading.CancelOrdersAsync(System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.Dictionary{System.Int64,System.DateTime},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiTrading.GetPositionHistoryAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiTrading.ClaimPositionAsync(System.Int64,System.Decimal,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiTrading.IncreasePositionAsync(System.String,System.Decimal,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiTrading.GetIncreasePositionInfoAsync(System.String,System.Decimal,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiTrading.GetPositionsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiTrading.GetPositionSnapshotsAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexRestClientSpotApiTrading.GetPositionsByIdAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Bitfinex.Net.Clients.SpotApi.BitfinexSocketClientSpotApi">
            <inheritdoc cref="T:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexSocketClientSpotApi" />
        </member>
        <member name="P:Bitfinex.Net.Clients.SpotApi.BitfinexSocketClientSpotApi.ClientOptions">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexSocketClientSpotApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexSocketClientSpotApi.GetAuthenticationRequest">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexSocketClientSpotApi.SubscribeToTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitfinex.Net.Objects.Models.Socket.BitfinexStreamTicker}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexSocketClientSpotApi.SubscribeToFundingTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitfinex.Net.Objects.Models.BitfinexStreamFundingTicker}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexSocketClientSpotApi.SubscribeToOrderBookUpdatesAsync(System.String,Bitfinex.Net.Enums.Precision,Bitfinex.Net.Enums.Frequency,System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitfinex.Net.Objects.Models.BitfinexOrderBookEntry}}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Int32}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexSocketClientSpotApi.SubscribeToFundingOrderBookUpdatesAsync(System.String,Bitfinex.Net.Enums.Precision,Bitfinex.Net.Enums.Frequency,System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitfinex.Net.Objects.Models.BitfinexOrderBookFundingEntry}}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Int32}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexSocketClientSpotApi.SubscribeToRawOrderBookUpdatesAsync(System.String,System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitfinex.Net.Objects.Models.BitfinexRawOrderBookEntry}}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Int32}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexSocketClientSpotApi.SubscribeToRawFundingOrderBookUpdatesAsync(System.String,System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitfinex.Net.Objects.Models.BitfinexRawOrderBookFundingEntry}}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Int32}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexSocketClientSpotApi.SubscribeToTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitfinex.Net.Objects.Models.BitfinexTradeSimple}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexSocketClientSpotApi.SubscribeToKlineUpdatesAsync(System.String,Bitfinex.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitfinex.Net.Objects.Models.BitfinexKline}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexSocketClientSpotApi.SubscribeToLiquidationUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitfinex.Net.Objects.Models.BitfinexLiquidation}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexSocketClientSpotApi.SubscribeToDerivativesUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitfinex.Net.Objects.Models.BitfinexDerivativesStatusUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexSocketClientSpotApi.SubscribeToUserUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitfinex.Net.Objects.Models.BitfinexOrder}}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitfinex.Net.Objects.Models.BitfinexPosition}}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitfinex.Net.Objects.Models.BitfinexFundingOffer}}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitfinex.Net.Objects.Models.BitfinexFundingCredit}}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitfinex.Net.Objects.Models.BitfinexFunding}}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitfinex.Net.Objects.Models.BitfinexWallet}}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitfinex.Net.Objects.Models.BitfinexBalance}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitfinex.Net.Objects.Models.BitfinexTradeDetails}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitfinex.Net.Objects.Models.BitfinexFundingTrade}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitfinex.Net.Objects.Models.BitfinexFundingInfo}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitfinex.Net.Objects.Models.BitfinexMarginBase}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitfinex.Net.Objects.Models.BitfinexMarginSymbol}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexSocketClientSpotApi.PlaceOrderAsync(Bitfinex.Net.Enums.OrderSide,Bitfinex.Net.Enums.OrderType,System.String,System.Decimal,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Bitfinex.Net.Enums.OrderFlags},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexSocketClientSpotApi.UpdateOrderAsync(System.Int64,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Bitfinex.Net.Enums.OrderFlags})">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexSocketClientSpotApi.CancelAllOrdersAsync">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexSocketClientSpotApi.CancelOrderAsync(System.Int64)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexSocketClientSpotApi.CancelOrdersByGroupIdAsync(System.Int64)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexSocketClientSpotApi.CancelOrdersByGroupIdsAsync(System.Collections.Generic.IEnumerable{System.Int64})">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexSocketClientSpotApi.CancelOrdersAsync(System.Collections.Generic.IEnumerable{System.Int64})">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexSocketClientSpotApi.CancelOrdersByClientOrderIdsAsync(System.Collections.Generic.Dictionary{System.Int64,System.DateTime})">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexSocketClientSpotApi.SubmitFundingOfferAsync(Bitfinex.Net.Enums.FundingOfferType,System.String,System.Decimal,System.Decimal,System.Int32,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexSocketClientSpotApi.CancelFundingOfferAsync(System.Int64)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexSocketClientSpotApi.GetListenerIdentifier(CryptoExchange.Net.Sockets.MessageParsing.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="T:Bitfinex.Net.Enums.BitfinexEventType">
            <summary>
            Socket event types
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.HeartBeat">
            <summary>
            Heartbeat
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.BalanceUpdate">
            <summary>
            Balance update
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.PositionSnapshot">
            <summary>
            Position snapshot
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.PositionNew">
            <summary>
            New position
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.PositionUpdate">
            <summary>
            Position update
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.PositionClose">
            <summary>
            Position closed
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.WalletSnapshot">
            <summary>
            Wallet snapshot
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.WalletUpdate">
            <summary>
            Wallet update
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.OrderSnapshot">
            <summary>
            Orders snapshot
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.OrderNew">
            <summary>
            New order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.OrderNewRequest">
            <summary>
            New order request
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.OrderUpdate">
            <summary>
            Order update
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.OrderUpdateRequest">
            <summary>
            Order update request
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.OrderCancel">
            <summary>
            Order canceled
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.OrderCancelRequest">
            <summary>
            Order cancel request
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.OrderCancelMulti">
            <summary>
            Multiple orders canceled
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.OrderCancelMultiRequest">
            <summary>
            Multiple orders cancel request
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.TradeExecuted">
            <summary>
            Trade executed
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.TradeExecutionUpdate">
            <summary>
            Trade execution update
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.FundingTradeExecution">
            <summary>
            Funding trade execution
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.FundingTradeUpdate">
            <summary>
            Funding trade update
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.MarginInfoSnapshot">
            <summary>
            Margin info snapshot
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.MarginInfoUpdate">
            <summary>
            Margin info update
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.Notification">
            <summary>
            Notification
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.FundingOfferSnapshot">
            <summary>
            Funding offer snapshot
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.FundingOfferNew">
            <summary>
            New funding offer
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.FundingOfferNewRequest">
            <summary>
            New funding offer request
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.FundingOfferUpdate">
            <summary>
            Funding offer update
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.FundingOfferCancel">
            <summary>
            Funding offer canceled
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.FundingOfferCancelRequest">
            <summary>
            Funding offer cancel request
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.FundingCreditsSnapshot">
            <summary>
            Funding credits snapshot
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.FundingCreditsNew">
            <summary>
            New funding credits
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.FundingCreditsUpdate">
            <summary>
            Funding credits update
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.FundingCreditsClose">
            <summary>
            Funding credits closed
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.FundingLoanSnapshot">
            <summary>
            Funding loan snapshot
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.FundingLoanNew">
            <summary>
            New funding loan
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.FundingLoanUpdate">
            <summary>
            Funding loan update
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.FundingLoanClose">
            <summary>
            Funding loan closed
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.UserCustomPriceAlert">
            <summary>
            Custom user price alert
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Enums.Frequency">
            <summary>
            Frequency of updates
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.Frequency.Realtime">
            <summary>
            Realtime
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.Frequency.TwoSeconds">
            <summary>
            Two seconds
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Enums.FundingOfferType">
            <summary>
            Funding type
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.FundingOfferType.Limit">
            <summary>
            Lend
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.FundingOfferType.FlashReturnRateDeltaVariable">
            <summary>
            FFR delta var
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.FundingOfferType.FlashReturnRateDeltaFixed">
            <summary>
            FFR delta fix
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Enums.FundingOrderType">
            <summary>
            Funding - Order Types.
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.FundingOrderType.Limit">
            <summary>
            Place an order at an explicit, static rate.
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.FundingOrderType.FRRDeltaVar">
            <summary>
            Place an order at an implicit, static rate, relative to the FRR.
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.FundingOrderType.FRRDeltaFix">
            <summary>
            Place an order at an implicit, dynamic rate, relative to the FRR.
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Enums.FundingSide">
            <summary>
            Funding side
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.FundingSide.Lender">
            <summary>
            Lender
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.FundingSide.Borrower">
            <summary>
            Borrower
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.FundingSide.Both">
            <summary>
            Both
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Enums.FundingType">
            <summary>
            Funding type
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.FundingType.Lend">
            <summary>
            Lend
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.FundingType.Loan">
            <summary>
            Loan
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Enums.FundType">
            <summary>
            Fund type
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.FundType.Credit">
            <summary>
            Credit
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.FundType.Loan">
            <summary>
            Loan
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Enums.KlineInterval">
            <summary>
            Interval
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.KlineInterval.OneMinute">
            <summary>
            1m
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.KlineInterval.FiveMinutes">
            <summary>
            5m
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.KlineInterval.FifteenMinutes">
            <summary>
            15m
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.KlineInterval.ThirtyMinutes">
            <summary>
            30m
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.KlineInterval.OneHour">
            <summary>
            1h
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.KlineInterval.ThreeHours">
            <summary>
            3h
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.KlineInterval.SixHours">
            <summary>
            6h
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.KlineInterval.TwelveHours">
            <summary>
            12h
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.KlineInterval.OneDay">
            <summary>
            1d
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.KlineInterval.SevenDays">
            <summary>
            7d
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.KlineInterval.FourteenDays">
            <summary>
            14d
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.KlineInterval.OneMonth">
            <summary>
            1m
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Enums.MarginFundingType">
            <summary>
            Margin funding type
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.MarginFundingType.Daily">
            <summary>
            Daily
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.MarginFundingType.Term">
            <summary>
            Term
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Enums.OrderFlags">
            <summary>
            Flags for an order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderFlags.Hidden">
            <summary>
            Order is hidden
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderFlags.Close">
            <summary>
            Close
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderFlags.ReduceOnly">
            <summary>
            Ensures that the executed order does not flip the opened position.
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderFlags.PostOnly">
            <summary>
            Only accept if it is a post
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderFlags.OneCancelsOther">
            <summary>
            Oco order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderFlags.NoVarRates">
            <summary>
            Excludes variable rate funding offers from matching against this order, if on margin
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Enums.OrderSide">
            <summary>
            Side of an order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderSide.Buy">
            <summary>
            Buy
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderSide.Sell">
            <summary>
            Sell
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Enums.OrderStatus">
            <summary>
            Status of an order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderStatus.Active">
            <summary>
            Active
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderStatus.Executed">
            <summary>
            Fully filled
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderStatus.PartiallyFilled">
            <summary>
            Partially filled
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderStatus.Canceled">
            <summary>
            Canceled
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderStatus.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Enums.OrderType">
            <summary>
            Order types
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderType.Limit">
            <summary>
            Limit order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderType.Market">
            <summary>
            Market order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderType.Stop">
            <summary>
            Stop order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderType.StopLimit">
            <summary>
            Stop limit order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderType.TrailingStop">
            <summary>
            Trailing stop order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderType.ExchangeMarket">
            <summary>
            Exchange market order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderType.ExchangeLimit">
            <summary>
            Exchange limit order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderType.ExchangeStop">
            <summary>
            Exchange stop order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderType.ExchangeStopLimit">
            <summary>
            Exchange stop limit order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderType.ExchangeTrailingStop">
            <summary>
            Exchange trailing stop order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderType.FillOrKill">
            <summary>
            Fill or kill order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderType.ExchangeFillOrKill">
            <summary>
            Exchange fill or kill order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderType.ImmediateOrCancel">
            <summary>
            Immediate or cancel order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderType.ExchangeImmediateOrCancel">
            <summary>
            Immediate or cancel order
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Enums.OrderTypeV1">
            <summary>
            Order types for V1 API
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderTypeV1.Market">
            <summary>
            Market order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderTypeV1.Limit">
            <summary>
            Limit order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderTypeV1.Stop">
            <summary>
            Stop order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderTypeV1.StopLimit">
            <summary>
            Stop limit order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderTypeV1.TrailingStop">
            <summary>
            Trailing stop order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderTypeV1.FillOrKill">
            <summary>
            Fill or kill order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderTypeV1.ExchangeMarket">
            <summary>
            Exchange market order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderTypeV1.ExchangeLimit">
            <summary>
            Exchange limit order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderTypeV1.ExchangeStop">
            <summary>
            Exchange stop order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderTypeV1.ExchangeStopLimit">
            <summary>
            Exchange stop limit order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderTypeV1.ExchangeTrailingStop">
            <summary>
            Exchange trailing stop order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderTypeV1.ExchangeFillOrKill">
            <summary>
            Exchange fill or kill order
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Enums.PlatformStatus">
            <summary>
            Status of Bitfinex
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.PlatformStatus.Maintenance">
            <summary>
            In maintenance
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.PlatformStatus.Operative">
            <summary>
            Working normally
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Enums.PositionStatus">
            <summary>
            Position status
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.PositionStatus.Active">
            <summary>
            Active
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.PositionStatus.Closed">
            <summary>
            Closed
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Enums.PositionType">
            <summary>
            Type of position
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.PositionType.MarginPosition">
            <summary>
            Margin position
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.PositionType.DerivativesPosition">
            <summary>
            Derivatives position
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Enums.Precision">
            <summary>
            Precision level
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.Precision.PrecisionLevel0">
            <summary>
            0
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.Precision.PrecisionLevel1">
            <summary>
            1
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.Precision.PrecisionLevel2">
            <summary>
            2
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.Precision.PrecisionLevel3">
            <summary>
            3
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.Precision.R0">
            <summary>
            R0
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Enums.Sorting">
            <summary>
            Order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.Sorting.NewFirst">
            <summary>
            Newest first
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.Sorting.OldFirst">
            <summary>
            Oldest first
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Enums.StatKey">
            <summary>
            Stat types
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.StatKey.TotalOpenPosition">
            <summary>
            Total number of open positions
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.StatKey.TotalActiveFunding">
            <summary>
            Total active funding
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.StatKey.ActiveFundingInPositions">
            <summary>
            Active funding in positions
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.StatKey.ActiveFundingInPositionsPerTradingSymbol">
            <summary>
            Active funding positions per symbol
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Enums.StatSection">
            <summary>
            Section of stats
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.StatSection.Last">
            <summary>
            Last
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.StatSection.History">
            <summary>
            History
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Enums.StatSide">
            <summary>
            Side for stats
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.StatSide.Long">
            <summary>
            Long
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.StatSide.Short">
            <summary>
            Short
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Enums.SymbolType">
            <summary>
            Type of symbol
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.SymbolType.Exchange">
            <summary>
            Exchange
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.SymbolType.Margin">
            <summary>
            Margin
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.SymbolType.Futures">
            <summary>
            Futures
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.SymbolType.Securities">
            <summary>
            Securities
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Enums.WalletType">
            <summary>
            Type of wallet
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.WalletType.Exchange">
            <summary>
            Exchange
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.WalletType.Margin">
            <summary>
            Margin
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.WalletType.Funding">
            <summary>
            Funding
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Enums.WithdrawWallet">
            <summary>
            Withdraw wallet type
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.WithdrawWallet.Trading">
            <summary>
            Trading
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.WithdrawWallet.Exchange">
            <summary>
            Exchange
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.WithdrawWallet.Deposit">
            <summary>
            Deposit
            </summary>
        </member>
        <member name="T:Bitfinex.Net.ExtensionMethods.BitfinexExtensionMethods">
            <summary>
            Extension methods specific to using the Bitfinex API
            </summary>
        </member>
        <member name="M:Bitfinex.Net.ExtensionMethods.BitfinexExtensionMethods.ValidateBitfinexSymbol(System.String)">
            <summary>
            Validate the string is a valid Bitfinex symbol.
            </summary>
            <param name="symbolString">string to validate</param>
        </member>
        <member name="M:Bitfinex.Net.ExtensionMethods.BitfinexExtensionMethods.ValidateBitfinexFundingSymbol(System.String)">
            <summary>
            Validate the string is a valid Bitfinex symbol.
            </summary>
            <param name="symbolString">string to validate</param>
        </member>
        <member name="M:Bitfinex.Net.ExtensionMethods.BitfinexExtensionMethods.ValidateBitfinexTradingSymbol(System.String)">
            <summary>
            Validate the string is a valid Bitfinex symbol.
            </summary>
            <param name="symbolString">string to validate</param>
        </member>
        <member name="T:Bitfinex.Net.Interfaces.Clients.GeneralApi.IBitfinexRestClientGeneralApi">
            <summary>
            General API endpoints
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Interfaces.Clients.GeneralApi.IBitfinexRestClientGeneralApi.Funding">
            <summary>
            Endpoints related to funding
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Interfaces.Clients.GeneralApi.IBitfinexRestClientGeneralApiFunding">
            <summary>
            Bitfinex funding endpoints.
            </summary>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.GeneralApi.IBitfinexRestClientGeneralApiFunding.GetActiveFundingOffersAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the active funding offers
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-funding-offers" /></para>
            </summary>
            <param name="symbol">The symbol to return the funding offer for</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.GeneralApi.IBitfinexRestClientGeneralApiFunding.GetFundingOfferHistoryAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get the funding offer history
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-funding-offers-hist" /></para>
            </summary>
            <param name="symbol">The symbol to get history for</param>
            <param name="startTime">Start time of the data to return</param>
            <param name="endTime">End time of the data to return</param>
            <param name="limit">Max amount of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.GeneralApi.IBitfinexRestClientGeneralApiFunding.SubmitFundingOfferAsync(Bitfinex.Net.Enums.FundingOrderType,System.String,System.Decimal,System.Decimal,System.Int32,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Submit a new funding offer.
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-submit-funding-offer" /></para>
            </summary>
            <param name="fundingOrderType">Order Type (LIMIT, FRRDELTAVAR, FRRDELTAFIX).</param>
            <param name="symbol">Symbol for desired pair (fUSD, fBTC, etc..).</param>
            <param name="quantity">Quantity (positive for offer, negative for bid).</param>
            <param name="rate">Daily rate.</param>
            <param name="period">Time period of offer. Minimum 2 days. Maximum 120 days.</param>
            <param name="flags">Funding flags</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.GeneralApi.IBitfinexRestClientGeneralApiFunding.CloseFundingAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Return Taken "Used" or "Unused" funding.
            <para><a href="https://docs.bitfinex.com/reference/rest-auth-funding-close" /></para>
            </summary>
            <param name="id"></param>
            <param name="ct"></param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.GeneralApi.IBitfinexRestClientGeneralApiFunding.CancelFundingOfferAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Cancels an existing Funding Offer based on the offer ID entered.
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-cancel-funding-offer" /></para>
            </summary>
            <param name="offerId">The id of the offer to cancel</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.GeneralApi.IBitfinexRestClientGeneralApiFunding.CancelAllFundingOffersAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel all funding offers
            <para><a href="https://docs.bitfinex.com/reference/rest-auth-cancel-all-funding-offers" /></para>
            </summary>
            <param name="asset">Only cancel funding offers in this asset</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.GeneralApi.IBitfinexRestClientGeneralApiFunding.GetFundingLoansAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the funding loans
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-funding-loans" /></para>
            </summary>
            <param name="symbol">The symbol to get the funding loans for</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.GeneralApi.IBitfinexRestClientGeneralApiFunding.GetFundingLoansHistoryAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get the funding loan history
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-funding-loans-hist" /></para>
            </summary>
            <param name="symbol">The symbol to get history for</param>
            <param name="startTime">Start time of the data to return</param>
            <param name="endTime">End time of the data to return</param>
            <param name="limit">Max amount of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.GeneralApi.IBitfinexRestClientGeneralApiFunding.GetFundingCreditsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the funding credits
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-funding-credits" /></para>
            </summary>
            <param name="symbol">The symbol to get the funding credits for</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.GeneralApi.IBitfinexRestClientGeneralApiFunding.GetFundingCreditsHistoryAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get the funding credits history
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-funding-credits-hist" /></para>
            </summary>
            <param name="symbol">The symbol to get history for</param>
            <param name="startTime">Start time of the data to return</param>
            <param name="endTime">End time of the data to return</param>
            <param name="limit">Max amount of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.GeneralApi.IBitfinexRestClientGeneralApiFunding.GetFundingTradesHistoryAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get the funding trades history
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-funding-trades-hist" /></para>
            </summary>
            <param name="symbol">The symbol to get history for</param>
            <param name="startTime">Start time of the data to return</param>
            <param name="endTime">End time of the data to return</param>
            <param name="limit">Max amount of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.GeneralApi.IBitfinexRestClientGeneralApiFunding.GetFundingInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get funding info for a symbol
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-info-funding" /></para>
            </summary>
            <param name="symbol">The symbol to get the info for</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.GeneralApi.IBitfinexRestClientGeneralApiFunding.SubmitFundingAutoRenewAsync(System.String,System.Boolean,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Activate or deactivate auto-renew. Allows you to specify the currency, amount, rate, and period.
            <para><a href="https://docs.bitfinex.com/reference/rest-auth-funding-auto-renew" /></para>
            </summary>
            <param name="asset">Currency for which to enable auto-renew</param>
            <param name="status">1 to activate, 0 to deactivate.</param>
            <param name="quantity">Amount to be auto-renewed (Minimum 50 USD equivalent).</param>
            <param name="rate">Percentage rate at which to auto-renew. (rate == 0 to renew at FRR).</param>
            <param name="period">Period in days.</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.GeneralApi.IBitfinexRestClientGeneralApiFunding.KeepFundingAsync(Bitfinex.Net.Enums.FundType,System.Collections.Generic.IEnumerable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Toggle to keep funding taken. Specify loan for unused funding and credit for used funding.
            <para><a href="https://docs.bitfinex.com/reference/rest-auth-keep-funding" /></para>
            </summary>
            <param name="type">Funding type</param>
            <param name="ids">Ids</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.GeneralApi.IBitfinexRestClientGeneralApiFunding.GetFundingAutoRenewStatusAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Status of auto-renew.
            </summary>
            <param name="asset">Currency for which to enable auto-renew</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:Bitfinex.Net.Interfaces.Clients.IBitfinexRestClient">
            <summary>
            Client for accessing the Bitfinex API. 
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Interfaces.Clients.IBitfinexRestClient.GeneralApi">
            <summary>
            General endpoints
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Interfaces.Clients.IBitfinexRestClient.SpotApi">
            <summary>
            Spot endpoints
            </summary>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.IBitfinexRestClient.SetApiCredentials(CryptoExchange.Net.Authentication.ApiCredentials)">
            <summary>
            Set the API credentials for this client. All Api clients in this client will use the new credentials, regardless of earlier set options.
            </summary>
            <param name="credentials">The credentials to set</param>
        </member>
        <member name="T:Bitfinex.Net.Interfaces.Clients.IBitfinexSocketClient">
            <summary>
            Client for accessing the Bitfinex websocket API
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Interfaces.Clients.IBitfinexSocketClient.SpotApi">
            <summary>
            Spot streams
            </summary>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.IBitfinexSocketClient.SetApiCredentials(CryptoExchange.Net.Authentication.ApiCredentials)">
            <summary>
            Set the API credentials for this client. All Api clients in this client will use the new credentials, regardless of earlier set options.
            </summary>
            <param name="credentials">The credentials to set</param>
        </member>
        <member name="T:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApi">
            <summary>
            Spot API endpoints
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApi.Account">
            <summary>
            Endpoints related to account settings, info or actions
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApi.ExchangeData">
            <summary>
            Endpoints related to retrieving market and system data
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApi.Trading">
            <summary>
            Endpoints related to orders and trades
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApi.CommonSpotClient">
            <summary>
            Get the ISpotClient for this client. This is a common interface which allows for some basic operations without knowing any details of the exchange.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiAccount">
            <summary>
            Bitfinex account endpoints. Account endpoints include balance info, withdraw/deposit info and requesting and account settings
            </summary>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiAccount.GetBalancesAsync(System.Threading.CancellationToken)">
            <summary>
            Get all balances
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-wallets" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiAccount.GetBaseMarginInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Get the base margin info
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-info-margin" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiAccount.GetSymbolMarginInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the margin info for a symbol
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-info-margin" /></para>
            </summary>
            <param name="symbol">The symbol to get the info for</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiAccount.GetMovementsAsync(System.String,System.Collections.Generic.IEnumerable{System.Int64},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get the withdrawal/deposit history
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-movements" /></para>
            </summary>
            <param name="symbol">Symbol to get history for</param>
            <param name="ids">Filter by ids</param>
            <param name="address">Filter by deposit address</param>
            <param name="startTime">Start time of the data to return</param>
            <param name="endTime">End time of the data to return</param>
            <param name="limit">Max amount of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiAccount.GetMovementsDetailsAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Get detailed information about a deposit/withdrawal
            <para><a href="https://docs.bitfinex.com/reference/movement-info" /></para>
            </summary>
            <param name="id">Id of the movement</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiAccount.GetAlertListAsync(System.Threading.CancellationToken)">
            <summary>
            Get the list of alerts
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-alerts" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiAccount.SetAlertAsync(System.String,System.Decimal,System.Threading.CancellationToken)">
            <summary>
            Set an alert
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-alert-set" /></para>
            </summary>
            <param name="symbol">The symbol to set the alert for</param>
            <param name="price">The price to set the alert for</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiAccount.DeleteAlertAsync(System.String,System.Decimal,System.Threading.CancellationToken)">
            <summary>
            Delete an existing alert
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-alert-del" /></para>
            </summary>
            <param name="symbol">The symbol of the alert to delete</param>
            <param name="price">The price of the alert to delete</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiAccount.GetAvailableBalanceAsync(System.String,Bitfinex.Net.Enums.OrderSide,System.Decimal,Bitfinex.Net.Enums.WalletType,System.Nullable{System.Decimal},System.Threading.CancellationToken)">
            <summary>
            Calculates the available balance for a symbol at a specific rate
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-calc-order-avail" /></para>
            </summary>
            <param name="symbol">The symbol</param>
            <param name="side">Buy or sell</param>
            <param name="rate">The rate/price</param>
            <param name="type">The wallet type</param>
            <param name="leverage">Leverage that you want to use in calculating the max order amount (DERIV only)</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiAccount.GetLedgerEntriesAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get changes in your balance for an asset
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-ledgers" /></para>
            </summary>
            <param name="asset">The asset to check the ledger for</param>
            <param name="startTime">Start time of the data to return</param>
            <param name="endTime">End time of the data to return</param>
            <param name="limit">Max amount of results</param>
            <param name="category">Filter by category, see https://docs.bitfinex.com/reference#rest-auth-ledgers</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiAccount.GetUserInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Gets information about the user associated with the api key/secret
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-info-user" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiAccount.Get30DaySummaryAndFeesAsync(System.Threading.CancellationToken)">
            <summary>
            Provides an overview of the different fee rates for the account as well as the LEO discount level and the average amount of LEO held over the last 30 days.
            <para><a href="https://docs.bitfinex.com/reference/rest-auth-summary" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiAccount.GetDepositAddressAsync(System.String,Bitfinex.Net.Enums.WithdrawWallet,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Gets a deposit address for an asset
            <para><a href="https://docs.bitfinex.com/v1/reference#rest-auth-deposit" /></para>
            </summary>
            <param name="method">The method to get address for. Methods can be retrieved via ExchangeData.GetAssetDepositWithdrawalMethodsAsync</param>
            <param name="toWallet">The type of wallet the deposit is for</param>
            <param name="forceNew">If true a new address will be generated (previous addresses will still be valid)</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiAccount.WalletTransferAsync(System.String,System.Decimal,Bitfinex.Net.Enums.WithdrawWallet,Bitfinex.Net.Enums.WithdrawWallet,System.String,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Transfers funds from one wallet to another
            <para><a href="https://docs.bitfinex.com/reference/rest-auth-transfer" /></para>
            </summary>
            <param name="asset">The asset to transfer</param>
            <param name="fromWallet">The wallet to remove funds from</param>
            <param name="toWallet">The wallet to add funds to</param>
            <param name="quantity">The quantity to transfer</param>
            <param name="toAsset">The asset that you would like to exchange to (USTF0 === USDT for derivatives pairs)</param>
            <param name="emailDestination">Allows transfer of funds to a sub- or master-account identified by the associated email address.</param>
            <param name="userIdDestination">Allows transfer of funds to a sub- or master-account identified by the associated user id.</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiAccount.WithdrawAsync(System.String,Bitfinex.Net.Enums.WithdrawWallet,System.Decimal,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Withdraw funds from Bitfinex, either to a crypto currency address or a bank account
            All withdrawals need the withdrawType, wallet and quantity parameters
            CryptoCurrency withdrawals need the address parameters, the paymentId can be used for Monero as payment id and for Ripple as tag
            Wire withdrawals need the bank parameters. In some cases your bank will require the use of an intermediary bank, if this is the case, please supply those fields as well.
            <para><a href="https://docs.bitfinex.com/v1/reference#rest-auth-withdrawal" /></para>
            </summary>
            <param name="withdrawType">The type of funds to withdraw</param>
            <param name="wallet">The wallet to withdraw from</param>
            <param name="quantity">The quantity to withdraw</param>
            <param name="address">The destination of the withdrawal</param>
            <param name="accountNumber">The account number</param>
            <param name="bankSwift">The SWIFT code of the bank</param>
            <param name="bankName">The bank name</param>
            <param name="bankAddress">The bank address</param>
            <param name="bankCity">The bank city</param>
            <param name="bankCountry">The bank country</param>
            <param name="paymentDetails">Message for the receiver</param>
            <param name="expressWire">Whether it is an express wire withdrawal</param>
            <param name="intermediaryBankName">Intermediary bank name</param>
            <param name="intermediaryBankAddress">Intermediary bank address</param>
            <param name="intermediaryBankCity">Intermediary bank city</param>
            <param name="intermediaryBankCountry">Intermediary bank country</param>
            <param name="intermediaryBankAccount">Intermediary bank account</param>
            <param name="intermediaryBankSwift">Intermediary bank SWIFT code</param>
            <param name="accountName">The name of the account</param>
            <param name="paymentId">Hex string for Monero transaction</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiAccount.GetLoginHistoryAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get login history
            <para><a href="https://docs.bitfinex.com/reference/rest-auth-logins-hist" /></para>
            </summary>
            <param name="startTime">Start time of the data to return</param>
            <param name="endTime">End time of the data to return</param>
            <param name="limit">Max amount of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiAccount.GetApiKeyPermissionsAsync(System.Threading.CancellationToken)">
            <summary>
            Get api key permissions
            <para><a href="https://docs.bitfinex.com/reference/key-permissions" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiAccount.GetAccountChangeLogAsync(System.Threading.CancellationToken)">
            <summary>
            Get account change log
            <para><a href="https://docs.bitfinex.com/reference/rest-auth-audit-hist" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiExchangeData">
            <summary>
            Bitfinex exchange data endpoints. Exchange data includes market data (tickers, order books, etc) and system status.
            </summary>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiExchangeData.GetPlatformStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the platform status
            <para><a href="https://docs.bitfinex.com/reference#rest-public-platform-status" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns>Whether Bitfinex platform is running normally or not</returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiExchangeData.GetAssetsListAsync(System.Threading.CancellationToken)">
            <summary>
            Gets a list of supported assets
            <para><a href="https://docs.bitfinex.com/reference#rest-public-conf" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiExchangeData.GetTickerAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns basic market data for the provided symbols
            <para><a href="https://docs.bitfinex.com/reference#rest-public-ticker" /></para>
            </summary>
            <param name="symbol">The symbol to get data for</param>
            <param name="ct">Cancellation token</param>
            <returns>Symbol data</returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiExchangeData.GetFundingTickerAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns basic market data for the provided funding symbols
            <para><a href="https://docs.bitfinex.com/reference#rest-public-ticker" /></para>
            </summary>
            <param name="symbol">The symbol to get data for</param>
            <param name="ct">Cancellation token</param>
            <returns>Symbol data</returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiExchangeData.GetTickersAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Returns basic market data for the provided symbols
            <para><a href="https://docs.bitfinex.com/reference#rest-public-tickers" /></para>
            </summary>
            <param name="symbols">The symbols to get data for</param>
            <param name="ct">Cancellation token</param>
            <returns>Symbol data</returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiExchangeData.GetFundingTickersAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Returns basic market data for the provided funding symbols
            <para><a href="https://docs.bitfinex.com/reference#rest-public-tickers" /></para>
            </summary>
            <param name="symbols">The symbols to get data for</param>
            <param name="ct">Cancellation token</param>
            <returns>Symbol data</returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiExchangeData.GetTickerHistoryAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Get ticker history
            </summary>
            <param name="symbols">Symbols</param>
            <param name="limit">The amount of results</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiExchangeData.GetTradeHistoryAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Bitfinex.Net.Enums.Sorting},System.Threading.CancellationToken)">
            <summary>
            Get recent trades for a symbol
            <para><a href="https://docs.bitfinex.com/reference#rest-public-trades" /></para>
            </summary>
            <param name="symbol">The symbol to get trades for</param>
            <param name="limit">The amount of results</param>
            <param name="startTime">The start time to return trades for</param>
            <param name="endTime">The end time to return trades for</param>
            <param name="sorting">The way the result is sorted</param>
            <param name="ct">Cancellation token</param>
            <returns>Trades for the symbol</returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiExchangeData.GetOrderBookAsync(System.String,Bitfinex.Net.Enums.Precision,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the order book for a trading symbol
            <para><a href="https://docs.bitfinex.com/reference#rest-public-book" /></para>
            </summary>
            <param name="symbol">The symbol to get the order book for</param>
            <param name="precision">The precision of the data</param>
            <param name="limit">The amount of results in the book</param>
            <param name="ct">Cancellation token</param>
            <returns>The order book for the symbol</returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiExchangeData.GetFundingOrderBookAsync(System.String,Bitfinex.Net.Enums.Precision,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the order book for a funding symbol
            <para><a href="https://docs.bitfinex.com/reference#rest-public-book" /></para>
            </summary>
            <param name="symbol">The symbol to get the order book for</param>
            <param name="precision">The precision of the data</param>
            <param name="limit">The amount of results in the book</param>
            <param name="ct">Cancellation token</param>
            <returns>The order book for the symbol</returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiExchangeData.GetRawOrderBookAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get the raw order book for a trading symbol
            <para><a href="https://docs.bitfinex.com/reference#rest-public-book" /></para>
            </summary>
            <param name="symbol">The symbol</param>
            <param name="limit">The amount of results in the book</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiExchangeData.GetRawFundingOrderBookAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get the raw order book for a funding symbol
            <para><a href="https://docs.bitfinex.com/reference#rest-public-book" /></para>
            </summary>
            <param name="symbol">The symbol</param>
            <param name="limit">The amount of results in the book</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiExchangeData.GetLastKlineAsync(System.String,Bitfinex.Net.Enums.KlineInterval,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the last kline for a symbol
            <para><a href="https://docs.bitfinex.com/reference#rest-public-candles" /></para>
            </summary>
            <param name="interval">The time frame of the kline</param>
            <param name="symbol">The symbol to get the kline for</param>
            <param name="fundingPeriod">The Funding period. Only required for funding candles. Enter after the symbol (trade:1m:fUSD:p30/hist).</param>
            <param name="ct">Cancellation token</param>
            <returns>The last kline for the symbol</returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiExchangeData.GetKlinesAsync(System.String,Bitfinex.Net.Enums.KlineInterval,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Bitfinex.Net.Enums.Sorting},System.Threading.CancellationToken)">
            <summary>
            Gets klines for a symbol
            <para><a href="https://docs.bitfinex.com/reference#rest-public-candles" /></para>
            </summary>
            <param name="interval">The time frame of the klines</param>
            <param name="symbol">The symbol to get the klines for</param>
            <param name="fundingPeriod">The Funding period. Only required for funding candles. Enter after the symbol (trade:1m:fUSD:p30/hist).</param>
            <param name="limit">The amount of results</param>
            <param name="startTime">The start time of the klines</param>
            <param name="endTime">The end time of the klines</param>
            <param name="sorting">The way the result is sorted</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiExchangeData.GetAveragePriceAsync(System.String,System.Decimal,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Calculate the average execution price
            <para><a href="https://docs.bitfinex.com/reference#rest-public-calc-market-average-price" /></para>
            </summary>
            <param name="symbol">The symbol to calculate for</param>
            <param name="quantity">The quantity to execute</param>
            <param name="rateLimit">Limit to price</param>
            <param name="period">Maximum period for margin funding</param>
            <param name="ct">Cancellation token</param>
            <returns>The average price at which the execution would happen</returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiExchangeData.GetForeignExchangeRateAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Returns the exchange rate for the assets
            <para><a href="https://docs.bitfinex.com/reference#rest-public-calc-foreign-exchange-rate" /></para>
            </summary>
            <param name="asset1">The first asset</param>
            <param name="asset2">The second asset</param>
            <param name="ct">Cancellation token</param>
            <returns>Exchange rate</returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiExchangeData.GetDerivativesStatusAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Get derivatives status info
            <para><a href="https://docs.bitfinex.com/reference/rest-public-derivatives-status" /></para>
            </summary>
            <param name="symbols">Filter symbols</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiExchangeData.GetDerivativesStatusHistoryAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Bitfinex.Net.Enums.Sorting},System.Threading.CancellationToken)">
            <summary>
            Get derivatives status info history
            <para><a href="https://docs.bitfinex.com/reference/rest-public-derivatives-status-history" /></para>
            </summary>
            <param name="symbol">The symbol</param>
            <param name="limit">The amount of results</param>
            <param name="startTime">The start time of the data</param>
            <param name="endTime">The end time of the data</param>
            <param name="sorting">The way the result is sorted</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiExchangeData.GetLiquidationsAsync(System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Bitfinex.Net.Enums.Sorting},System.Threading.CancellationToken)">
            <summary>
            Get liquidation history
            <para><a href="https://docs.bitfinex.com/reference/rest-public-liquidations" /></para>
            </summary>
            <param name="limit">The amount of results</param>
            <param name="startTime">The start time of the data</param>
            <param name="endTime">The end time of the data</param>
            <param name="sorting">The way the result is sorted</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiExchangeData.GetFundingStatisticsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Get a list of the most recent funding data for the given asset: FRR, average period, total amount provided, total amount used
            <para><a href="https://docs.bitfinex.com/reference/rest-public-funding-stats" /></para>
            </summary>
            <param name="symbol"></param>
            <param name="limit"></param>
            <param name="startTime"></param>
            <param name="endTime"></param>
            <param name="ct"></param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiExchangeData.GetFundingSizeAsync(System.String,Bitfinex.Net.Enums.StatSection,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Bitfinex.Net.Enums.Sorting},System.Threading.CancellationToken)">
            <summary>
            Get total active funding in specified asset
            <para><a href="https://docs.bitfinex.com/reference/rest-public-conf" /></para>
            </summary>
            <param name="asset">The asset</param>
            <param name="section">Section of data</param>
            <param name="limit">Max number of results</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="sorting">Sorting</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiExchangeData.GetCreditSizeAsync(System.String,Bitfinex.Net.Enums.StatSection,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Bitfinex.Net.Enums.Sorting},System.Threading.CancellationToken)">
            <summary>
            Get total funding used in positions in specified asset
            <para><a href="https://docs.bitfinex.com/reference/rest-public-conf" /></para>
            </summary>
            <param name="asset">The asset</param>
            <param name="section">Section of data</param>
            <param name="limit">Max number of results</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="sorting">Sorting</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiExchangeData.GetCreditSizeAsync(System.String,System.String,Bitfinex.Net.Enums.StatSection,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Bitfinex.Net.Enums.Sorting},System.Threading.CancellationToken)">
            <summary>
            Get total funding used in positions on a specific symbol in specified asset
            <para><a href="https://docs.bitfinex.com/reference/rest-public-conf" /></para>
            </summary>
            <param name="asset">The asset</param>
            <param name="symbol">The symbol</param>
            <param name="section">Section of data</param>
            <param name="limit">Max number of results</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="sorting">Sorting</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiExchangeData.GetLongsShortsTotalsAsync(System.String,Bitfinex.Net.Enums.StatSide,Bitfinex.Net.Enums.StatSection,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Bitfinex.Net.Enums.Sorting},System.Threading.CancellationToken)">
            <summary>
            Get total longs/shorts in base currency (i.e. BTC for tBTCUSD)
            <para><a href="https://docs.bitfinex.com/reference/rest-public-conf" /></para>
            </summary>
            <param name="symbol">The symbol</param>
            <param name="side">Position side</param>
            <param name="section">Section of data</param>
            <param name="limit">Max number of results</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="sorting">Sorting</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiExchangeData.GetTradingVolumeAsync(System.Int32,Bitfinex.Net.Enums.StatSection,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Bitfinex.Net.Enums.Sorting},System.Threading.CancellationToken)">
            <summary>
            Get trading volume on the platform
            <para><a href="https://docs.bitfinex.com/reference/rest-public-conf" /></para>
            </summary>
            <param name="period">The period in days to get the data for. 1, 7 or 30</param>
            <param name="section">Section of data</param>
            <param name="limit">Max number of results</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="sorting">Sorting</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiExchangeData.GetVolumeWeightedAveragePriceAsync(System.String,Bitfinex.Net.Enums.StatSection,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Bitfinex.Net.Enums.Sorting},System.Threading.CancellationToken)">
            <summary>
            Get volume weighted average price for the day
            <para><a href="https://docs.bitfinex.com/reference/rest-public-conf" /></para>
            </summary>
            <param name="symbol">The symbol</param>
            <param name="section">Section of data</param>
            <param name="limit">Max number of results</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="sorting">Sorting</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiExchangeData.GetSymbolNamesAsync(Bitfinex.Net.Enums.SymbolType,System.Threading.CancellationToken)">
            <summary>
            Get symbol names
            <para><a href="https://docs.bitfinex.com/reference/rest-public-conf" /></para>
            </summary>
            <param name="type">The types of symbol</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiExchangeData.GetAssetNamesAsync(System.Threading.CancellationToken)">
            <summary>
            Get asset names
            <para><a href="https://docs.bitfinex.com/reference/rest-public-conf" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiExchangeData.GetAssetSymbolsAsync(System.Threading.CancellationToken)">
            <summary>
            Get mapping of assets to their API symbol
            <para><a href="https://docs.bitfinex.com/reference/rest-public-conf" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiExchangeData.GetAssetFullNamesAsync(System.Threading.CancellationToken)">
            <summary>
            Get mapping of assets to their full name
            <para><a href="https://docs.bitfinex.com/reference/rest-public-conf" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiExchangeData.GetAssetUnitsAsync(System.Threading.CancellationToken)">
            <summary>
            Get mapping of assets to their unit of measure where applicable
            <para><a href="https://docs.bitfinex.com/reference/rest-public-conf" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiExchangeData.GetAssetUnderlyingsAsync(System.Threading.CancellationToken)">
            <summary>
            Get mapping of derivative assets to their underlying asset
            <para><a href="https://docs.bitfinex.com/reference/rest-public-conf" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiExchangeData.GetAssetNetworksAsync(System.Threading.CancellationToken)">
            <summary>
            Get mapping of assets to the network they operate on
            <para><a href="https://docs.bitfinex.com/reference/rest-public-conf" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiExchangeData.GetAssetBlockExplorerUrlsAsync(System.Threading.CancellationToken)">
            <summary>
            Get mapping of assets to their block explorer urls
            <para><a href="https://docs.bitfinex.com/reference/rest-public-conf" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiExchangeData.GetAssetWithdrawalFeesAsync(System.Threading.CancellationToken)">
            <summary>
            Get mapping of assets to their withdrawal fees
            <para><a href="https://docs.bitfinex.com/reference/rest-public-conf" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiExchangeData.GetAssetDepositWithdrawalMethodsAsync(System.Threading.CancellationToken)">
            <summary>
            Get mapping of assets to their withdrwal methods
            <para><a href="https://docs.bitfinex.com/reference/rest-public-conf" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiExchangeData.GetSymbolsAsync(System.Threading.CancellationToken)">
            <summary>
            Get list of market information for each trading pair
            <para><a href="https://docs.bitfinex.com/reference/rest-public-conf" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiExchangeData.GetFuturesSymbolsAsync(System.Threading.CancellationToken)">
            <summary>
            Get list of market information for each derivative trading pair
            <para><a href="https://docs.bitfinex.com/reference/rest-public-conf" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiExchangeData.GetDepositWithdrawalStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Get deposit/withdrawal status info for assets
            <para><a href="https://docs.bitfinex.com/reference/rest-public-conf" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiExchangeData.GetMarginInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Get lists of active haircuts and risk coefficients on margin pairs
            <para><a href="https://docs.bitfinex.com/reference/rest-public-conf" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiExchangeData.GetDerivativesFeesAsync(System.Threading.CancellationToken)">
            <summary>
            Get derivatives fees config
            <para><a href="https://docs.bitfinex.com/reference/rest-public-conf" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiTrading">
            <summary>
            Bitfinex trading endpoints, placing and mananging orders.
            </summary>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiTrading.GetOpenOrdersAsync(System.String,System.Collections.Generic.IEnumerable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get the active orders
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-orders" /></para>
            </summary>
            <param name="symbol">Filter by symbol</param>
            <param name="orderIds">Filter by specific order ids</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiTrading.GetClosedOrdersAsync(System.String,System.Collections.Generic.IEnumerable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get the order history for a symbol for this account
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-orders-history" /></para>
            </summary>
            <param name="symbol">The symbol to get the history for</param>
            <param name="orderIds">Filter by specific order ids</param>
            <param name="startTime">Start time of the data to return</param>
            <param name="endTime">End time of the data to return</param>
            <param name="limit">Max amount of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiTrading.GetOrderTradesAsync(System.String,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Get the individual trades for an order
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-order-trades" /></para>
            </summary>
            <param name="symbol">The symbol of the order</param>
            <param name="orderId">The order Id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiTrading.GetUserTradesAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get the trade history for a symbol
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-trades" /></para>
            </summary>
            <param name="symbol">The symbol to get history for</param>
            <param name="startTime">Start time of the data to return</param>
            <param name="endTime">End time of the data to return</param>
            <param name="limit">Max amount of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiTrading.GetPositionHistoryAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get a list of historical positions
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-positions-hist" /></para>
            </summary>
            <param name="startTime">Start time of the data to return</param>
            <param name="endTime">End time of the data to return</param>
            <param name="limit">Max amount of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiTrading.PlaceOrderAsync(System.String,Bitfinex.Net.Enums.OrderSide,Bitfinex.Net.Enums.OrderType,System.Decimal,System.Decimal,System.Nullable{Bitfinex.Net.Enums.OrderFlags},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.String,System.Threading.CancellationToken)">
            <summary>
            Place a new order
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-submit-order" /></para>
            </summary>
            <param name="symbol">Symbol to place order for</param>
            <param name="side">Side of the order</param>
            <param name="type">Type of the order</param>
            <param name="price">The price for the order</param>
            <param name="quantity">The quantity of the order</param>
            <param name="affiliateCode">Affiliate code for the order</param>
            <param name="ct">Cancellation token</param>
            <param name="flags"></param>
            <param name="leverage">Set the leverage for a derivative order, supported by derivative symbol orders only. The value should be between 1 and 100 inclusive. The field is optional, if omitted the default leverage value of 10 will be used.</param>
            <param name="groupId">Group id</param>
            <param name="clientOrderId">Client order id</param>
            <param name="priceTrailing">The trailing price for a trailing stop order</param>
            <param name="priceAuxLimit">Auxiliary Limit price (for STOP LIMIT)</param>
            <param name="priceOcoStop">OCO stop price</param>
            <param name="cancelTime">datetime for automatic order cancelation</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiTrading.CancelOrderAsync(System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Cancel a specific order
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-cancel-order" /></para>
            </summary>
            <param name="orderId">The id of the order to cancel</param>
            <param name="clientOrderId">The client order id of the order to cancel</param>
            <param name="clientOrderIdDate">The date of the client order (year month and day)</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiTrading.CancelOrdersAsync(System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.Dictionary{System.Int64,System.DateTime},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Cancels open orders
            <para><a href="https://docs.bitfinex.com/reference/rest-auth-cancel-orders-multiple" /></para>
            </summary>
            <param name="orderIds">Ids of orders to cancel</param>
            <param name="groupIds">Group ids to cancel</param>
            <param name="clientOrderIds">Client order ids to cancel</param>
            <param name="all">Cancel all orders</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiTrading.ClaimPositionAsync(System.Int64,System.Decimal,System.Threading.CancellationToken)">
            <summary>
            The claim feature allows the use of funds you have in your Margin Wallet to settle a leveraged position as an exchange buy or sale
            <para><a href="https://docs.bitfinex.com/reference/rest-auth-position-claim" /></para>
            </summary>
            <param name="id">The id of the position to claim</param>
            <param name="quantity">The (partial) quantity to be claimed</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiTrading.IncreasePositionAsync(System.String,System.Decimal,System.Threading.CancellationToken)">
            <summary>
            Essentially a reverse of the Claim Position feature, the Increase Position feature allows you to create a new position using the funds in your margin wallet
            <para><a href="https://docs.bitfinex.com/reference/rest-auth-position-increase" /></para>
            </summary>
            <param name="symbol">The symbol</param>
            <param name="quantity">Quantity</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiTrading.GetIncreasePositionInfoAsync(System.String,System.Decimal,System.Threading.CancellationToken)">
            <summary>
            Returns information relevant to the increase position endpoint.
            <para><a href="https://docs.bitfinex.com/reference/rest-auth-increase-position-info" /></para>
            </summary>
            <param name="symbol">The symbol</param>
            <param name="quantity">Quantity</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiTrading.GetPositionsAsync(System.Threading.CancellationToken)">
            <summary>
            Get the active positions
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-positions" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiTrading.GetPositionsByIdAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get positions by id
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-positions-audit" /></para>
            </summary>
            <param name="ids">The id's of positions to return</param>
            <param name="startTime">Start time of the data to return</param>
            <param name="endTime">End time of the data to return</param>
            <param name="limit">Max amount of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexRestClientSpotApiTrading.GetPositionSnapshotsAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Returns position snapshots of user positions between the specified start and end perimiters. Snapshots are taken daily.
            <para><a href="https://docs.bitfinex.com/reference/rest-auth-positions-snap" /></para>
            </summary>
            <param name="startTime">Start time of the data to return</param>
            <param name="endTime">End time of the data to return</param>
            <param name="limit">Max amount of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexSocketClientSpotApi">
            <summary>
            Bitfinex spot streams
            </summary>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexSocketClientSpotApi.SubscribeToTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitfinex.Net.Objects.Models.Socket.BitfinexStreamTicker}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to ticker updates for a symbol. Use SubscribeToFundingTickerUpdatesAsync for funding symbol ticker updates
            <para><a href="https://docs.bitfinex.com/reference#ws-public-ticker" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe to</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexSocketClientSpotApi.SubscribeToFundingTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitfinex.Net.Objects.Models.BitfinexStreamFundingTicker}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to funding ticker updates a symbol. Use SubscribeToTickerUpdatesAsync for trade symbol ticker updates
            <para><a href="https://docs.bitfinex.com/reference#ws-public-ticker" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe to</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexSocketClientSpotApi.SubscribeToOrderBookUpdatesAsync(System.String,Bitfinex.Net.Enums.Precision,Bitfinex.Net.Enums.Frequency,System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitfinex.Net.Objects.Models.BitfinexOrderBookEntry}}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Int32}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to order book updates for a symbol. Use SubscribeToFundingOrderBookUpdatesAsync for funding symbol ticker updates
            <para><a href="https://docs.bitfinex.com/reference#ws-public-books" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe to</param>
            <param name="precision">The precision of the updates</param>
            <param name="frequency">The frequency of updates</param>
            <param name="length">The range for the order book updates, either 25 or 100</param>
            <param name="handler">The handler for the data</param>
            <param name="checksumHandler">The handler for the checksum, can be used to validate a order book implementation</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexSocketClientSpotApi.SubscribeToFundingOrderBookUpdatesAsync(System.String,Bitfinex.Net.Enums.Precision,Bitfinex.Net.Enums.Frequency,System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitfinex.Net.Objects.Models.BitfinexOrderBookFundingEntry}}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Int32}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to funding order book updates for a symbol. Use SubscribeToOrderBookUpdatesAsync for trade symbol ticker updates
            <para><a href="https://docs.bitfinex.com/reference#ws-public-books" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe to</param>
            <param name="precision">The precision of the updates</param>
            <param name="frequency">The frequency of updates</param>
            <param name="length">The range for the order book updates, either 25 or 100</param>
            <param name="handler">The handler for the data</param>
            <param name="checksumHandler">The handler for the checksum, can be used to validate a order book implementation</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexSocketClientSpotApi.SubscribeToRawOrderBookUpdatesAsync(System.String,System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitfinex.Net.Objects.Models.BitfinexRawOrderBookEntry}}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Int32}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to raw order book updates for a symbol. Use SubscribeToRawFundingOrderBookUpdatesAsync for funding symbol ticker updates
            <para><a href="https://docs.bitfinex.com/reference#ws-public-raw-books" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe to</param>
            <param name="limit">The range for the order book updates</param>
            <param name="handler">The handler for the data</param>
            <param name="checksumHandler">The handler for the checksum, can be used to validate a order book implementation</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexSocketClientSpotApi.SubscribeToRawFundingOrderBookUpdatesAsync(System.String,System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitfinex.Net.Objects.Models.BitfinexRawOrderBookFundingEntry}}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Int32}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to raw order book updates for a symbol. Use SubscribeToRawOrderBookUpdatesAsync for trade symbol ticker updates
            <para><a href="https://docs.bitfinex.com/reference#ws-public-raw-books" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe to</param>
            <param name="limit">The range for the order book updates</param>
            <param name="handler">The handler for the data</param>
            <param name="checksumHandler">The handler for the checksum, can be used to validate a order book implementation</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexSocketClientSpotApi.SubscribeToTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitfinex.Net.Objects.Models.BitfinexTradeSimple}}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to public trade updates for a symbol
            <para><a href="https://docs.bitfinex.com/reference#ws-public-trades" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe to</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexSocketClientSpotApi.SubscribeToKlineUpdatesAsync(System.String,Bitfinex.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitfinex.Net.Objects.Models.BitfinexKline}}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to kline updates for a symbol
            <para><a href="https://docs.bitfinex.com/reference#ws-public-candles" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe to. For funding klines use {symbol}:p{period}, for example fUSD:p30</param>
            <param name="interval">The interval of the klines</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexSocketClientSpotApi.SubscribeToLiquidationUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitfinex.Net.Objects.Models.BitfinexLiquidation}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to liquidation updates
            <para><a href="https://docs.bitfinex.com/reference/ws-public-status" /></para>
            </summary>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexSocketClientSpotApi.SubscribeToDerivativesUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitfinex.Net.Objects.Models.BitfinexDerivativesStatusUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to derivatives status updates
            <para><a href="https://docs.bitfinex.com/reference/ws-public-status" /></para>
            </summary>
            <param name="symbol">The derivatives symbol, tBTCF0:USTF0 for example</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexSocketClientSpotApi.SubscribeToUserUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitfinex.Net.Objects.Models.BitfinexOrder}}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitfinex.Net.Objects.Models.BitfinexPosition}}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitfinex.Net.Objects.Models.BitfinexFundingOffer}}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitfinex.Net.Objects.Models.BitfinexFundingCredit}}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitfinex.Net.Objects.Models.BitfinexFunding}}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitfinex.Net.Objects.Models.BitfinexWallet}}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitfinex.Net.Objects.Models.BitfinexBalance}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitfinex.Net.Objects.Models.BitfinexTradeDetails}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitfinex.Net.Objects.Models.BitfinexFundingTrade}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitfinex.Net.Objects.Models.BitfinexFundingInfo}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitfinex.Net.Objects.Models.BitfinexMarginBase}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitfinex.Net.Objects.Models.BitfinexMarginSymbol}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to trading information updates
            <para><a href="https://docs.bitfinex.com/reference#ws-auth-trades" /></para>
            </summary>
            <param name="orderHandler">Data handler for order updates. Can be null if not interested</param>
            <param name="tradeHandler">Data handler for trade execution updates. Can be null if not interested</param>
            <param name="positionHandler">Data handler for position updates. Can be null if not interested</param>
            <param name="fundingOfferHandler">Data handler for funding offer updates. Can be null if not interested</param>
            <param name="fundingCreditHandler">Data handler for funding credit updates. Can be null if not interested</param>
            <param name="fundingLoanHandler">Data handler for funding loan updates. Can be null if not interested</param>
            <param name="walletHandler">Data handler for wallet updates. Can be null if not interested</param>
            <param name="balanceHandler">Data handler for balance updates. Can be null if not interested</param>
            <param name="fundingTradeHandler">Data handler for funding trade updates. Can be null if not interested</param>
            <param name="fundingInfoHandler">Data handler for funding info updates. Can be null if not interested</param>
            <param name="marginBaseHandler">Data handler for margin base updates. Can be null if not interested</param>
            <param name="marginSymbolHandler">Data handler for margin symbol updates. Can be null if not interested</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexSocketClientSpotApi.PlaceOrderAsync(Bitfinex.Net.Enums.OrderSide,Bitfinex.Net.Enums.OrderType,System.String,System.Decimal,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Bitfinex.Net.Enums.OrderFlags},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String)">
            <summary>
            Places a new order
            <para><a href="https://docs.bitfinex.com/reference#ws-auth-input-order-new" /></para>
            </summary>
            <param name="side">The order side</param>
            <param name="type">The type of the order</param>
            <param name="symbol">The symbol the order is for</param>
            <param name="quantity">The quantity of the order, positive for buying, negative for selling</param>
            <param name="groupId">Group id to assign to the order</param>
            <param name="clientOrderId">Client order id to assign to the order</param>
            <param name="price">Price of the order</param>
            <param name="priceTrailing">Trailing price of the order</param>
            <param name="priceAuxiliaryLimit">Auxiliary limit price of the order</param>
            <param name="priceOcoStop">Oco stop price of the order</param>
            <param name="flags">Additional flags</param>
            <param name="leverage">Leverage</param>
            <param name="cancelTime">Automatically cancel the order after this time</param>
            <param name="affiliateCode">Affiliate code for the order</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexSocketClientSpotApi.CancelAllOrdersAsync">
            <summary>
            Cancel all orders
            <para><a href="https://docs.bitfinex.com/reference/ws-auth-input-order-cancel-multi" /></para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexSocketClientSpotApi.UpdateOrderAsync(System.Int64,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Bitfinex.Net.Enums.OrderFlags})">
            <summary>
            Updates an order
            <para><a href="https://docs.bitfinex.com/reference#ws-auth-input-order-update" /></para>
            </summary>
            <param name="orderId">The id of the order to update</param>
            <param name="price">The new price of the order</param>
            <param name="quantity">The new quantity of the order</param>
            <param name="delta">The delta to change</param>
            <param name="priceAuxiliaryLimit">the new aux limit price</param>
            <param name="priceTrailing">The new trailing price</param>
            <param name="flags">The new flags</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexSocketClientSpotApi.CancelOrderAsync(System.Int64)">
            <summary>
            Cancels an order
            <para><a href="https://docs.bitfinex.com/reference#ws-auth-input-order-cancel" /></para>
            </summary>
            <param name="orderId">The id of the order to cancel</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexSocketClientSpotApi.CancelOrdersByGroupIdAsync(System.Int64)">
            <summary>
            Cancels multiple orders based on their groupId
            <para><a href="https://docs.bitfinex.com/reference#ws-auth-input-order-cancel" /></para>
            </summary>
            <param name="groupOrderId">The group id to cancel</param>
            <returns>True if successfully committed on server</returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexSocketClientSpotApi.CancelOrdersByGroupIdsAsync(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Cancels multiple orders based on their groupIds
            <para><a href="https://docs.bitfinex.com/reference#ws-auth-input-order-cancel-multi" /></para>
            </summary>
            <param name="groupOrderIds">The group ids to cancel</param>
            <returns>True if successfully committed on server</returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexSocketClientSpotApi.CancelOrdersAsync(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Cancels multiple orders based on their order ids
            <para><a href="https://docs.bitfinex.com/reference#ws-auth-input-order-cancel-multi" /></para>
            </summary>
            <param name="orderIds">The order ids to cancel</param>
            <returns>True if successfully committed on server</returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexSocketClientSpotApi.CancelOrdersByClientOrderIdsAsync(System.Collections.Generic.Dictionary{System.Int64,System.DateTime})">
            <summary>
            Cancels multiple orders based on their clientOrderIds
            <para><a href="https://docs.bitfinex.com/reference#ws-auth-input-order-cancel-multi" /></para>
            </summary>
            <param name="clientOrderIds">The client order ids to cancel, listed as (clientOrderId, Day) pair. ClientOrderIds are unique per day, so timestamp should be provided</param>
            <returns>True if successfully committed on server</returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexSocketClientSpotApi.SubmitFundingOfferAsync(Bitfinex.Net.Enums.FundingOfferType,System.String,System.Decimal,System.Decimal,System.Int32,System.Nullable{System.Int32})">
            <summary>
            Submit a new funding offer
            <para><a href="https://docs.bitfinex.com/reference/ws-auth-input-offer-new" /></para>
            </summary>
            <param name="type">Offer type</param>
            <param name="symbol">Symbol</param>
            <param name="quantity">Amount (more than 0 for offer, less than 0 for bid)</param>
            <param name="price">Rate (or offset for FRRDELTA offers)</param>
            <param name="period">Time period of offer. Minimum 2 days. Maximum 120 days.</param>
            <param name="flags">Flags</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexSocketClientSpotApi.CancelFundingOfferAsync(System.Int64)">
            <summary>
            Cancel a funding offer
            <para><a href="https://docs.bitfinex.com/reference/ws-auth-input-offer-cancel" /></para>
            </summary>
            <param name="id">Id of the offer to cancel</param>
            <returns></returns>
        </member>
        <member name="T:Bitfinex.Net.Interfaces.IBitfinexOrderBookFactory">
            <summary>
            Bitfinex order book factory
            </summary>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.IBitfinexOrderBookFactory.Create(System.String,System.Action{Bitfinex.Net.Objects.Options.BitfinexOrderBookOptions})">
            <summary>
            Create a SymbolOrderBook
            </summary>
            <param name="symbol">The symbol</param>
            <param name="options">Book options</param>
            <returns></returns>
        </member>
        <member name="T:Bitfinex.Net.Objects.BitfinexApiAddresses">
            <summary>
            Api addresses usable for the Bitfinex clients
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.BitfinexApiAddresses.RestClientAddress">
            <summary>
            The address used by the BitfinexClient for the rest API
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.BitfinexApiAddresses.SocketClientAddress">
            <summary>
            The address used by the BitfinexSocketClient for the socket API
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Objects.BitfinexApiAddresses.Default">
            <summary>
            The default addresses to connect to the Bitfinex.com API
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Internal.BitfinexMeta">
            <summary>
            Order meta data
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Internal.BitfinexMeta.AffiliateCode">
            <summary>
            The affiliate code for the order
            </summary>
        </member>
        <member name="M:Bitfinex.Net.Objects.Internal.BitfinexNonceProvider.GetNonce">
            <inheritdoc />
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexAlert">
            <summary>
            Alert
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexAlert.AlertKey">
            <summary>
            The key of the alert
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexAlert.AlertType">
            <summary>
            The type of the alert
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexAlert.Symbol">
            <summary>
            The symbol the alert is for
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexAlert.Price">
            <summary>
            The price of the alert
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexAlert.T">
            <summary>
            
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexAsset">
            <summary>
            Asset info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexAsset.Name">
            <summary>
            The shorthand name of the asset
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexAsset.FullName">
            <summary>
            The full name of the asset
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexAssetInfo">
            <summary>
            Asset info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexAssetInfo.Method">
            <summary>
            Method name
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexAssetInfo.DepositStatus">
            <summary>
            Status of deposits
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexAssetInfo.WithdrawalStatus">
            <summary>
            Status of withdrawals
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexAssetInfo.PaymentIdDeposits">
            <summary>
            Payment id for deposits
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexAssetInfo.PaymentIdWithdrawals">
            <summary>
            Payment id for deposits
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexAssetInfo.DepositConfirmations">
            <summary>
            Network confirmations required for deposits
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexAvailableBalance">
            <summary>
            Available balance
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexAvailableBalance.AvailableBalance">
            <summary>
            The available balance
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexAveragePrice">
            <summary>
            Average price info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexAveragePrice.AverageRate">
            <summary>
            The average price
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexAveragePrice.Quantity">
            <summary>
            The quantity
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexBalance">
            <summary>
            Balance
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexBalance.TotalAssets">
            <summary>
            Total Assets Under Management
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexBalance.NetAssets">
            <summary>
            Net Assets Under Management (total assets - total liabilities)
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexChangeLog">
            <summary>
            Account change log
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexChangeLog.Timestamp">
            <summary>
            Change timestamp
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexChangeLog.Log">
            <summary>
            Event
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexChangeLog.IpAddress">
            <summary>
            IP address
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexChangeLog.UserAgent">
            <summary>
            User agent
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexDepositAddress">
            <summary>
            Deposit address info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexDepositAddress.Method">
            <summary>
            The deposit method
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexDepositAddress.Asset">
            <summary>
            The asset the address is for
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexDepositAddress.Address">
            <summary>
            The deposit address
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexDepositAddress.PoolAddress">
            <summary>
            Pool address (for currencies that require a Tag/Memo/Payment_ID)
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexDerivativesFees">
            <summary>
            Derivatives fee info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexDerivativesFees.PerpetualDerivatives">
            <summary>
            Perpetual derivatives fee config
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexPerpDerivativesFees">
            <summary>
            Perp derivatives fees
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexPerpDerivativesFees.CorrectionClampMin">
            <summary>
            Correction clamp min
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexPerpDerivativesFees.CorrectionClampInsurance">
            <summary>
            Correction clamp insurance
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexPerpDerivativesFees.CorrectionSlope">
            <summary>
            Correction slope
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexDerivativesStatus">
            <summary>
            Derivatives status
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexDerivativesStatus.Symbol">
            <summary>
            The derivative symbol
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexDerivativesStatus.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexDerivativesStatus.Price">
            <summary>
            Derivative book mid price
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexDerivativesStatus.SpotPrice">
            <summary>
            Book mid price of the underlying Bitfinex spot trading pair
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexDerivativesStatus.InsuranceFundBalance">
            <summary>
            The balance available to the liquidation engine to absorb losses
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexDerivativesStatus.NextFundingTime">
            <summary>
            Next funding event timestamp
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexDerivativesStatus.NextFundingAccrued">
            <summary>
            Current accrued funding for next 8h period
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexDerivativesStatus.NextFundingStep">
            <summary>
            Accruel counter
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexDerivativesStatus.CurrentFunding">
            <summary>
            Funding applied in the current 8h period
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexDerivativesStatus.MarkPrice">
            <summary>
            Price based on the BFX Composite Index
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexDerivativesStatus.OpenInterest">
            <summary>
            Total number of outstanding derivative contracts
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexDerivativesStatus.ClampMin">
            <summary>
            Range in the average spread that does not require a funding payment
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexDerivativesStatus.ClampMax">
            <summary>
            Funding payment cap
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexDerivativesStatusUpdate">
            <summary>
            Derivatives status
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexDerivativesStatusUpdate.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexDerivativesStatusUpdate.Price">
            <summary>
            Derivative book mid price
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexDerivativesStatusUpdate.SpotPrice">
            <summary>
            Book mid price of the underlying Bitfinex spot trading pair
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexDerivativesStatusUpdate.InsuranceFundBalance">
            <summary>
            The balance available to the liquidation engine to absorb losses
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexDerivativesStatusUpdate.NextFundingTime">
            <summary>
            Next funding event timestamp
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexDerivativesStatusUpdate.NextFundingAccrued">
            <summary>
            Current accrued funding for next 8h period
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexDerivativesStatusUpdate.NextFundingStep">
            <summary>
            Accruel counter
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexDerivativesStatusUpdate.CurrentFunding">
            <summary>
            Funding applied in the current 8h period
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexDerivativesStatusUpdate.MarkPrice">
            <summary>
            Price based on the BFX Composite Index
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexDerivativesStatusUpdate.OpenInterest">
            <summary>
            Total number of outstanding derivative contracts
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexDerivativesStatusUpdate.ClampMin">
            <summary>
            Range in the average spread that does not require a funding payment
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexDerivativesStatusUpdate.ClampMax">
            <summary>
            Funding payment cap
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexForeignExchangeRate">
            <summary>
            Exchange rate in a foreign currency
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexForeignExchangeRate.CurrentRate">
            <summary>
            The current exchange rate
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexFundingAutoRenew">
            <summary>
            Activate or deactivate auto-renew. Allows you to specify the currency, amount, rate, and period.
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingAutoRenew.Symbol">
            <summary>
            Currency (USD, …)
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingAutoRenew.Period">
            <summary>
            Period in days.
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingAutoRenew.Rate">
            <summary>
            The rate of the order
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingAutoRenew.MaxQuantity">
            <summary>
            Max amount to be auto-renewed
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexFundingAutoRenewStatus">
            <summary>
            Funding auto renew status
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingAutoRenewStatus.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingAutoRenewStatus.Period">
            <summary>
            The period of the offer in days
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingAutoRenewStatus.Rate">
            <summary>
            The rate of the order
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingAutoRenewStatus.Quantity">
            <summary>
            The quantity of the offer
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexFunding">
            <summary>
            Funding info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFunding.Id">
            <summary>
            The offer id
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFunding.Symbol">
            <summary>
            The symbol of the offer
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFunding.Side">
            <summary>
            The side of the funding
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFunding.CreateTime">
            <summary>
            The creation timestamp
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFunding.UpdateTime">
            <summary>
            The last update timestamp
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFunding.Quantity">
            <summary>
            The quantity of the offer
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFunding.Flags">
            <summary>
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFunding.Status">
            <summary>
            The order status
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFunding.StatusString">
            <summary>
            The raw order status string
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFunding.Price">
            <summary>
            The price of the offer
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFunding.Period">
            <summary>
            The period of the offer in days
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFunding.OpenTime">
            <summary>
            The timestamp when the funding was opened
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFunding.LastPayoutTime">
            <summary>
            The timestamp of the last payout
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFunding.Notify">
            <summary>
            If notify
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFunding.Hidden">
            <summary>
            If hidden
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFunding.Renew">
            <summary>
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFunding.RateReal">
            <summary>
            The calculated rate
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFunding.NoClose">
            <summary>
            Whether the funding should be closed when position is closed
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexFundingCredit">
            <summary>
            Funding credit info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingCredit.PositionPair">
            <summary>
            The pair the currency was used for
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexFundingInfo">
            <summary>
            Funding info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingInfo.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingInfo.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingInfo.Data">
            <summary>
            Data
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexFundingInfoDetails">
            <summary>
            Funding info details
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingInfoDetails.YieldLoan">
            <summary>
            The weighted average rate for taken funding
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingInfoDetails.YieldLend">
            <summary>
            The weighted average rate for provided funding
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingInfoDetails.DurationLoan">
            <summary>
            The weighted average duration for taken funding
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingInfoDetails.DurationLend">
            <summary>
            The weighted average duration for provided funding
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexFundingOffer">
            <summary>
            Funding offer info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingOffer.Id">
            <summary>
            The offer id
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingOffer.Symbol">
            <summary>
            The symbol of the offer
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingOffer.CreateTime">
            <summary>
            The creation timestamp
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingOffer.UpdateTime">
            <summary>
            The last update timestamp
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingOffer.Quantity">
            <summary>
            The quantity of the offer
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingOffer.QuantityOriginal">
            <summary>
            The original quantity
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingOffer.FundingType">
            <summary>
            The funding type
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingOffer.Flags">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingOffer.Status">
            <summary>
            The status
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingOffer.StatusString">
            <summary>
            The raw status string
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingOffer.Rate">
            <summary>
            The rate of the order
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingOffer.Period">
            <summary>
            The period of the offer in days
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingOffer.Notify">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingOffer.Hidden">
            <summary>
            Whether the offer is hidden
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingOffer.Renew">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingOffer.RateReal">
            <summary>
            The calculated rate
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexFundingOrderBook">
            <summary>
            Order book
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingOrderBook.Bids">
            <summary>
            List of bids
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingOrderBook.Asks">
            <summary>
            List of asks
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexFundingStats">
            <summary>
            Funding stats
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingStats.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingStats.FlashReturnRate">
            <summary>
            1/365th of Flash Return Rate (To get the daily rate, use: rate x 365. To get the daily rate as percentage use: rate x 365 x 100. To get APR as percentage use rate x 100 x 365 x 365.)
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingStats.AveragePeriod">
            <summary>
            Average period for funding provided
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingStats.FundingAmount">
            <summary>
            	Total funding provided
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingStats.FundingAmountUsed">
            <summary>
            Total funding provided that is used in positions
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingStats.FundingBelowThreshold">
            <summary>
            Sum of open funding offers less than 0.75%
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexFundingTicker">
            <summary>
            Funding ticker information
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingTicker.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingTicker.FlashReturnRate">
            <summary>
            Flash Return Rate - average of all fixed rate funding over the last hour
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingTicker.BestBidPrice">
            <summary>
            The best bid price
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingTicker.BidPeriod">
            <summary>
            Bid period covered in days
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingTicker.BestBidQuantity">
            <summary>
            The best bid quantity
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingTicker.BestAskPrice">
            <summary>
            The best ask price
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingTicker.AskPeriod">
            <summary>
            Ask period covered in days
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingTicker.BestAskQuantity">
            <summary>
            The best ask quantity
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingTicker.DailyChange">
            <summary>
            Change versus 24 hours ago
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingTicker.DailyChangePercentage">
            <summary>
            Change percentage versus 24 hours ago
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingTicker.LastPrice">
            <summary>
            The last trade price
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingTicker.Volume">
            <summary>
            The 24 hour volume
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingTicker.HighPrice">
            <summary>
            The 24 hour high price
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingTicker.LowPrice">
            <summary>
            The 24 hour low price
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingTicker.FlashReturnRateAvailable">
            <summary>
            The amount of funding that is available at the Flash Return Rate
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexFundingTrade">
            <summary>
            Funding trade info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingTrade.Id">
            <summary>
            The id
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingTrade.Asset">
            <summary>
            The asset
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingTrade.Timestamp">
            <summary>
            The timestamp
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingTrade.OfferId">
            <summary>
            The offer id
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingTrade.Quantity">
            <summary>
            The trade quantity
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingTrade.Rate">
            <summary>
            The rate
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingTrade.Period">
            <summary>
            The period in days
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingTrade.Maker">
            <summary>
            Whether the offer took liquidity off the funding book
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexIncreasePositionInfo">
            <summary>
            Increase position info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexIncreasePositionInfo.PositionQuantityInfo">
            <summary>
            Position quantity info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexIncreasePositionInfo.Balances">
            <summary>
            Balance info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexIncreasePositionInfo.FundingInfo">
            <summary>
            Funding info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexIncreasePositionInfo.FundingAssetInfo">
            <summary>
            Funding asset info
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexIncreasePositionQuantity">
            <summary>
            Position quantity info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexIncreasePositionQuantity.MaxPosition">
            <summary>
            Max position
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexIncreasePositionQuantity.CurrentPosition">
            <summary>
            Current position
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexIncreasePositionBalances">
            <summary>
            Position balances
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexIncreasePositionBalances.BaseAssetBalance">
            <summary>
            Base asset balance
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexIncreasePositionBalances.TradableBalances">
            <summary>
            Tradable balances
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexIncreasePositionBalances.FundingAvailable">
            <summary>
            Funding available
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexIncreasePositionBalance">
            <summary>
            Balance info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexIncreasePositionBalance.TradableBalanceQuoteCurrent">
            <summary>
            Current tradable quote balance
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexIncreasePositionBalance.TradableBalanceQuoteTotal">
            <summary>
            Total tradable quote balance
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexIncreasePositionBalance.TradableBalanceBaseCurrent">
            <summary>
            Current tradable base balance
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexIncreasePositionBalance.TradableBalanceBaseTotal">
            <summary>
            Total tradable base balance
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexIncreasePositionFundingInfo">
            <summary>
            Funding info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexIncreasePositionFundingInfo.FundingValue">
            <summary>
            Funding value
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexIncreasePositionFundingInfo.FundingRequired">
            <summary>
            Funding required
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexIncreasePositionFundingAssetInfo">
            <summary>
            Funding asset info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexIncreasePositionFundingAssetInfo.FundingValueAsset">
            <summary>
            Funding value asset
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexIncreasePositionFundingAssetInfo.FundingRequiredAsset">
            <summary>
            Funding required asset
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexKline">
            <summary>
            Kline info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexKline.OpenTime">
            <summary>
            The timestamp of the kline
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexKline.OpenPrice">
            <summary>
            The opening price
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexKline.ClosePrice">
            <summary>
            The closing price
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexKline.HighPrice">
            <summary>
            The highest price
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexKline.LowPrice">
            <summary>
            The lowest price
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexKline.Volume">
            <summary>
            The volume for this kline
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexLedgerEntry">
            <summary>
            Ledger entry
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexLedgerEntry.Id">
            <summary>
            The id of the entry
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexLedgerEntry.Asset">
            <summary>
            The asset
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexLedgerEntry.Timestamp">
            <summary>
            The timestamp of the event
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexLedgerEntry.Quantity">
            <summary>
            The change quantity
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexLedgerEntry.NewBalance">
            <summary>
            The new balance
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexLedgerEntry.Description">
            <summary>
            The description of the event
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexLiquidation">
            <summary>
            Liquidation info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexLiquidation.PositionId">
            <summary>
            Position id
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexLiquidation.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexLiquidation.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexLiquidation.Quantity">
            <summary>
            Size of the position. Positive values means a long position, negative values means a short position.
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexLiquidation.BasePrice">
            <summary>
            The price at which user entered the position
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexLiquidation.IsMatch">
            <summary>
            False: initial liquidation trigger, true: market execution
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexLiquidation.IsMarketSold">
            <summary>
            False: position acquired by the system, true: direct sell into the market
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexLiquidation.AquirePrice">
            <summary>
            The price at which the position has been acquired
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexLogin">
            <summary>
            Login info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexLogin.Id">
            <summary>
            Login id
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexLogin.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexLogin.Ip">
            <summary>
            Ip
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexLogin.ExtraInfo">
            <summary>
            Extra info object
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexMarginBase">
            <summary>
            Margin base
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMarginBase.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMarginBase.Data">
            <summary>
            Data
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexMarginBaseInfo">
            <summary>
            Margin base info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMarginBaseInfo.UserProfitLoss">
            <summary>
            User profit and loss
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMarginBaseInfo.UserSwapsAmount">
            <summary>
            Amount of swaps
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMarginBaseInfo.MarginBalance">
            <summary>
            Balance in margin funding account
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMarginBaseInfo.MarginNet">
            <summary>
            Balance after profit/loss
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexMarginInfo">
            <summary>
            Margin info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMarginInfo.Conf">
            <summary>
            Conf
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMarginInfo.Initial">
            <summary>
            Initial
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMarginInfo.Minimum">
            <summary>
            Minimum
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexMarginSymbol">
            <summary>
            Margin symbol info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMarginSymbol.Topic">
            <summary>
            The topic
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMarginSymbol.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMarginSymbol.Data">
            <summary>
            Data
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexMarginSymbolInfo">
            <summary>
            Margin symbol info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMarginSymbolInfo.TradeableBalance">
            <summary>
            Trade-able balance
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMarginSymbolInfo.GrossBalance">
            <summary>
            Gross balance
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMarginSymbolInfo.Buy">
            <summary>
            Buy quantity
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMarginSymbolInfo.Sell">
            <summary>
            Sell quantity
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexMovement">
            <summary>
            Wallet movement info (deposit/withdraw)
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMovement.Id">
            <summary>
            The id of the movement
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMovement.Asset">
            <summary>
            The asset of the movement
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMovement.AssetName">
            <summary>
            The full name of the asset
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMovement.StartTime">
            <summary>
            The initial creation time
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMovement.UpdateTime">
            <summary>
            The last update time
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMovement.Status">
            <summary>
            The status of the movement
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMovement.Quantity">
            <summary>
            The quantity of the movement
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMovement.Fee">
            <summary>
            The fee paid for the movement
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMovement.Address">
            <summary>
            The address
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMovement.PaymentId">
            <summary>
            The payment id
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMovement.TransactionId">
            <summary>
            The transaction id
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMovement.WithdrawTransactionNote">
            <summary>
            Withdraw transaction note
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexMovementDetails">
            <summary>
            Wallet movement info (deposit/withdraw)
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMovementDetails.Id">
            <summary>
            The id of the movement
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMovementDetails.Asset">
            <summary>
            The asset of the movement
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMovementDetails.Method">
            <summary>
            The method
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMovementDetails.Remark">
            <summary>
            Remarks
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMovementDetails.StartTime">
            <summary>
            The initial creation time
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMovementDetails.UpdateTime">
            <summary>
            The last update time
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMovementDetails.Status">
            <summary>
            The status of the movement
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMovementDetails.Quantity">
            <summary>
            The quantity of the movement
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMovementDetails.Fee">
            <summary>
            The fee paid for the movement
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMovementDetails.Address">
            <summary>
            The address
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMovementDetails.Memo">
            <summary>
            The memo
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMovementDetails.TransactionId">
            <summary>
            The transaction id
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMovementDetails.WithdrawTransactionNote">
            <summary>
            Withdraw transaction note
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMovementDetails.BankFees">
            <summary>
            Wire bank fees
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMovementDetails.BankRouterId">
            <summary>
            Identifier of bank router
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMovementDetails.ExternalProviderMovementId">
            <summary>
            External provider movement id
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMovementDetails.ExternalProviderMovementStatus">
            <summary>
            External provider movement status
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMovementDetails.ExternalProviderMovementDescription">
            <summary>
            External provider movement description
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexOrder">
            <summary>
            Order info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.Id">
            <summary>
            The id of the order
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.GroupId">
            <summary>
            The group id of the order
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.ClientOrderId">
            <summary>
            The client order id
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.Symbol">
            <summary>
            The symbol of the order
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.CreateTime">
            <summary>
            The creation time of the order
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.UpdateTime">
            <summary>
            The last update time
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.QuantityRemaining">
            <summary>
            The quantity left
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.Side">
            <summary>
            The side of the order
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.Quantity">
            <summary>
            The original quantity
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.QuantityRaw">
            <summary>
            The original quantity as returned by the API, will be negative if it's a sell
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.Type">
            <summary>
            The order type
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.TypePrevious">
            <summary>
            The previous order type
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.TimestampTif">
            <summary>
            Tif timestamp
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.Flags">
            <summary>
            Order flags
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.Status">
            <summary>
            The status of the order
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.StatusString">
            <summary>
            The raw status string
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.Price">
            <summary>
            The price of the order
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.PriceAverage">
            <summary>
            The average price of the order (market orders)
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.PriceTrailing">
            <summary>
            The trailing price of the order
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.PriceAuxilliaryLimit">
            <summary>
            The aux limit price
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.Notify">
            <summary>
            True if operations on order must trigger a notification, false if operations on order must not trigger a notification
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.Hidden">
            <summary>
            Whether the order is hidden
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.PlacedId">
            <summary>
            If another order caused this order to be placed (OCO) this will be that other order's ID
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.Routing">
            <summary>
            Indicates origin of action: BFX, API>BFX
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.Meta">
            <summary>
            Meta data for the order
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexOrderBook">
            <summary>
            Order book
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrderBook.Bids">
            <summary>
            List of bids
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrderBook.Asks">
            <summary>
            List of asks
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexOrderBookBase">
            <summary>
            Base for order book
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexOrderBookEntry">
            <summary>
            Order book entry
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrderBookEntry.Price">
            <summary>
            The price of this entry
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrderBookEntry.Count">
            <summary>
            The amount of orders for this price
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrderBookEntry.Quantity">
            <summary>
            The total quantity for this price
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexOrderBookFundingEntry">
            <summary>
            Order book funding entry
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrderBookFundingEntry.Price">
            <summary>
            The price of this entry
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrderBookFundingEntry.Period">
            <summary>
            Period level
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrderBookFundingEntry.Count">
            <summary>
            The amount of orders for this price
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrderBookFundingEntry.Quantity">
            <summary>
            The total quantity for this price
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexRawOrderBookEntry">
            <summary>
            Raw order book entry
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexRawOrderBookEntry.OrderId">
            <summary>
            The id of this order
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexRawOrderBookEntry.Price">
            <summary>
            The price for this order
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexRawOrderBookEntry.Quantity">
            <summary>
            The quantity of this order
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexRawOrderBookFundingEntry">
            <summary>
            Raw order book entry
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexRawOrderBookFundingEntry.OrderId">
            <summary>
            The id of this order
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexRawOrderBookFundingEntry.Period">
            <summary>
            Period level
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexRawOrderBookFundingEntry.Price">
            <summary>
            The price for this order
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexRawOrderBookFundingEntry.Quantity">
            <summary>
            The quantity of this order
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexPerformance">
            <summary>
            Performance info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexPerformance.Timestamp">
            <summary>
            The timestamp of the calculation
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexPerformance.Performance">
            <summary>
            Performance rating
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexPermission">
            <summary>
            Permission info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexPermission.Scope">
            <summary>
            Permission scope
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexPermission.Read">
            <summary>
            Has read permission
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexPermission.Write">
            <summary>
            Has write permission
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexPlatformStatus">
            <summary>
            Platform status info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexPlatformStatus.Status">
            <summary>
            The current platform status
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexPosition">
            <summary>
            Position info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexPosition.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexPosition.Status">
            <summary>
            The status of the position
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexPosition.Quantity">
            <summary>
            The quantity
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexPosition.BasePrice">
            <summary>
            The base price
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexPosition.MarginFunding">
            <summary>
            The amount of funding being used
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexPosition.MarginFundingType">
            <summary>
            The funding type
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexPosition.ProfitLoss">
            <summary>
            Profit / loss
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexPosition.ProfitLossPercentage">
            <summary>
            Profit / loss percentage
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexPosition.LiquidationPrice">
            <summary>
            Liquidation price
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexPosition.Leverage">
            <summary>
            Beta value
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexPosition.Id">
            <summary>
            The id of the position
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexPosition.CreateTime">
            <summary>
            The creation time
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexPosition.UpdateTime">
            <summary>
            The update time
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexPosition.Type">
            <summary>
            Type of position
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexPosition.Collateral">
            <summary>
            The amount of collateral applied to the open position
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexPosition.MinCollateral">
            <summary>
            The minimum amount of collateral required for the position
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexPositionBasic">
            <summary>
            Position info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexPositionBasic.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexPositionBasic.Quantity">
            <summary>
            The quantity
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexPositionBasic.BasePrice">
            <summary>
            The base price
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexRawFundingOrderBook">
            <summary>
            Order book
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexRawFundingOrderBook.Bids">
            <summary>
            List of bids
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexRawFundingOrderBook.Asks">
            <summary>
            List of asks
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexRawOrderBook">
            <summary>
            Order book
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexRawOrderBook.Bids">
            <summary>
            List of bids
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexRawOrderBook.Asks">
            <summary>
            List of asks
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexStats">
            <summary>
            Stat info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexStats.Timestamp">
            <summary>
            The timestamp
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexStats.Value">
            <summary>
            The value
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexSuccessResult">
            <summary>
            Result
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexSuccessResult.Success">
            <summary>
            Whether the operation was successful
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexSummary">
            <summary>
            Bitfinex fee summary
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexSummary.Fees">
            <summary>
            Maker/taker fee info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexSummary.Volume30d">
            <summary>
            30 day volumes
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexSummary.FundingEarnings30d">
            <summary>
            30 day funding earnings
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexSummary.LeoInfo">
            <summary>
            Leo info
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexLeoInfo">
            <summary>
            Leo info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexLeoInfo.LeoDiscountLevel">
            <summary>
            Leo discount level
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexLeoInfo.LeoAverageQuantity">
            <summary>
            Leo average quantity
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexFundingEarnings">
            <summary>
            Funding earnings
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingEarnings.Earnings">
            <summary>
            Earnings per asset
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingEarnings.EarningsTotal">
            <summary>
            Earnings total in USD
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexVolumes">
            <summary>
            Volume info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexVolumes.Volumes">
            <summary>
            Volumes
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexVolumes.TradingFees">
            <summary>
            Trading fees paid
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexVolumes.TradingFeesTotal">
            <summary>
            Trading fees paid total in USD
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexFees">
            <summary>
            Fee info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFees.MakerFees">
            <summary>
            Maker fees
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFees.TakerFees">
            <summary>
            Taker fees
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexMakerFee">
            <summary>
            Maker fee info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMakerFee.MakerFee">
            <summary>
            Maker fee
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMakerFee.DerivativeRebate">
            <summary>
            Derivatie rebate
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexTakerFee">
            <summary>
            Taker fees info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTakerFee.TakerFeeCrypto">
            <summary>
            Crypto trading taker fee
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTakerFee.TakerFeeStable">
            <summary>
            Stable coin trading taker fee
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTakerFee.TakerFeeFiat">
            <summary>
            Fiat trading taker fee
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTakerFee.DerivativeTakerFee">
            <summary>
            Derivative trading taker fee
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.Bitfinex30DaySummaryVolumeEntry">
            <summary>
            Summary entry
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.Bitfinex30DaySummaryVolumeEntry.Asset">
            <summary>
            The asset
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.Bitfinex30DaySummaryVolumeEntry.Volume">
            <summary>
            The volume
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.Bitfinex30DaySummaryVolumeEntry.VolumeMaker">
            <summary>
            The maker volume
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.Bitfinex30DaySummaryVolumeEntry.VolumeBFX">
            <summary>
            The volume on Bitfinex
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.Bitfinex30DaySummaryVolumeEntry.VolumeBFXMaker">
            <summary>
            The maker volume on Bitfinex
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.Bitfinex30DaySummaryVolumeEntry.VolumeETHFX">
            <summary>
            The volume on EthFinex
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.Bitfinex30DaySummaryVolumeEntry.VolumeETHFXMaker">
            <summary>
            The maker volume on EthFinex
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexSymbolInfo">
            <summary>
            Symbol info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexSymbolInfo.MinOrderQuantity">
            <summary>
            Min order quantity
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexSymbolInfo.MaxOrderQuantity">
            <summary>
            Max order quantity
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexSymbolInfo.InitialMargin">
            <summary>
            Initial margin
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexSymbolInfo.MinMargin">
            <summary>
            Min margin
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexTicker">
            <summary>
            Ticker information
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTicker.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTicker.BestBidPrice">
            <summary>
            The best bid price
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTicker.BestBidQuantity">
            <summary>
            The best bid quantity
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTicker.BestAskPrice">
            <summary>
            The best ask price
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTicker.BestAskQuantity">
            <summary>
            The best ask quantity
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTicker.DailyChange">
            <summary>
            Change versus 24 hours ago
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTicker.DailyChangePercentage">
            <summary>
            Change percentage versus 24 hours ago
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTicker.LastPrice">
            <summary>
            The last trade price
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTicker.Volume">
            <summary>
            The 24 hour volume
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTicker.HighPrice">
            <summary>
            The 24 hour high price
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTicker.LowPrice">
            <summary>
            The 24 hour low price
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexTickerHistory">
            <summary>
            History info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTickerHistory.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTickerHistory.BestBidPrice">
            <summary>
            Best bid price at the time
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTickerHistory.BestAskPrice">
            <summary>
            Best ask price at the time
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTickerHistory.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexTradeDetails">
            <summary>
            Details of a trade
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTradeDetails.Id">
            <summary>
            The id of the trade
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTradeDetails.Symbol">
            <summary>
            The pair the trade is for
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTradeDetails.Timestamp">
            <summary>
            The time the trade was created
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTradeDetails.OrderId">
            <summary>
            The id of the order
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTradeDetails.Quantity">
            <summary>
            The executed quantity
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTradeDetails.QuantityRaw">
            <summary>
            The quantity as returned by the API, will be negative if it's a sell
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTradeDetails.Price">
            <summary>
            The price of the trade
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTradeDetails.OrderType">
            <summary>
            The type of the order
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTradeDetails.OrderPrice">
            <summary>
            The price of the order
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTradeDetails.Maker">
            <summary>
            If was maker
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTradeDetails.Fee">
            <summary>
            The fee
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTradeDetails.FeeAsset">
            <summary>
            The asset the fee is in
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTradeDetails.ClientOrderId">
            <summary>
            The client order id
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexTradeSimple">
            <summary>
            Trade info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTradeSimple.Id">
            <summary>
            The id of the trade
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTradeSimple.Timestamp">
            <summary>
            The timestamp of the trade
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTradeSimple.Quantity">
            <summary>
            The quantity of the trade
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTradeSimple.Price">
            <summary>
            The price of the trade
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTradeSimple.Period">
            <summary>
            Amount of time the funding transaction was for
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexTransfer">
            <summary>
            Transfer info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTransfer.UpdateTime">
            <summary>
            Time of last update
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTransfer.FromWallet">
            <summary>
            From wallet type
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTransfer.ToWallet">
            <summary>
            To wallet type
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTransfer.Asset">
            <summary>
            Asset transfered
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTransfer.AssetTo">
            <summary>
            Target asset
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTransfer.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexUserInfo">
            <summary>
            User info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexUserInfo.Id">
            <summary>
            The id of the user
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexUserInfo.Email">
            <summary>
            The email address of the user
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexUserInfo.UserName">
            <summary>
            The username of the user
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexUserInfo.CreateTime">
            <summary>
            The time the account was created
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexUserInfo.Verified">
            <summary>
            Indicates if the user has a verified status 
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexUserInfo.VerificationLevel">
            <summary>
            Account verification level
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexUserInfo.TimeZone">
            <summary>
            Time zone
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexUserInfo.Locale">
            <summary>
            Account locale setting
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexUserInfo.Company">
            <summary>
            Shows where the account is registered. Accounts registered at Bitfinex will show 'bitfinex' and accounts registered at eosfinex will show 'eosfinex'
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexUserInfo.EmailVerified">
            <summary>
            Indicates if the user has a verified status 
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexUserInfo.MasterAccountCreateTime">
            <summary>
            The time the master account was created
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexUserInfo.GroupId">
            <summary>
            Account group id
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexUserInfo.MasterAccountId">
            <summary>
            Master account id
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexUserInfo.InheritMasterAccountVerification">
            <summary>
            True if account inherits verification from master account
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexUserInfo.IsGroupMaster">
            <summary>
            Indicates if the user is group master
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexUserInfo.GroupWithdrawEnabled">
            <summary>
            Whether group withdraw is enabled 
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexUserInfo.PaperTradingEnabled">
            <summary>
            Whether paper trading is enabled
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexUserInfo.MerchantEnabled">
            <summary>
            Whether merchant is enabled
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexUserInfo.CompetitionEnabled">
            <summary>
            Whether competition is enabled
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexUserInfo.TwoFactorAuthenticationMethods">
            <summary>
            Enabled 2fa methods
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexUserInfo.IsSecuritiesMaster">
            <summary>
            Whether the account has a securities sub-account
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexUserInfo.SecuritiesEnabled">
            <summary>
            Whether the account has securities enabled
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexUserInfo.AllowDisableContextSwitch">
            <summary>
            Account can disable context switching by master account into this account
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexUserInfo.ContextSwitchDisabled">
            <summary>
            Master account cannot context switch into this account
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexUserInfo.LastLoginTime">
            <summary>
            The time of last login
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexUserInfo.VerificationLevelSubmitted">
            <summary>
            Highest account verification level submitted
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexUserInfo.ComplCountries">
            <summary>
            Array of country codes based on your verification data (residence and nationality)
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexUserInfo.ComplCountriesResidence">
            <summary>
            Array of country codes based on your verification data(residence only)
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexUserInfo.AccountType">
            <summary>
            Type of verification ("individual" or "corporate")
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexUserInfo.IsMerchantEnterprice">
            <summary>
            Whether account is enterprise merchant
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexWallet">
            <summary>
            Wallet info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexWallet.Type">
            <summary>
            The type of the wallet
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexWallet.Asset">
            <summary>
            The asset
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexWallet.Total">
            <summary>
            The current balance
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexWallet.UnsettledInterest">
            <summary>
            The unsettled interest
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexWallet.Available">
            <summary>
            The available balance
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexWriteResult">
            <summary>
            Result V2.
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexWriteResult.Timestamp">
            <summary>
            Millisecond Time Stamp of the update.
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexWriteResult.Type">
            <summary>
            Purpose of notification ('on-req', 'oc-req', 'uca', 'fon-req', 'foc-req').
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexWriteResult.Id">
            <summary>
            Unique ID of the message.
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexWriteResult.Placeholder1">
            <summary>
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexWriteResult.Code">
            <summary>
            Work in progress.
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexWriteResult.Status">
            <summary>
            Status of the notification; it may vary over time (SUCCESS, ERROR, FAILURE, ...).
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexWriteResult.Text">
            <summary>
            Text of the notification.
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexWriteResult`1">
            <summary>
            Result V2.
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexWriteResult`1.Data">
            <summary>
            Data object.
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.Socket.BitfinexSocketEvent`1">
            <summary>
            Socket event wrapper
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.Socket.BitfinexSocketEvent`1.ChannelId">
            <summary>
            The channel id of the event
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.Socket.BitfinexSocketEvent`1.EventType">
            <summary>
            The type of the event
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.Socket.BitfinexSocketEvent`1.Data">
            <summary>
            The data
            </summary>
        </member>
        <member name="M:Bitfinex.Net.Objects.Models.Socket.BitfinexSocketEvent`1.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:Bitfinex.Net.Objects.Models.Socket.BitfinexSocketEvent`1.#ctor(Bitfinex.Net.Enums.BitfinexEventType,`0)">
            <summary>
            ctor
            </summary>
            <param name="type"></param>
            <param name="data"></param>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.Socket.BitfinexStreamTicker">
            <summary>
            Ticker information
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.Socket.BitfinexStreamTicker.BestBidPrice">
            <summary>
            The best bid price
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.Socket.BitfinexStreamTicker.BestBidQuantity">
            <summary>
            The best bid quantity
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.Socket.BitfinexStreamTicker.BestAskPrice">
            <summary>
            The best ask price
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.Socket.BitfinexStreamTicker.BestAskQuantity">
            <summary>
            The best ask quantity
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.Socket.BitfinexStreamTicker.DailyChange">
            <summary>
            Change versus 24 hours ago
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.Socket.BitfinexStreamTicker.DailyChangePercentage">
            <summary>
            Change percentage versus 24 hours ago
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.Socket.BitfinexStreamTicker.LastPrice">
            <summary>
            The last trade price
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.Socket.BitfinexStreamTicker.Volume">
            <summary>
            The 24 hour volume
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.Socket.BitfinexStreamTicker.HighPrice">
            <summary>
            The 24 hour high price
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.Socket.BitfinexStreamTicker.LowPrice">
            <summary>
            The 24 hour low price
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexStreamFundingTicker">
            <summary>
            Funding ticker information
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexStreamFundingTicker.FlashReturnRate">
            <summary>
            Flash Return Rate - average of all fixed rate funding over the last hour
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexStreamFundingTicker.BestBidPrice">
            <summary>
            The best bid price
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexStreamFundingTicker.BidPeriod">
            <summary>
            Bid period covered in days
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexStreamFundingTicker.BestBidQuantity">
            <summary>
            The best bid quantity
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexStreamFundingTicker.BestAskPrice">
            <summary>
            The best ask price
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexStreamFundingTicker.AskPeriod">
            <summary>
            Ask period covered in days
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexStreamFundingTicker.BestAskQuantity">
            <summary>
            The best ask quantity
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexStreamFundingTicker.DailyChange">
            <summary>
            Change versus 24 hours ago
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexStreamFundingTicker.DailyChangePercentage">
            <summary>
            Change percentage versus 24 hours ago
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexStreamFundingTicker.LastPrice">
            <summary>
            The last trade price
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexStreamFundingTicker.Volume">
            <summary>
            The 24 hour volume
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexStreamFundingTicker.HighPrice">
            <summary>
            The 24 hour high price
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexStreamFundingTicker.LowPrice">
            <summary>
            The 24 hour low price
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.V1.BitfinexWithdrawalResult">
            <summary>
            Result of withdrawing
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexWithdrawalResult.Success">
            <summary>
            The status of the transfer
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexWithdrawalResult.Message">
            <summary>
            Additional info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexWithdrawalResult.WithdrawalId">
            <summary>
            The id of the withdrawal
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexWithdrawalResult.Fees">
            <summary>
            The fees paid
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Options.BitfinexOrderBookOptions">
            <summary>
            Options for the Bitfinex SymbolOrderBook
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Options.BitfinexOrderBookOptions.Default">
            <summary>
            Default options for new order books
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Options.BitfinexOrderBookOptions.Precision">
            <summary>
            The precision level of the order book
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Options.BitfinexOrderBookOptions.Limit">
            <summary>
            The limit of entries in the order book, either 1, 25, 100 or 250
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Options.BitfinexOrderBookOptions.InitialDataTimeout">
            <summary>
            After how much time we should consider the connection dropped if no data is received for this time after the initial subscriptions
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Options.BitfinexRestOptions">
            <summary>
            Options for the BitfinexRestClient
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Options.BitfinexRestOptions.Default">
            <summary>
            Default options for new clients
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Options.BitfinexRestOptions.AffiliateCode">
            <summary>
            Default affiliate code to use when placing orders
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Options.BitfinexRestOptions.NonceProvider">
            <summary>
            Optional nonce provider for signing requests. Careful providing a custom provider; once a nonce is sent to the server, every request after that needs a higher nonce than that
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Options.BitfinexRestOptions.SpotOptions">
            <summary>
            Spot API options
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Options.BitfinexSocketOptions">
            <summary>
            Options for the BinanceSocketClient
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Options.BitfinexSocketOptions.Default">
            <summary>
            Default options for new clients
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Options.BitfinexSocketOptions.AffiliateCode">
            <summary>
            Default affiliate code to use when placing orders
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Options.BitfinexSocketOptions.NonceProvider">
            <summary>
            Optional nonce provider for signing requests. Careful providing a custom provider; once a nonce is sent to the server, every request after that needs a higher nonce than that
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Options.BitfinexSocketOptions.SpotOptions">
            <summary>
            Spot API options
            </summary>
        </member>
        <member name="M:Bitfinex.Net.Objects.Sockets.Subscriptions.BitfinexSubscription`1.GetMessageType(CryptoExchange.Net.Sockets.MessageParsing.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Objects.Sockets.Subscriptions.BitfinexUserSubscription.GetMessageType(CryptoExchange.Net.Sockets.MessageParsing.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="T:Bitfinex.Net.SymbolOrderBooks.BitfinexOrderBookFactory">
            <summary>
            Bitfinex order book factory
            </summary>
        </member>
        <member name="M:Bitfinex.Net.SymbolOrderBooks.BitfinexOrderBookFactory.#ctor(System.IServiceProvider)">
            <summary>
            ctor
            </summary>
            <param name="serviceProvider">Service provider for resolving logging and clients</param>
        </member>
        <member name="M:Bitfinex.Net.SymbolOrderBooks.BitfinexOrderBookFactory.Create(System.String,System.Action{Bitfinex.Net.Objects.Options.BitfinexOrderBookOptions})">
            <inheritdoc />
        </member>
        <member name="T:Bitfinex.Net.SymbolOrderBooks.BitfinexSymbolOrderBook">
            <summary>
            Live order book implementation
            </summary>
        </member>
        <member name="M:Bitfinex.Net.SymbolOrderBooks.BitfinexSymbolOrderBook.#ctor(System.String,System.Action{Bitfinex.Net.Objects.Options.BitfinexOrderBookOptions})">
            <summary>
            Create a new order book instance
            </summary>
            <param name="symbol">The symbol the order book is for</param>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:Bitfinex.Net.SymbolOrderBooks.BitfinexSymbolOrderBook.#ctor(System.String,System.Action{Bitfinex.Net.Objects.Options.BitfinexOrderBookOptions},Microsoft.Extensions.Logging.ILogger{Bitfinex.Net.SymbolOrderBooks.BitfinexSymbolOrderBook},Bitfinex.Net.Interfaces.Clients.IBitfinexSocketClient)">
            <summary>
            Create a new order book instance
            </summary>
            <param name="symbol">The symbol the order book is for</param>
            <param name="optionsDelegate">Option configuration delegate</param>
            <param name="logger">Logger</param>
            <param name="socketClient">Socket client instance</param>
        </member>
        <member name="M:Bitfinex.Net.SymbolOrderBooks.BitfinexSymbolOrderBook.DoStartAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.SymbolOrderBooks.BitfinexSymbolOrderBook.DoReset">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.SymbolOrderBooks.BitfinexSymbolOrderBook.ProcessChecksum(CryptoExchange.Net.Objects.Sockets.DataEvent{System.Int32})">
            <summary>
            Process a received checksum
            </summary>
            <param name="checksum"></param>
        </member>
        <member name="M:Bitfinex.Net.SymbolOrderBooks.BitfinexSymbolOrderBook.DoChecksum(System.Int32)">
            <summary>
            Process a checksum
            </summary>
            <param name="checksum"></param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.SymbolOrderBooks.BitfinexSymbolOrderBook.DoResyncAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.SymbolOrderBooks.BitfinexSymbolOrderBook.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:CryptoExchange.Net.Interfaces.CryptoClientExtensions">
            <summary>
            Extensions for the ICryptoRestClient and ICryptoSocketClient interfaces
            </summary>
        </member>
        <member name="M:CryptoExchange.Net.Interfaces.CryptoClientExtensions.Bitfinex(CryptoExchange.Net.Interfaces.ICryptoRestClient)">
            <summary>
            Get the Bitfinex REST Api client
            </summary>
            <param name="baseClient"></param>
            <returns></returns>
        </member>
        <member name="M:CryptoExchange.Net.Interfaces.CryptoClientExtensions.Bitfinex(CryptoExchange.Net.Interfaces.ICryptoSocketClient)">
            <summary>
            Get the Bitfinex Websocket Api client
            </summary>
            <param name="baseClient"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions">
            <summary>
            Extensions for DI
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddBitfinex(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Bitfinex.Net.Objects.Options.BitfinexRestOptions},System.Action{Bitfinex.Net.Objects.Options.BitfinexSocketOptions},System.Nullable{Microsoft.Extensions.DependencyInjection.ServiceLifetime})">
            <summary>
            Add the IBitfinexClient and IBitfinexSocketClient to the sevice collection so they can be injected
            </summary>
            <param name="services">The service collection</param>
            <param name="defaultRestOptionsDelegate">Set default options for the rest client</param>
            <param name="defaultSocketOptionsDelegate">Set default options for the socket client</param>
            <param name="socketClientLifeTime">The lifetime of the IBitfinexSocketClient for the service collection. Defaults to Singleton.</param>
            <returns></returns>
        </member>
    </members>
</doc>
