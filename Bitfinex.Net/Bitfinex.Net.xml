<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Bitfinex.Net</name>
    </assembly>
    <members>
        <member name="T:Bitfinex.Net.BitfinexHelpers">
            <summary>
            Helper functions
            </summary>
        </member>
        <member name="M:Bitfinex.Net.BitfinexHelpers.AddBitfinex(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Bitfinex.Net.Objects.BitfinexClientOptions,Bitfinex.Net.Objects.BitfinexSocketClientOptions},System.Nullable{Microsoft.Extensions.DependencyInjection.ServiceLifetime})">
            <summary>
            Add the IBitfinexClient and IBitfinexSocketClient to the sevice collection so they can be injected
            </summary>
            <param name="services">The service collection</param>
            <param name="defaultOptionsCallback">Set default options for the client</param>
            <param name="socketClientLifeTime">The lifetime of the IBitfinexSocketClient for the service collection. Defaults to Scoped.</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.BitfinexHelpers.ValidateBitfinexSymbol(System.String)">
            <summary>
            Validate the string is a valid Bitfinex symbol.
            </summary>
            <param name="symbolString">string to validate</param>
        </member>
        <member name="T:Bitfinex.Net.Clients.BitfinexClient">
            <inheritdoc cref="T:Bitfinex.Net.Interfaces.Clients.IBitfinexClient" />
        </member>
        <member name="P:Bitfinex.Net.Clients.BitfinexClient.GeneralApi">
            <inheritdoc />
        </member>
        <member name="P:Bitfinex.Net.Clients.BitfinexClient.SpotApi">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.BitfinexClient.#ctor">
            <summary>
            Create a new instance of BitfinexClient using the default options
            </summary>
        </member>
        <member name="M:Bitfinex.Net.Clients.BitfinexClient.#ctor(Bitfinex.Net.Objects.BitfinexClientOptions)">
            <summary>
            Create a new instance of BitfinexClient using provided options
            </summary>
            <param name="options">The options to use for this client</param>
        </member>
        <member name="M:Bitfinex.Net.Clients.BitfinexClient.SetDefaultOptions(Bitfinex.Net.Objects.BitfinexClientOptions)">
            <summary>
            Set the default options to be used when creating new clients
            </summary>
            <param name="options">Options to use as default</param>
        </member>
        <member name="M:Bitfinex.Net.Clients.BitfinexClient.ParseErrorResponse(Newtonsoft.Json.Linq.JToken)">
            <summary>
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:Bitfinex.Net.Clients.BitfinexSocketClient">
            <inheritdoc cref="T:Bitfinex.Net.Interfaces.Clients.IBitfinexSocketClient" />
        </member>
        <member name="P:Bitfinex.Net.Clients.BitfinexSocketClient.SpotStreams">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.BitfinexSocketClient.#ctor">
            <summary>
            Create a new instance of BitfinexSocketClient using the default options
            </summary>
        </member>
        <member name="M:Bitfinex.Net.Clients.BitfinexSocketClient.#ctor(Bitfinex.Net.Objects.BitfinexSocketClientOptions)">
            <summary>
            Create a new instance of BitfinexSocketClient using provided options
            </summary>
            <param name="options">The options to use for this client</param>
        </member>
        <member name="M:Bitfinex.Net.Clients.BitfinexSocketClient.SetDefaultOptions(Bitfinex.Net.Objects.BitfinexSocketClientOptions)">
            <summary>
            Set the default options to be used when creating new clients
            </summary>
            <param name="options">Options to use as default</param>
        </member>
        <member name="M:Bitfinex.Net.Clients.BitfinexSocketClient.UnsubscribeAsync(CryptoExchange.Net.Sockets.SocketConnection,CryptoExchange.Net.Sockets.SocketSubscription)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.BitfinexSocketClient.AuthenticateSocketAsync(CryptoExchange.Net.Sockets.SocketConnection)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.BitfinexSocketClient.HandleQueryResponse``1(CryptoExchange.Net.Sockets.SocketConnection,System.Object,Newtonsoft.Json.Linq.JToken,CryptoExchange.Net.Objects.CallResult{``0}@)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.BitfinexSocketClient.HandleSubscriptionResponse(CryptoExchange.Net.Sockets.SocketConnection,CryptoExchange.Net.Sockets.SocketSubscription,System.Object,Newtonsoft.Json.Linq.JToken,CryptoExchange.Net.Objects.CallResult{System.Object}@)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.BitfinexSocketClient.MessageMatchesHandler(CryptoExchange.Net.Sockets.SocketConnection,Newtonsoft.Json.Linq.JToken,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.BitfinexSocketClient.MessageMatchesHandler(CryptoExchange.Net.Sockets.SocketConnection,Newtonsoft.Json.Linq.JToken,System.String)">
            <inheritdoc />
        </member>
        <member name="T:Bitfinex.Net.Clients.GeneralApi.BitfinexClientGeneralApi">
            <inheritdoc cref="T:Bitfinex.Net.Interfaces.Clients.GeneralApi.IBitfinexClientGeneralApi" />
        </member>
        <member name="P:Bitfinex.Net.Clients.GeneralApi.BitfinexClientGeneralApi.Funding">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.GeneralApi.BitfinexClientGeneralApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.GeneralApi.BitfinexClientGeneralApi.GetServerTimestampAsync">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.GeneralApi.BitfinexClientGeneralApi.GetTimeSyncInfo">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.GeneralApi.BitfinexClientGeneralApi.GetTimeOffset">
            <inheritdoc />
        </member>
        <member name="T:Bitfinex.Net.Clients.GeneralApi.BitfinexClientGeneralApiFunding">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.GeneralApi.BitfinexClientGeneralApiFunding.GetActiveFundingOffersAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.GeneralApi.BitfinexClientGeneralApiFunding.GetFundingOfferHistoryAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.GeneralApi.BitfinexClientGeneralApiFunding.SubmitFundingOfferAsync(Bitfinex.Net.Enums.FundingOrderType,System.String,System.Decimal,System.Decimal,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.GeneralApi.BitfinexClientGeneralApiFunding.CancelFundingOfferAsync(System.Int64,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.GeneralApi.BitfinexClientGeneralApiFunding.GetFundingLoansAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.GeneralApi.BitfinexClientGeneralApiFunding.GetFundingLoansHistoryAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.GeneralApi.BitfinexClientGeneralApiFunding.GetFundingCreditsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.GeneralApi.BitfinexClientGeneralApiFunding.GetFundingCreditsHistoryAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.GeneralApi.BitfinexClientGeneralApiFunding.GetFundingTradesHistoryAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.GeneralApi.BitfinexClientGeneralApiFunding.NewOfferAsync(System.String,System.Decimal,System.Decimal,System.Int32,Bitfinex.Net.Enums.FundingType,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.GeneralApi.BitfinexClientGeneralApiFunding.CancelOfferAsync(System.Int64,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.GeneralApi.BitfinexClientGeneralApiFunding.GetOfferAsync(System.Int64,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.GeneralApi.BitfinexClientGeneralApiFunding.CloseMarginFundingAsync(System.Int64,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.GeneralApi.BitfinexClientGeneralApiFunding.GetFundingInfoAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.GeneralApi.BitfinexClientGeneralApiFunding.SubmitFundingAutoRenewAsync(System.String,System.Boolean,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.GeneralApi.BitfinexClientGeneralApiFunding.GetFundingAutoRenewStatusAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApi">
            <inheritdoc cref="T:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApi" />
        </member>
        <member name="P:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApi.ExchangeName">
            <inheritdoc />
        </member>
        <member name="P:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApi.Account">
            <inheritdoc />
        </member>
        <member name="P:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApi.ExchangeData">
            <inheritdoc />
        </member>
        <member name="P:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApi.Trading">
            <inheritdoc />
        </member>
        <member name="E:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApi.OnOrderPlaced">
            <summary>
            Event triggered when an order is placed via this client
            </summary>
        </member>
        <member name="E:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApi.OnOrderCanceled">
            <summary>
            Event triggered when an order is canceled via this client
            </summary>
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApi.GetSymbolName(System.String,System.String)">
            <summary>
            Get the name of a symbol for Bitfinex based on the base and quote asset
            </summary>
            <param name="baseAsset"></param>
            <param name="quoteAsset"></param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApi.GetServerTimestampAsync">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApi.GetTimeSyncInfo">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApi.GetTimeOffset">
            <inheritdoc />
        </member>
        <member name="P:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApi.CommonSpotClient">
            <inheritdoc />
        </member>
        <member name="T:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApiAccount">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApiAccount.GetBalancesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApiAccount.GetBaseMarginInfoAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApiAccount.GetSymbolMarginInfoAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApiAccount.GetMovementsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApiAccount.GetAlertListAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApiAccount.SetAlertAsync(System.String,System.Decimal,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApiAccount.DeleteAlertAsync(System.String,System.Decimal,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApiAccount.GetAvailableBalanceAsync(System.String,Bitfinex.Net.Enums.OrderSide,System.Decimal,Bitfinex.Net.Enums.WalletType,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApiAccount.GetLedgerEntriesAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApiAccount.GetUserInfoAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApiAccount.GetAccountInfoAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApiAccount.Get30DaySummaryAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApiAccount.GetDepositAddressAsync(System.String,Bitfinex.Net.Enums.WithdrawWallet,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApiAccount.WalletTransferAsync(System.String,System.Decimal,Bitfinex.Net.Enums.WithdrawWallet,Bitfinex.Net.Enums.WithdrawWallet,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApiAccount.WithdrawAsync(System.String,Bitfinex.Net.Enums.WithdrawWallet,System.Decimal,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApiAccount.GetWithdrawalFeesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApiExchangeData">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApiExchangeData.GetPlatformStatusAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApiExchangeData.GetAssetsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApiExchangeData.GetSymbolsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApiExchangeData.GetTickerAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApiExchangeData.GetTickersAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApiExchangeData.GetTradeHistoryAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Bitfinex.Net.Enums.Sorting},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApiExchangeData.GetOrderBookAsync(System.String,Bitfinex.Net.Enums.Precision,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApiExchangeData.GetRawOrderBookAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApiExchangeData.GetLastKlineAsync(System.String,Bitfinex.Net.Enums.KlineInterval,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApiExchangeData.GetKlinesAsync(System.String,Bitfinex.Net.Enums.KlineInterval,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Bitfinex.Net.Enums.Sorting},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApiExchangeData.GetAveragePriceAsync(System.String,System.Decimal,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApiExchangeData.GetFundingBookAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApiExchangeData.GetSymbolDetailsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApiExchangeData.GetForeignExchangeRateAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApiExchangeData.GetLendsAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApiExchangeData.GetStatsAsync(System.String,Bitfinex.Net.Enums.StatKey,Bitfinex.Net.Enums.StatSide,Bitfinex.Net.Enums.StatSection,System.Nullable{Bitfinex.Net.Enums.Sorting},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApiTrading">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApiTrading.GetOpenOrdersAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApiTrading.GetClosedOrdersAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApiTrading.GetOrderTradesAsync(System.String,System.Int64,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApiTrading.GetUserTradesAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApiTrading.PlaceOrderAsync(System.String,Bitfinex.Net.Enums.OrderSide,Bitfinex.Net.Enums.OrderType,System.Decimal,System.Decimal,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApiTrading.CancelOrderAsync(System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApiTrading.CancelAllOrdersAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApiTrading.GetOrderAsync(System.Int64,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApiTrading.GetPositionHistoryAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApiTrading.ClaimPositionAsync(System.Int64,System.Decimal,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApiTrading.ClosePositionAsync(System.Int64,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApiTrading.GetActivePositionsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexClientSpotApiTrading.GetPositionsByIdAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Bitfinex.Net.Clients.SpotApi.BitfinexSocketClientSpotStreams">
            <inheritdoc cref="T:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexSocketClientSpotStreams" />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexSocketClientSpotStreams.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexSocketClientSpotStreams.SubscribeToTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Sockets.DataEvent{Bitfinex.Net.Objects.Models.Socket.BitfinexStreamSymbolOverview}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexSocketClientSpotStreams.SubscribeToOrderBookUpdatesAsync(System.String,Bitfinex.Net.Enums.Precision,Bitfinex.Net.Enums.Frequency,System.Int32,System.Action{CryptoExchange.Net.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitfinex.Net.Objects.Models.BitfinexOrderBookEntry}}},System.Action{CryptoExchange.Net.Sockets.DataEvent{System.Int32}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexSocketClientSpotStreams.SubscribeToRawOrderBookUpdatesAsync(System.String,System.Int32,System.Action{CryptoExchange.Net.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitfinex.Net.Objects.Models.BitfinexRawOrderBookEntry}}},System.Action{CryptoExchange.Net.Sockets.DataEvent{System.Int32}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexSocketClientSpotStreams.SubscribeToTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitfinex.Net.Objects.Models.BitfinexTradeSimple}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexSocketClientSpotStreams.SubscribeToKlineUpdatesAsync(System.String,Bitfinex.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitfinex.Net.Objects.Models.BitfinexKline}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexSocketClientSpotStreams.SubscribeToUserTradeUpdatesAsync(System.Action{CryptoExchange.Net.Sockets.DataEvent{Bitfinex.Net.Objects.Models.Socket.BitfinexSocketEvent{System.Collections.Generic.IEnumerable{Bitfinex.Net.Objects.Models.BitfinexOrder}}}},System.Action{CryptoExchange.Net.Sockets.DataEvent{Bitfinex.Net.Objects.Models.Socket.BitfinexSocketEvent{System.Collections.Generic.IEnumerable{Bitfinex.Net.Objects.Models.BitfinexTradeDetails}}}},System.Action{CryptoExchange.Net.Sockets.DataEvent{Bitfinex.Net.Objects.Models.Socket.BitfinexSocketEvent{System.Collections.Generic.IEnumerable{Bitfinex.Net.Objects.Models.BitfinexPosition}}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexSocketClientSpotStreams.SubscribeToBalanceUpdatesAsync(System.Action{CryptoExchange.Net.Sockets.DataEvent{Bitfinex.Net.Objects.Models.Socket.BitfinexSocketEvent{System.Collections.Generic.IEnumerable{Bitfinex.Net.Objects.Models.BitfinexWallet}}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexSocketClientSpotStreams.SubscribeToFundingUpdatesAsync(System.Action{CryptoExchange.Net.Sockets.DataEvent{Bitfinex.Net.Objects.Models.Socket.BitfinexSocketEvent{System.Collections.Generic.IEnumerable{Bitfinex.Net.Objects.Models.BitfinexFundingOffer}}}},System.Action{CryptoExchange.Net.Sockets.DataEvent{Bitfinex.Net.Objects.Models.Socket.BitfinexSocketEvent{System.Collections.Generic.IEnumerable{Bitfinex.Net.Objects.Models.BitfinexFundingCredit}}}},System.Action{CryptoExchange.Net.Sockets.DataEvent{Bitfinex.Net.Objects.Models.Socket.BitfinexSocketEvent{System.Collections.Generic.IEnumerable{Bitfinex.Net.Objects.Models.BitfinexFunding}}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexSocketClientSpotStreams.PlaceOrderAsync(Bitfinex.Net.Enums.OrderType,System.String,System.Decimal,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Bitfinex.Net.Enums.OrderFlags},System.String)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexSocketClientSpotStreams.UpdateOrderAsync(System.Int64,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Bitfinex.Net.Enums.OrderFlags})">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexSocketClientSpotStreams.CancelOrderAsync(System.Int64)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexSocketClientSpotStreams.CancelOrdersByGroupIdAsync(System.Int64)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexSocketClientSpotStreams.CancelOrdersByGroupIdsAsync(System.Collections.Generic.IEnumerable{System.Int64})">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexSocketClientSpotStreams.CancelOrdersAsync(System.Collections.Generic.IEnumerable{System.Int64})">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.Clients.SpotApi.BitfinexSocketClientSpotStreams.CancelOrdersByClientOrderIdsAsync(System.Collections.Generic.Dictionary{System.Int64,System.DateTime})">
            <inheritdoc />
        </member>
        <member name="T:Bitfinex.Net.Enums.BitfinexEventType">
            <summary>
            Socket event types
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.HeartBeat">
            <summary>
            Heartbeat
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.BalanceUpdate">
            <summary>
            Balance update
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.PositionSnapshot">
            <summary>
            Position snapshot
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.PositionNew">
            <summary>
            New position
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.PositionUpdate">
            <summary>
            Position update
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.PositionClose">
            <summary>
            Position closed
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.WalletSnapshot">
            <summary>
            Wallet snapshot
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.WalletUpdate">
            <summary>
            Wallet update
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.OrderSnapshot">
            <summary>
            Orders snapshot
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.OrderNew">
            <summary>
            New order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.OrderNewRequest">
            <summary>
            New order request
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.OrderUpdate">
            <summary>
            Order update
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.OrderUpdateRequest">
            <summary>
            Order update request
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.OrderCancel">
            <summary>
            Order canceled
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.OrderCancelRequest">
            <summary>
            Order cancel request
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.OrderCancelMulti">
            <summary>
            Multiple orders canceled
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.OrderCancelMultiRequest">
            <summary>
            Multiple orders cancel request
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.TradeSnapshot">
            <summary>
            Trade snapshot
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.TradeExecuted">
            <summary>
            Trade executed
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.TradeExecutionUpdate">
            <summary>
            Trade execution update
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.FundingTradeExecution">
            <summary>
            Funding trade execution
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.FundingTradeUpdate">
            <summary>
            Funding trade update
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.HistoricalOrderSnapshot">
            <summary>
            Historical order snapshot
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.MarginInfoSnapshot">
            <summary>
            Margin info snapshot
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.MarginInfoUpdate">
            <summary>
            Margin info update
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.Notification">
            <summary>
            Notification
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.FundingOfferSnapshot">
            <summary>
            Funding offer snapshot
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.FundingOfferNew">
            <summary>
            New funding offer
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.FundingOfferUpdate">
            <summary>
            Funding offer update
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.FundingOfferCancel">
            <summary>
            Funding offer canceled
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.HistoricalFundingOfferSnapshot">
            <summary>
            Historical funding offer snapshot
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.FundingCreditsSnapshot">
            <summary>
            Funding credits snapshot
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.FundingCreditsNew">
            <summary>
            New funding credits
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.FundingCreditsUpdate">
            <summary>
            Funding credits update
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.FundingCreditsClose">
            <summary>
            Funding credits closed
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.HistoricalFundingCreditsSnapshot">
            <summary>
            Historical funding credits snapshot
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.FundingLoanSnapshot">
            <summary>
            Funding loan snapshot
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.FundingLoanNew">
            <summary>
            New funding loan
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.FundingLoanUpdate">
            <summary>
            Funding loan update
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.FundingLoanClose">
            <summary>
            Funding loan closed
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.HistoricalFundingLoanSnapshot">
            <summary>
            Historical funding loan snapshot
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.HistoricalFundingTradeSnapshot">
            <summary>
            Historical funding trade snapshot
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.BitfinexEventType.UserCustomPriceAlert">
            <summary>
            Custom user price alert
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Enums.Frequency">
            <summary>
            Frequency of updates
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.Frequency.Realtime">
            <summary>
            Realtime
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.Frequency.TwoSeconds">
            <summary>
            Two seconds
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Enums.FundingOfferType">
            <summary>
            Funding type
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.FundingOfferType.Limit">
            <summary>
            Lend
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.FundingOfferType.FlashReturnRateDeltaVariable">
            <summary>
            FFR delta var
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.FundingOfferType.FlashReturnRateDeltaFixed">
            <summary>
            FFR delta fix
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Enums.FundingOrderType">
            <summary>
            Funding - Order Types.
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.FundingOrderType.Limit">
            <summary>
            Place an order at an explicit, static rate.
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.FundingOrderType.FRRDeltaVar">
            <summary>
            Place an order at an implicit, static rate, relative to the FRR.
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.FundingOrderType.FRRDeltaFix">
            <summary>
            Place an order at an implicit, dynamic rate, relative to the FRR.
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Enums.FundingSide">
            <summary>
            Funding side
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.FundingSide.Lender">
            <summary>
            Lender
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.FundingSide.Borrower">
            <summary>
            Borrower
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.FundingSide.Both">
            <summary>
            Both
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Enums.FundingType">
            <summary>
            Funding type
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.FundingType.Lend">
            <summary>
            Lend
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.FundingType.Loan">
            <summary>
            Loan
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Enums.KlineInterval">
            <summary>
            Interval
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.KlineInterval.OneMinute">
            <summary>
            1m
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.KlineInterval.FiveMinutes">
            <summary>
            5m
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.KlineInterval.FifteenMinutes">
            <summary>
            15m
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.KlineInterval.ThirtyMinutes">
            <summary>
            30m
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.KlineInterval.OneHour">
            <summary>
            1h
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.KlineInterval.ThreeHours">
            <summary>
            3h
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.KlineInterval.SixHours">
            <summary>
            6h
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.KlineInterval.TwelveHours">
            <summary>
            12h
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.KlineInterval.OneDay">
            <summary>
            1d
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.KlineInterval.SevenDays">
            <summary>
            7d
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.KlineInterval.FourteenDays">
            <summary>
            14d
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.KlineInterval.OneMonth">
            <summary>
            1m
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Enums.MarginFundingType">
            <summary>
            Margin funding type
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.MarginFundingType.Daily">
            <summary>
            Daily
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.MarginFundingType.Term">
            <summary>
            Term
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Enums.OrderFlags">
            <summary>
            Flags for an order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderFlags.Hidden">
            <summary>
            Order is hidden
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderFlags.Close">
            <summary>
            Close
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderFlags.PostOnly">
            <summary>
            Only accept if it is a post
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderFlags.OneCancelsOther">
            <summary>
            Oco order
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Enums.OrderSide">
            <summary>
            Side of an order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderSide.Buy">
            <summary>
            Buy
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderSide.Sell">
            <summary>
            Sell
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Enums.OrderStatus">
            <summary>
            Status of an order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderStatus.Active">
            <summary>
            Active
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderStatus.Executed">
            <summary>
            Fully filled
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderStatus.PartiallyFilled">
            <summary>
            Partially filled
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderStatus.Canceled">
            <summary>
            Canceled
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderStatus.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Enums.OrderType">
            <summary>
            Order types
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderType.Limit">
            <summary>
            Limit order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderType.Market">
            <summary>
            Market order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderType.Stop">
            <summary>
            Stop order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderType.StopLimit">
            <summary>
            Stop limit order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderType.TrailingStop">
            <summary>
            Trailing stop order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderType.ExchangeMarket">
            <summary>
            Exchange market order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderType.ExchangeLimit">
            <summary>
            Exchange limit order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderType.ExchangeStop">
            <summary>
            Exchange stop order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderType.ExchangeStopLimit">
            <summary>
            Exchange stop limit order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderType.ExchangeTrailingStop">
            <summary>
            Exchange trailing stop order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderType.FillOrKill">
            <summary>
            Fill or kill order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderType.ExchangeFillOrKill">
            <summary>
            Exchange fill or kill order
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Enums.OrderTypeV1">
            <summary>
            Order types for V1 API
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderTypeV1.Market">
            <summary>
            Market order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderTypeV1.Limit">
            <summary>
            Limit order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderTypeV1.Stop">
            <summary>
            Stop order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderTypeV1.StopLimit">
            <summary>
            Stop limit order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderTypeV1.TrailingStop">
            <summary>
            Trailing stop order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderTypeV1.FillOrKill">
            <summary>
            Fill or kill order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderTypeV1.ExchangeMarket">
            <summary>
            Exchange market order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderTypeV1.ExchangeLimit">
            <summary>
            Exchange limit order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderTypeV1.ExchangeStop">
            <summary>
            Exchange stop order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderTypeV1.ExchangeStopLimit">
            <summary>
            Exchange stop limit order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderTypeV1.ExchangeTrailingStop">
            <summary>
            Exchange trailing stop order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.OrderTypeV1.ExchangeFillOrKill">
            <summary>
            Exchange fill or kill order
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Enums.PlatformStatus">
            <summary>
            Status of Bitfinex
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.PlatformStatus.Maintenance">
            <summary>
            In maintenance
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.PlatformStatus.Operative">
            <summary>
            Working normally
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Enums.PositionStatus">
            <summary>
            Position status
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.PositionStatus.Active">
            <summary>
            Active
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.PositionStatus.Closed">
            <summary>
            Closed
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Enums.Precision">
            <summary>
            Precision level
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.Precision.PrecisionLevel0">
            <summary>
            0
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.Precision.PrecisionLevel1">
            <summary>
            1
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.Precision.PrecisionLevel2">
            <summary>
            2
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.Precision.PrecisionLevel3">
            <summary>
            3
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.Precision.R0">
            <summary>
            R0
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Enums.Sorting">
            <summary>
            Order
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.Sorting.NewFirst">
            <summary>
            Newest first
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.Sorting.OldFirst">
            <summary>
            Oldest first
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Enums.StatKey">
            <summary>
            Stat types
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.StatKey.TotalOpenPosition">
            <summary>
            Total number of open positions
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.StatKey.TotalActiveFunding">
            <summary>
            Total active funding
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.StatKey.ActiveFundingInPositions">
            <summary>
            Active funding in positions
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.StatKey.ActiveFundingInPositionsPerTradingSymbol">
            <summary>
            Active funding positions per symbol
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Enums.StatSection">
            <summary>
            Section of stats
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.StatSection.Last">
            <summary>
            Last
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.StatSection.History">
            <summary>
            History
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Enums.StatSide">
            <summary>
            Side for stats
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.StatSide.Long">
            <summary>
            Long
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.StatSide.Short">
            <summary>
            Short
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Enums.WalletType">
            <summary>
            Type of wallet
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.WalletType.Exchange">
            <summary>
            Exchange
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.WalletType.Margin">
            <summary>
            Margin
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.WalletType.Funding">
            <summary>
            Funding
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Enums.WithdrawWallet">
            <summary>
            Withdraw wallet type
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.WithdrawWallet.Trading">
            <summary>
            Trading
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.WithdrawWallet.Exchange">
            <summary>
            Exchange
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Enums.WithdrawWallet.Deposit">
            <summary>
            Deposit
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Interfaces.Clients.GeneralApi.IBitfinexClientGeneralApi">
            <summary>
            General API endpoints
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Interfaces.Clients.GeneralApi.IBitfinexClientGeneralApi.Funding">
            <summary>
            Endpoints related to funding
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Interfaces.Clients.GeneralApi.IBitfinexClientGeneralApiFunding">
            <summary>
            Bitfinex funding endpoints.
            </summary>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.GeneralApi.IBitfinexClientGeneralApiFunding.GetActiveFundingOffersAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the active funding offers
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-funding-offers" /></para>
            </summary>
            <param name="symbol">The symbol to return the funding offer for</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.GeneralApi.IBitfinexClientGeneralApiFunding.GetFundingOfferHistoryAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get the funding offer history
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-funding-offers-hist" /></para>
            </summary>
            <param name="symbol">The symbol to get history for</param>
            <param name="startTime">Start time of the data to return</param>
            <param name="endTime">End time of the data to return</param>
            <param name="limit">Max amount of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.GeneralApi.IBitfinexClientGeneralApiFunding.SubmitFundingOfferAsync(Bitfinex.Net.Enums.FundingOrderType,System.String,System.Decimal,System.Decimal,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Submit a new funding offer.
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-submit-funding-offer" /></para>
            </summary>
            <param name="fundingOrderType">Order Type (LIMIT, FRRDELTAVAR, FRRDELTAFIX).</param>
            <param name="symbol">Symbol for desired pair (fUSD, fBTC, etc..).</param>
            <param name="quantity">Quantity (positive for offer, negative for bid).</param>
            <param name="rate">Daily rate.</param>
            <param name="period">Time period of offer. Minimum 2 days. Maximum 120 days.</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.GeneralApi.IBitfinexClientGeneralApiFunding.CancelFundingOfferAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Cancels an existing Funding Offer based on the offer ID entered.
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-cancel-funding-offer" /></para>
            </summary>
            <param name="offerId">The id of the offer to cancel</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.GeneralApi.IBitfinexClientGeneralApiFunding.GetFundingLoansAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the funding loans
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-funding-loans" /></para>
            </summary>
            <param name="symbol">The symbol to get the funding loans for</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.GeneralApi.IBitfinexClientGeneralApiFunding.GetFundingLoansHistoryAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get the funding loan history
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-funding-loans-hist" /></para>
            </summary>
            <param name="symbol">The symbol to get history for</param>
            <param name="startTime">Start time of the data to return</param>
            <param name="endTime">End time of the data to return</param>
            <param name="limit">Max amount of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.GeneralApi.IBitfinexClientGeneralApiFunding.GetFundingCreditsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the funding credits
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-funding-credits" /></para>
            </summary>
            <param name="symbol">The symbol to get the funding credits for</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.GeneralApi.IBitfinexClientGeneralApiFunding.GetFundingCreditsHistoryAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get the funding credits history
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-funding-credits-hist" /></para>
            </summary>
            <param name="symbol">The symbol to get history for</param>
            <param name="startTime">Start time of the data to return</param>
            <param name="endTime">End time of the data to return</param>
            <param name="limit">Max amount of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.GeneralApi.IBitfinexClientGeneralApiFunding.GetFundingTradesHistoryAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get the funding trades history
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-funding-trades-hist" /></para>
            </summary>
            <param name="symbol">The symbol to get history for</param>
            <param name="startTime">Start time of the data to return</param>
            <param name="endTime">End time of the data to return</param>
            <param name="limit">Max amount of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.GeneralApi.IBitfinexClientGeneralApiFunding.NewOfferAsync(System.String,System.Decimal,System.Decimal,System.Int32,Bitfinex.Net.Enums.FundingType,System.Threading.CancellationToken)">
            <summary>
            Submit a new offer
            <para><a href="https://docs.bitfinex.com/v1/reference#rest-auth-new-offer" /></para>
            </summary>
            <param name="asset">The asset</param>
            <param name="quantity">The quantity</param>
            <param name="price">Rate to lend or borrow at in percent per 365 days (0 for FRR)</param>
            <param name="period">Number of days</param>
            <param name="direction">Direction of the offer</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.GeneralApi.IBitfinexClientGeneralApiFunding.CancelOfferAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Cancel an offer
            <para><a href="https://docs.bitfinex.com/v1/reference#rest-auth-cancel-offer" /></para>
            </summary>
            <param name="offerId">The id of the offer to cancel</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.GeneralApi.IBitfinexClientGeneralApiFunding.GetOfferAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Cancel an offer
            <para><a href="https://docs.bitfinex.com/v1/reference#rest-auth-offer-status" /></para>
            </summary>
            <param name="offerId">The id of the offer to cancel</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.GeneralApi.IBitfinexClientGeneralApiFunding.CloseMarginFundingAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Close margin funding
            <para><a href="https://docs.bitfinex.com/v1/reference#rest-auth-close-margin-funding" /></para>
            </summary>
            <param name="swapId">The id to close</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.GeneralApi.IBitfinexClientGeneralApiFunding.GetFundingInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get funding info for a symbol
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-info-funding" /></para>
            </summary>
            <param name="symbol">The symbol to get the info for</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.GeneralApi.IBitfinexClientGeneralApiFunding.SubmitFundingAutoRenewAsync(System.String,System.Boolean,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Activate or deactivate auto-renew. Allows you to specify the currency, amount, rate, and period.
            </summary>
            <param name="asset">Currency for which to enable auto-renew</param>
            <param name="status">1 to activate, 0 to deactivate.</param>
            <param name="quantity">Amount to be auto-renewed (Minimum 50 USD equivalent).</param>
            <param name="rate">Percentage rate at which to auto-renew. (rate == 0 to renew at FRR).</param>
            <param name="period">Period in days.</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.GeneralApi.IBitfinexClientGeneralApiFunding.GetFundingAutoRenewStatusAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Status of auto-renew.
            </summary>
            <param name="asset">Currency for which to enable auto-renew</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:Bitfinex.Net.Interfaces.Clients.IBitfinexClient">
            <summary>
            Client for accessing the Bitfinex API. 
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Interfaces.Clients.IBitfinexClient.GeneralApi">
            <summary>
            General endpoints
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Interfaces.Clients.IBitfinexClient.SpotApi">
            <summary>
            Spot endpoints
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Interfaces.Clients.IBitfinexSocketClient">
            <summary>
            Client for accessing the Bitfinex websocket API
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Interfaces.Clients.IBitfinexSocketClient.SpotStreams">
            <summary>
            Spot streams
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApi">
            <summary>
            Spot API endpoints
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApi.Account">
            <summary>
            Endpoints related to account settings, info or actions
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApi.ExchangeData">
            <summary>
            Endpoints related to retrieving market and system data
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApi.Trading">
            <summary>
            Endpoints related to orders and trades
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApi.CommonSpotClient">
            <summary>
            Get the ISpotClient for this client. This is a common interface which allows for some basic operations without knowing any details of the exchange.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApiAccount">
            <summary>
            Bitfinex account endpoints. Account endpoints include balance info, withdraw/deposit info and requesting and account settings
            </summary>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApiAccount.GetBalancesAsync(System.Threading.CancellationToken)">
            <summary>
            Get all balances
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-wallets" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApiAccount.GetBaseMarginInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Get the base margin info
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-info-margin" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApiAccount.GetSymbolMarginInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the margin info for a symbol
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-info-margin" /></para>
            </summary>
            <param name="symbol">The symbol to get the info for</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApiAccount.GetMovementsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the withdrawal/deposit history
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-movements" /></para>
            </summary>
            <param name="symbol">Symbol to get history for</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApiAccount.GetAlertListAsync(System.Threading.CancellationToken)">
            <summary>
            Get the list of alerts
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-alerts" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApiAccount.SetAlertAsync(System.String,System.Decimal,System.Threading.CancellationToken)">
            <summary>
            Set an alert
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-alert-set" /></para>
            </summary>
            <param name="symbol">The symbol to set the alert for</param>
            <param name="price">The price to set the alert for</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApiAccount.DeleteAlertAsync(System.String,System.Decimal,System.Threading.CancellationToken)">
            <summary>
            Delete an existing alert
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-alert-del" /></para>
            </summary>
            <param name="symbol">The symbol of the alert to delete</param>
            <param name="price">The price of the alert to delete</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApiAccount.GetAvailableBalanceAsync(System.String,Bitfinex.Net.Enums.OrderSide,System.Decimal,Bitfinex.Net.Enums.WalletType,System.Threading.CancellationToken)">
            <summary>
            Calculates the available balance for a symbol at a specific rate
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-calc-order-avail" /></para>
            </summary>
            <param name="symbol">The symbol</param>
            <param name="side">Buy or sell</param>
            <param name="rate">The rate/price</param>
            <param name="type">The wallet type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApiAccount.GetLedgerEntriesAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get changes in your balance for an asset
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-ledgers" /></para>
            </summary>
            <param name="asset">The asset to check the ledger for</param>
            <param name="startTime">Start time of the data to return</param>
            <param name="endTime">End time of the data to return</param>
            <param name="limit">Max amount of results</param>
            <param name="category">Filter by category, see https://docs.bitfinex.com/reference#rest-auth-ledgers</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApiAccount.GetUserInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Gets information about the user associated with the api key/secret
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-info-user" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApiAccount.GetAccountInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Get information about your account
            <para><a href="https://docs.bitfinex.com/v1/reference#rest-auth-account-info" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApiAccount.GetWithdrawalFeesAsync(System.Threading.CancellationToken)">
            <summary>
            Get withdrawal fees for this account
            <para><a href="https://docs.bitfinex.com/v1/reference#rest-auth-fees" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApiAccount.Get30DaySummaryAsync(System.Threading.CancellationToken)">
            <summary>
            Get 30-day summary on trading volume and margin funding
            <para><a href="https://docs.bitfinex.com/v1/reference#rest-auth-summary" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApiAccount.GetDepositAddressAsync(System.String,Bitfinex.Net.Enums.WithdrawWallet,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Gets a deposit address for an asset
            <para><a href="https://docs.bitfinex.com/v1/reference#rest-auth-deposit" /></para>
            </summary>
            <param name="asset">The asset to get address for</param>
            <param name="toWallet">The type of wallet the deposit is for</param>
            <param name="forceNew">If true a new address will be generated (previous addresses will still be valid)</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApiAccount.WalletTransferAsync(System.String,System.Decimal,Bitfinex.Net.Enums.WithdrawWallet,Bitfinex.Net.Enums.WithdrawWallet,System.Threading.CancellationToken)">
            <summary>
            Transfers funds from one wallet to another
            <para><a href="https://docs.bitfinex.com/v1/reference#rest-auth-transfer-between-wallets" /></para>
            </summary>
            <param name="asset">The asset to transfer</param>
            <param name="fromWallet">The wallet to remove funds from</param>
            <param name="toWallet">The wallet to add funds to</param>
            <param name="quantity">The quantity to transfer</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApiAccount.WithdrawAsync(System.String,Bitfinex.Net.Enums.WithdrawWallet,System.Decimal,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Withdraw funds from Bitfinex, either to a crypto currency address or a bank account
            All withdrawals need the withdrawType, wallet and quantity parameters
            CryptoCurrency withdrawals need the address parameters, the paymentId can be used for Monero as payment id and for Ripple as tag
            Wire withdrawals need the bank parameters. In some cases your bank will require the use of an intermediary bank, if this is the case, please supply those fields as well.
            <para><a href="https://docs.bitfinex.com/v1/reference#rest-auth-withdrawal" /></para>
            </summary>
            <param name="withdrawType">The type of funds to withdraw</param>
            <param name="wallet">The wallet to withdraw from</param>
            <param name="quantity">The quantity to withdraw</param>
            <param name="address">The destination of the withdrawal</param>
            <param name="accountNumber">The account number</param>
            <param name="bankSwift">The SWIFT code of the bank</param>
            <param name="bankName">The bank name</param>
            <param name="bankAddress">The bank address</param>
            <param name="bankCity">The bank city</param>
            <param name="bankCountry">The bank country</param>
            <param name="paymentDetails">Message for the receiver</param>
            <param name="expressWire">Whether it is an express wire withdrawal</param>
            <param name="intermediaryBankName">Intermediary bank name</param>
            <param name="intermediaryBankAddress">Intermediary bank address</param>
            <param name="intermediaryBankCity">Intermediary bank city</param>
            <param name="intermediaryBankCountry">Intermediary bank country</param>
            <param name="intermediaryBankAccount">Intermediary bank account</param>
            <param name="intermediaryBankSwift">Intermediary bank SWIFT code</param>
            <param name="accountName">The name of the account</param>
            <param name="paymentId">Hex string for Monero transaction</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApiExchangeData">
            <summary>
            Bitfinex exchange data endpoints. Exchange data includes market data (tickers, order books, etc) and system status.
            </summary>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApiExchangeData.GetPlatformStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the platform status
            <para><a href="https://docs.bitfinex.com/reference#rest-public-platform-status" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns>Whether Bitfinex platform is running normally or not</returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApiExchangeData.GetAssetsAsync(System.Threading.CancellationToken)">
            <summary>
            Gets a list of supported assets
            <para><a href="https://docs.bitfinex.com/reference#rest-public-conf" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApiExchangeData.GetTickerAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns basic market data for the provided symbols
            <para><a href="https://docs.bitfinex.com/reference#rest-public-ticker" /></para>
            </summary>
            <param name="symbol">The symbol to get data for</param>
            <param name="ct">Cancellation token</param>
            <returns>Symbol data</returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApiExchangeData.GetTickersAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Returns basic market data for the provided symbols
            <para><a href="https://docs.bitfinex.com/reference#rest-public-tickers" /></para>
            </summary>
            <param name="symbols">The symbols to get data for</param>
            <param name="ct">Cancellation token</param>
            <returns>Symbol data</returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApiExchangeData.GetTradeHistoryAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Bitfinex.Net.Enums.Sorting},System.Threading.CancellationToken)">
            <summary>
            Get recent trades for a symbol
            <para><a href="https://docs.bitfinex.com/reference#rest-public-trades" /></para>
            </summary>
            <param name="symbol">The symbol to get trades for</param>
            <param name="limit">The amount of results</param>
            <param name="startTime">The start time to return trades for</param>
            <param name="endTime">The end time to return trades for</param>
            <param name="sorting">The way the result is sorted</param>
            <param name="ct">Cancellation token</param>
            <returns>Trades for the symbol</returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApiExchangeData.GetOrderBookAsync(System.String,Bitfinex.Net.Enums.Precision,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the order book for a symbol
            <para><a href="https://docs.bitfinex.com/reference#rest-public-book" /></para>
            </summary>
            <param name="symbol">The symbol to get the order book for</param>
            <param name="precision">The precision of the data</param>
            <param name="limit">The amount of results in the book</param>
            <param name="ct">Cancellation token</param>
            <returns>The order book for the symbol</returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApiExchangeData.GetRawOrderBookAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get the raw order book for a symbol
            <para><a href="https://docs.bitfinex.com/reference#rest-public-book" /></para>
            </summary>
            <param name="symbol">The symbol</param>
            <param name="limit">The amount of results in the book</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApiExchangeData.GetStatsAsync(System.String,Bitfinex.Net.Enums.StatKey,Bitfinex.Net.Enums.StatSide,Bitfinex.Net.Enums.StatSection,System.Nullable{Bitfinex.Net.Enums.Sorting},System.Threading.CancellationToken)">
            <summary>
            Get various stats for the symbol
            <para><a href="https://docs.bitfinex.com/reference#rest-public-stats1" /></para>
            </summary>
            <param name="symbol">The symbol to request stats for</param>
            <param name="key">The type of stats</param>
            <param name="side">Side of the stats</param>
            <param name="section">Section of the stats</param>
            <param name="sorting">The way the result should be sorted</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApiExchangeData.GetLastKlineAsync(System.String,Bitfinex.Net.Enums.KlineInterval,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the last kline for a symbol
            <para><a href="https://docs.bitfinex.com/reference#rest-public-candles" /></para>
            </summary>
            <param name="interval">The time frame of the kline</param>
            <param name="symbol">The symbol to get the kline for</param>
            <param name="fundingPeriod">The Funding period. Only required for funding candles. Enter after the symbol (trade:1m:fUSD:p30/hist).</param>
            <param name="ct">Cancellation token</param>
            <returns>The last kline for the symbol</returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApiExchangeData.GetKlinesAsync(System.String,Bitfinex.Net.Enums.KlineInterval,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Bitfinex.Net.Enums.Sorting},System.Threading.CancellationToken)">
            <summary>
            Gets klines for a symbol
            <para><a href="https://docs.bitfinex.com/reference#rest-public-candles" /></para>
            </summary>
            <param name="interval">The time frame of the klines</param>
            <param name="symbol">The symbol to get the klines for</param>
            <param name="fundingPeriod">The Funding period. Only required for funding candles. Enter after the symbol (trade:1m:fUSD:p30/hist).</param>
            <param name="limit">The amount of results</param>
            <param name="startTime">The start time of the klines</param>
            <param name="endTime">The end time of the klines</param>
            <param name="sorting">The way the result is sorted</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApiExchangeData.GetAveragePriceAsync(System.String,System.Decimal,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Calculate the average execution price
            <para><a href="https://docs.bitfinex.com/reference#rest-public-calc-market-average-price" /></para>
            </summary>
            <param name="symbol">The symbol to calculate for</param>
            <param name="quantity">The quantity to execute</param>
            <param name="rateLimit">Limit to price</param>
            <param name="period">Maximum period for margin funding</param>
            <param name="ct">Cancellation token</param>
            <returns>The average price at which the execution would happen</returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApiExchangeData.GetForeignExchangeRateAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Returns the exchange rate for the assets
            <para><a href="https://docs.bitfinex.com/reference#rest-public-calc-foreign-exchange-rate" /></para>
            </summary>
            <param name="asset1">The first asset</param>
            <param name="asset2">The second asset</param>
            <param name="ct">Cancellation token</param>
            <returns>Exchange rate</returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApiExchangeData.GetFundingBookAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the margin funding book
            <para><a href="https://docs.bitfinex.com/v1/reference#rest-public-fundingbook" /></para>
            </summary>
            <param name="asset">Asset to get the book for</param>
            <param name="limit">Limit of the results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApiExchangeData.GetLendsAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the most recent lends
            <para><a href="https://docs.bitfinex.com/v1/reference#rest-public-lends" /></para>
            </summary>
            <param name="asset">Asset to get the book for</param>
            <param name="startTime">Return data after this time</param>
            <param name="limit">Limit of the results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApiExchangeData.GetSymbolsAsync(System.Threading.CancellationToken)">
            <summary>
            Gets a list of all symbols
            <para><a href="https://docs.bitfinex.com/v1/reference#rest-public-symbols" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApiExchangeData.GetSymbolDetailsAsync(System.Threading.CancellationToken)">
            <summary>
            Gets details of all symbols
            <para><a href="https://docs.bitfinex.com/v1/reference#rest-public-symbol-details" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApiTrading">
            <summary>
            Bitfinex trading endpoints, placing and mananging orders.
            </summary>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApiTrading.GetOpenOrdersAsync(System.Threading.CancellationToken)">
            <summary>
            Get the active orders
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-orders" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApiTrading.GetClosedOrdersAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get the order history for a symbol for this account
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-orders-history" /></para>
            </summary>
            <param name="symbol">The symbol to get the history for</param>
            <param name="startTime">Start time of the data to return</param>
            <param name="endTime">End time of the data to return</param>
            <param name="limit">Max amount of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApiTrading.GetOrderTradesAsync(System.String,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Get the individual trades for an order
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-order-trades" /></para>
            </summary>
            <param name="symbol">The symbol of the order</param>
            <param name="orderId">The order Id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApiTrading.GetUserTradesAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get the trade history for a symbol
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-trades" /></para>
            </summary>
            <param name="symbol">The symbol to get history for</param>
            <param name="startTime">Start time of the data to return</param>
            <param name="endTime">End time of the data to return</param>
            <param name="limit">Max amount of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApiTrading.GetPositionHistoryAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get a list of historical positions
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-positions-hist" /></para>
            </summary>
            <param name="startTime">Start time of the data to return</param>
            <param name="endTime">End time of the data to return</param>
            <param name="limit">Max amount of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApiTrading.PlaceOrderAsync(System.String,Bitfinex.Net.Enums.OrderSide,Bitfinex.Net.Enums.OrderType,System.Decimal,System.Decimal,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.String,System.Threading.CancellationToken)">
            <summary>
            Place a new order
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-submit-order" /></para>
            </summary>
            <param name="symbol">Symbol to place order for</param>
            <param name="side">Side of the order</param>
            <param name="type">Type of the order</param>
            <param name="price">The price for the order</param>
            <param name="quantity">The quantity of the order</param>
            <param name="affiliateCode">Affiliate code for the order</param>
            <param name="ct">Cancellation token</param>
            <param name="flags"></param>
            <param name="leverage">Set the leverage for a derivative order, supported by derivative symbol orders only. The value should be between 1 and 100 inclusive. The field is optional, if omitted the default leverage value of 10 will be used.</param>
            <param name="groupId">Group id</param>
            <param name="clientOrderId">Client order id</param>
            <param name="priceTrailing">The trailing price for a trailing stop order</param>
            <param name="priceAuxLimit">Auxiliary Limit price (for STOP LIMIT)</param>
            <param name="priceOcoStop">OCO stop price</param>
            <param name="cancelTime">datetime for automatic order cancelation</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApiTrading.CancelOrderAsync(System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Cancel a specific order
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-cancel-order" /></para>
            </summary>
            <param name="orderId">The id of the order to cancel</param>
            <param name="clientOrderId">The client order id of the order to cancel</param>
            <param name="clientOrderIdDate">The date of the client order (year month and day)</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApiTrading.CancelAllOrdersAsync(System.Threading.CancellationToken)">
            <summary>
            Cancels all open orders
            <para><a href="https://docs.bitfinex.com/v1/reference#rest-auth-cancel-all-orders" /></para>
            </summary>
            <param name="ct">Cancellation token</param><returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApiTrading.GetOrderAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Get the status of a specific order
            <para><a href="https://docs.bitfinex.com/v1/reference#rest-auth-order-status" /></para>
            </summary>
            <param name="orderId">The order id of the order to get</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApiTrading.ClaimPositionAsync(System.Int64,System.Decimal,System.Threading.CancellationToken)">
            <summary>
            Claim a position
            <para><a href="https://docs.bitfinex.com/v1/reference#rest-auth-claim-position" /></para>
            </summary>
            <param name="id">The id of the position to claim</param>
            <param name="quantity">The (partial) quantity to be claimed</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApiTrading.ClosePositionAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Close a position
            <para><a href="https://docs.bitfinex.com/v1/reference#close-position" /></para>
            </summary>
            <param name="positionId">The id to close</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApiTrading.GetActivePositionsAsync(System.Threading.CancellationToken)">
            <summary>
            Get the active positions
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-positions" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexClientSpotApiTrading.GetPositionsByIdAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get positions by id
            <para><a href="https://docs.bitfinex.com/reference#rest-auth-positions-audit" /></para>
            </summary>
            <param name="ids">The id's of positions to return</param>
            <param name="startTime">Start time of the data to return</param>
            <param name="endTime">End time of the data to return</param>
            <param name="limit">Max amount of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexSocketClientSpotStreams">
            <summary>
            Bitfinex spot streams
            </summary>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexSocketClientSpotStreams.SubscribeToTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Sockets.DataEvent{Bitfinex.Net.Objects.Models.Socket.BitfinexStreamSymbolOverview}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to ticker updates for a symbol
            <para><a href="https://docs.bitfinex.com/reference#ws-public-ticker" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe to</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexSocketClientSpotStreams.SubscribeToOrderBookUpdatesAsync(System.String,Bitfinex.Net.Enums.Precision,Bitfinex.Net.Enums.Frequency,System.Int32,System.Action{CryptoExchange.Net.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitfinex.Net.Objects.Models.BitfinexOrderBookEntry}}},System.Action{CryptoExchange.Net.Sockets.DataEvent{System.Int32}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to order book updates for a symbol
            <para><a href="https://docs.bitfinex.com/reference#ws-public-books" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe to</param>
            <param name="precision">The precision of the updates</param>
            <param name="frequency">The frequency of updates</param>
            <param name="length">The range for the order book updates, either 25 or 100</param>
            <param name="handler">The handler for the data</param>
            <param name="checksumHandler">The handler for the checksum, can be used to validate a order book implementation</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexSocketClientSpotStreams.SubscribeToRawOrderBookUpdatesAsync(System.String,System.Int32,System.Action{CryptoExchange.Net.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitfinex.Net.Objects.Models.BitfinexRawOrderBookEntry}}},System.Action{CryptoExchange.Net.Sockets.DataEvent{System.Int32}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to raw order book updates for a symbol
            <para><a href="https://docs.bitfinex.com/reference#ws-public-raw-books" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe to</param>
            <param name="limit">The range for the order book updates</param>
            <param name="handler">The handler for the data</param>
            <param name="checksumHandler">The handler for the checksum, can be used to validate a order book implementation</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexSocketClientSpotStreams.SubscribeToTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitfinex.Net.Objects.Models.BitfinexTradeSimple}}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to public trade updates for a symbol
            <para><a href="https://docs.bitfinex.com/reference#ws-public-trades" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe to</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexSocketClientSpotStreams.SubscribeToKlineUpdatesAsync(System.String,Bitfinex.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitfinex.Net.Objects.Models.BitfinexKline}}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to kline updates for a symbol
            <para><a href="https://docs.bitfinex.com/reference#ws-public-candles" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe to</param>
            <param name="interval">The interval of the klines</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexSocketClientSpotStreams.SubscribeToUserTradeUpdatesAsync(System.Action{CryptoExchange.Net.Sockets.DataEvent{Bitfinex.Net.Objects.Models.Socket.BitfinexSocketEvent{System.Collections.Generic.IEnumerable{Bitfinex.Net.Objects.Models.BitfinexOrder}}}},System.Action{CryptoExchange.Net.Sockets.DataEvent{Bitfinex.Net.Objects.Models.Socket.BitfinexSocketEvent{System.Collections.Generic.IEnumerable{Bitfinex.Net.Objects.Models.BitfinexTradeDetails}}}},System.Action{CryptoExchange.Net.Sockets.DataEvent{Bitfinex.Net.Objects.Models.Socket.BitfinexSocketEvent{System.Collections.Generic.IEnumerable{Bitfinex.Net.Objects.Models.BitfinexPosition}}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to trading information updates
            <para><a href="https://docs.bitfinex.com/reference#ws-auth-trades" /></para>
            </summary>
            <param name="orderHandler">Data handler for order updates. Can be null if not interested</param>
            <param name="tradeHandler">Data handler for trade execution updates. Can be null if not interested</param>
            <param name="positionHandler">Data handler for position updates. Can be null if not interested</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexSocketClientSpotStreams.SubscribeToBalanceUpdatesAsync(System.Action{CryptoExchange.Net.Sockets.DataEvent{Bitfinex.Net.Objects.Models.Socket.BitfinexSocketEvent{System.Collections.Generic.IEnumerable{Bitfinex.Net.Objects.Models.BitfinexWallet}}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to wallet information updates
            <para><a href="https://docs.bitfinex.com/reference#ws-auth-wallets" /></para>
            </summary>
            <param name="walletHandler">Data handler for wallet updates</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexSocketClientSpotStreams.SubscribeToFundingUpdatesAsync(System.Action{CryptoExchange.Net.Sockets.DataEvent{Bitfinex.Net.Objects.Models.Socket.BitfinexSocketEvent{System.Collections.Generic.IEnumerable{Bitfinex.Net.Objects.Models.BitfinexFundingOffer}}}},System.Action{CryptoExchange.Net.Sockets.DataEvent{Bitfinex.Net.Objects.Models.Socket.BitfinexSocketEvent{System.Collections.Generic.IEnumerable{Bitfinex.Net.Objects.Models.BitfinexFundingCredit}}}},System.Action{CryptoExchange.Net.Sockets.DataEvent{Bitfinex.Net.Objects.Models.Socket.BitfinexSocketEvent{System.Collections.Generic.IEnumerable{Bitfinex.Net.Objects.Models.BitfinexFunding}}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to funding information updates
            <para><a href="https://docs.bitfinex.com/reference#ws-auth-funding-offers" /></para>
            <para><a href="https://docs.bitfinex.com/reference#ws-auth-funding-credits" /></para>
            <para><a href="https://docs.bitfinex.com/reference#ws-auth-funding-loans" /></para>
            </summary>
            <param name="fundingOfferHandler">Subscribe to funding offer updates. Can be null if not interested</param>
            <param name="fundingCreditHandler">Subscribe to funding credit updates. Can be null if not interested</param>
            <param name="fundingLoanHandler">Subscribe to funding loan updates. Can be null if not interested</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexSocketClientSpotStreams.PlaceOrderAsync(Bitfinex.Net.Enums.OrderType,System.String,System.Decimal,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Bitfinex.Net.Enums.OrderFlags},System.String)">
            <summary>
            Places a new order
            <para><a href="https://docs.bitfinex.com/reference#ws-auth-input-order-new" /></para>
            </summary>
            <param name="type">The type of the order</param>
            <param name="symbol">The symbol the order is for</param>
            <param name="quantity">The quantity of the order, positive for buying, negative for selling</param>
            <param name="groupId">Group id to assign to the order</param>
            <param name="clientOrderId">Client order id to assign to the order</param>
            <param name="price">Price of the order</param>
            <param name="priceTrailing">Trailing price of the order</param>
            <param name="priceAuxiliaryLimit">Auxiliary limit price of the order</param>
            <param name="priceOcoStop">Oco stop price of the order</param>
            <param name="flags">Additional flags</param>
            <param name="affiliateCode">Affiliate code for the order</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexSocketClientSpotStreams.UpdateOrderAsync(System.Int64,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Bitfinex.Net.Enums.OrderFlags})">
            <summary>
            Updates an order
            <para><a href="https://docs.bitfinex.com/reference#ws-auth-input-order-update" /></para>
            </summary>
            <param name="orderId">The id of the order to update</param>
            <param name="price">The new price of the order</param>
            <param name="quantity">The new quantity of the order</param>
            <param name="delta">The delta to change</param>
            <param name="priceAuxiliaryLimit">the new aux limit price</param>
            <param name="priceTrailing">The new trailing price</param>
            <param name="flags">The new flags</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexSocketClientSpotStreams.CancelOrderAsync(System.Int64)">
            <summary>
            Cancels an order
            <para><a href="https://docs.bitfinex.com/reference#ws-auth-input-order-cancel" /></para>
            </summary>
            <param name="orderId">The id of the order to cancel</param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexSocketClientSpotStreams.CancelOrdersByGroupIdAsync(System.Int64)">
            <summary>
            Cancels multiple orders based on their groupId
            <para><a href="https://docs.bitfinex.com/reference#ws-auth-input-order-cancel" /></para>
            </summary>
            <param name="groupOrderId">The group id to cancel</param>
            <returns>True if successfully committed on server</returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexSocketClientSpotStreams.CancelOrdersByGroupIdsAsync(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Cancels multiple orders based on their groupIds
            <para><a href="https://docs.bitfinex.com/reference#ws-auth-input-order-cancel-multi" /></para>
            </summary>
            <param name="groupOrderIds">The group ids to cancel</param>
            <returns>True if successfully committed on server</returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexSocketClientSpotStreams.CancelOrdersAsync(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Cancels multiple orders based on their order ids
            <para><a href="https://docs.bitfinex.com/reference#ws-auth-input-order-cancel-multi" /></para>
            </summary>
            <param name="orderIds">The order ids to cancel</param>
            <returns>True if successfully committed on server</returns>
        </member>
        <member name="M:Bitfinex.Net.Interfaces.Clients.SpotApi.IBitfinexSocketClientSpotStreams.CancelOrdersByClientOrderIdsAsync(System.Collections.Generic.Dictionary{System.Int64,System.DateTime})">
            <summary>
            Cancels multiple orders based on their clientOrderIds
            <para><a href="https://docs.bitfinex.com/reference#ws-auth-input-order-cancel-multi" /></para>
            </summary>
            <param name="clientOrderIds">The client order ids to cancel, listed as (clientOrderId, Day) pair. ClientOrderIds are unique per day, so timestamp should be provided</param>
            <returns>True if successfully committed on server</returns>
        </member>
        <member name="T:Bitfinex.Net.Objects.BitfinexApiAddresses">
            <summary>
            Api addresses usable for the Bitfinex clients
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.BitfinexApiAddresses.RestClientAddress">
            <summary>
            The address used by the BitfinexClient for the rest API
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.BitfinexApiAddresses.SocketClientAddress">
            <summary>
            The address used by the BitfinexSocketClient for the socket API
            </summary>
        </member>
        <member name="F:Bitfinex.Net.Objects.BitfinexApiAddresses.Default">
            <summary>
            The default addresses to connect to the Bitfinex.com API
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.BitfinexClientOptions">
            <summary>
            Options for the BitfinexClient
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.BitfinexClientOptions.Default">
            <summary>
            Default options for the client
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.BitfinexClientOptions.AffiliateCode">
            <summary>
            Default affiliate code to use when placing orders
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.BitfinexClientOptions.NonceProvider">
            <summary>
            Optional nonce provider for signing requests. Careful providing a custom provider; once a nonce is sent to the server, every request after that needs a higher nonce than that
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.BitfinexClientOptions.SpotApiOptions">
            <summary>
            Options for the spot API
            </summary>
        </member>
        <member name="M:Bitfinex.Net.Objects.BitfinexClientOptions.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:Bitfinex.Net.Objects.BitfinexClientOptions.#ctor(Bitfinex.Net.Objects.BitfinexClientOptions)">
            <summary>
            ctor
            </summary>
            <param name="baseOn">Base the new options on other options</param>
        </member>
        <member name="T:Bitfinex.Net.Objects.BitfinexSocketClientOptions">
            <summary>
            Options for the BitfinexSocketClient
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.BitfinexSocketClientOptions.Default">
            <summary>
            Default options for the client
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.BitfinexSocketClientOptions.AffiliateCode">
            <summary>
            Default affiliate code to use when placing orders
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.BitfinexSocketClientOptions.NonceProvider">
            <summary>
            Optional nonce provider for signing requests. Careful providing a custom provider; once a nonce is sent to the server, every request after that needs a higher nonce than that
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.BitfinexSocketClientOptions.SpotStreamsOptions">
            <summary>
            Options for the spot streams
            </summary>
        </member>
        <member name="M:Bitfinex.Net.Objects.BitfinexSocketClientOptions.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:Bitfinex.Net.Objects.BitfinexSocketClientOptions.#ctor(Bitfinex.Net.Objects.BitfinexSocketClientOptions)">
            <summary>
            ctor
            </summary>
            <param name="baseOn">Base the new options on other options</param>
        </member>
        <member name="T:Bitfinex.Net.Objects.BitfinexOrderBookOptions">
            <summary>
            Options for the BitfinexSymbolOrderBook
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.BitfinexOrderBookOptions.SocketClient">
            <summary>
            The client to use for the socket connection. When using the same client for multiple order books the connection can be shared.
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.BitfinexOrderBookOptions.Precision">
            <summary>
            The precision level of the order book
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.BitfinexOrderBookOptions.Limit">
            <summary>
            The limit of entries in the order book, either 25 or 100
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.BitfinexOrderBookOptions.InitialDataTimeout">
            <summary>
            After how much time we should consider the connection dropped if no data is received for this time after the initial subscriptions
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Internal.BitfinexMeta">
            <summary>
            Order meta data
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Internal.BitfinexMeta.AffiliateCode">
            <summary>
            The affiliate code for the order
            </summary>
        </member>
        <member name="M:Bitfinex.Net.Objects.Internal.BitfinexNonceProvider.GetNonce">
            <inheritdoc />
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexAlert">
            <summary>
            Alert
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexAlert.AlertKey">
            <summary>
            The key of the alert
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexAlert.AlertType">
            <summary>
            The type of the alert
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexAlert.Symbol">
            <summary>
            The symbol the alert is for
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexAlert.Price">
            <summary>
            The price of the alert
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexAlert.T">
            <summary>
            
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexAsset">
            <summary>
            Asset info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexAsset.Name">
            <summary>
            The shorthand name of the asset
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexAsset.FullName">
            <summary>
            The full name of the asset
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexAvailableBalance">
            <summary>
            Available balance
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexAvailableBalance.AvailableBalance">
            <summary>
            The available balance
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexAveragePrice">
            <summary>
            Average price info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexAveragePrice.AverageRate">
            <summary>
            The average price
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexAveragePrice.Quantity">
            <summary>
            The quantity
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexForeignExchangeRate">
            <summary>
            Exchange rate in a foreign currency
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexForeignExchangeRate.CurrentRate">
            <summary>
            The current exchange rate
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexFundingAutoRenew">
            <summary>
            Activate or deactivate auto-renew. Allows you to specify the currency, amount, rate, and period.
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingAutoRenew.Timestamp">
            <summary>
            Millisecond Time Stamp of the update.
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingAutoRenew.Type">
            <summary>
            Purpose of notification ('on-req', 'oc-req', 'uca', 'fon-req', 'foc-req', 'fa-req').
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingAutoRenew.Id">
            <summary>
            Unique ID of the message.
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingAutoRenew.Symbol">
            <summary>
            Currency (USD, …)
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingAutoRenew.Period">
            <summary>
            Period in days.
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingAutoRenew.Rate">
            <summary>
            The rate of the order
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingAutoRenew.MaxQuantity">
            <summary>
            Max amount to be auto-renewed
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingAutoRenew.Code">
            <summary>
            Work in progress.
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingAutoRenew.Status">
            <summary>
            Status of the notification; it may vary over time (SUCCESS, ERROR, FAILURE, ...).
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingAutoRenew.Text">
            <summary>
            Text of the notification.
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexFundingAutoRenewStatus">
            <summary>
            Funding auto renew status
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingAutoRenewStatus.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingAutoRenewStatus.Period">
            <summary>
            The period of the offer in days
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingAutoRenewStatus.Rate">
            <summary>
            The rate of the order
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingAutoRenewStatus.Quantity">
            <summary>
            The quantity of the offer
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexFunding">
            <summary>
            Funding info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFunding.Id">
            <summary>
            The offer id
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFunding.Symbol">
            <summary>
            The symbol of the offer
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFunding.Side">
            <summary>
            The side of the funding
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFunding.CreateTime">
            <summary>
            The creation timestamp
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFunding.UpdateTime">
            <summary>
            The last update timestamp
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFunding.Quantity">
            <summary>
            The quantity of the offer
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFunding.Flags">
            <summary>
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFunding.Status">
            <summary>
            The order status
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFunding.StatusString">
            <summary>
            The raw order status string
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFunding.PlaceHolder1">
            <summary>
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFunding.PlaceHolder2">
            <summary>
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFunding.PlaceHolder3">
            <summary>
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFunding.Price">
            <summary>
            The price of the offer
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFunding.Period">
            <summary>
            The period of the offer in days
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFunding.OpenTime">
            <summary>
            The timestamp when the funding was opened
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFunding.LastPayoutTime">
            <summary>
            The timestamp of the last payout
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFunding.Notify">
            <summary>
            If notify
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFunding.Hidden">
            <summary>
            If hidden
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFunding.PlaceHolder6">
            <summary>
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFunding.Renew">
            <summary>
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFunding.RateReal">
            <summary>
            The calculated rate
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFunding.NoClose">
            <summary>
            Whether the funding should be closed when position is closed
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexFundingCredit">
            <summary>
            Funding credit info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingCredit.PositionPair">
            <summary>
            The pair the currency was used for
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexFundingInfo">
            <summary>
            Funding info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingInfo.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingInfo.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingInfo.Data">
            <summary>
            Data
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexFundingInfoDetails">
            <summary>
            Funding info details
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingInfoDetails.YieldLoan">
            <summary>
            The weighted average rate for taken funding
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingInfoDetails.YieldLend">
            <summary>
            The weighted average rate for provided funding
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingInfoDetails.DurationLoan">
            <summary>
            The weighted average duration for taken funding
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingInfoDetails.DurationLend">
            <summary>
            The weighted average duration for provided funding
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexFundingOffer">
            <summary>
            Funding offer info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingOffer.Id">
            <summary>
            The offer id
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingOffer.Symbol">
            <summary>
            The symbol of the offer
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingOffer.CreateTime">
            <summary>
            The creation timestamp
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingOffer.UpdateTime">
            <summary>
            The last update timestamp
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingOffer.Quantity">
            <summary>
            The quantity of the offer
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingOffer.QuantityOriginal">
            <summary>
            The original quantity
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingOffer.FundingType">
            <summary>
            The funding type
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingOffer.PlaceHolder1">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingOffer.PlaceHolder2">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingOffer.Flags">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingOffer.Status">
            <summary>
            The status
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingOffer.StatusString">
            <summary>
            The raw status string
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingOffer.PlaceHolder3">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingOffer.PlaceHolder4">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingOffer.PlaceHolder5">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingOffer.Rate">
            <summary>
            The rate of the order
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingOffer.Period">
            <summary>
            The period of the offer in days
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingOffer.Notify">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingOffer.Hidden">
            <summary>
            Whether the offer is hidden
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingOffer.PlaceHolder6">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingOffer.Renew">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingOffer.RateReal">
            <summary>
            The calculated rate
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexFundingTrade">
            <summary>
            Funding trade info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingTrade.Id">
            <summary>
            The id
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingTrade.Asset">
            <summary>
            The asset
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingTrade.Timestamp">
            <summary>
            The timestamp
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingTrade.OfferId">
            <summary>
            The offer id
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingTrade.Quantity">
            <summary>
            The trade quantity
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingTrade.Rate">
            <summary>
            The rate
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingTrade.Period">
            <summary>
            The period in days
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexFundingTrade.Maker">
            <summary>
            Whether the offer took liquidity off the funding book
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexKline">
            <summary>
            Kline info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexKline.OpenTime">
            <summary>
            The timestamp of the kline
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexKline.OpenPrice">
            <summary>
            The opening price
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexKline.ClosePrice">
            <summary>
            The closing price
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexKline.HighPrice">
            <summary>
            The highest price
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexKline.LowPrice">
            <summary>
            The lowest price
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexKline.Volume">
            <summary>
            The volume for this kline
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexLedgerEntry">
            <summary>
            Ledger entry
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexLedgerEntry.Id">
            <summary>
            The id of the entry
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexLedgerEntry.Asset">
            <summary>
            The asset
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexLedgerEntry.Timestamp">
            <summary>
            The timestamp of the event
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexLedgerEntry.Quantity">
            <summary>
            The change quantity
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexLedgerEntry.NewBalance">
            <summary>
            The new balance
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexLedgerEntry.Description">
            <summary>
            The description of the event
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexMarginBase">
            <summary>
            Margin base
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMarginBase.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMarginBase.Data">
            <summary>
            Data
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexMarginBaseInfo">
            <summary>
            Margin base info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMarginBaseInfo.UserProfitLoss">
            <summary>
            User profit and loss
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMarginBaseInfo.UserSwapsAmount">
            <summary>
            Amount of swaps
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMarginBaseInfo.MarginBalance">
            <summary>
            Balance in margin funding account
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMarginBaseInfo.MarginNet">
            <summary>
            Balance after profit/loss
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexMarginSymbol">
            <summary>
            Margin symbol info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMarginSymbol.Topic">
            <summary>
            The topic
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMarginSymbol.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMarginSymbol.Data">
            <summary>
            Data
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexMarginSymbolInfo">
            <summary>
            Margin symbol info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMarginSymbolInfo.TradeableBalance">
            <summary>
            Trade-able balance
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMarginSymbolInfo.GrossBalance">
            <summary>
            Gross balance
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMarginSymbolInfo.Buy">
            <summary>
            Buy quantity
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMarginSymbolInfo.Sell">
            <summary>
            Sell quantity
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexMovement">
            <summary>
            Wallet movement info (deposit/withdraw)
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMovement.Id">
            <summary>
            The id of the movement
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMovement.Asset">
            <summary>
            The asset of the movement
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMovement.AssetName">
            <summary>
            The full name of the asset
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMovement.StartTime">
            <summary>
            The initial creation time
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMovement.UpdateTime">
            <summary>
            The last update time
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMovement.Status">
            <summary>
            The status of the movement
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMovement.Quantity">
            <summary>
            The quantity of the movement
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMovement.Fee">
            <summary>
            The fee paid for the movement
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMovement.Address">
            <summary>
            The address
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexMovement.TransactionId">
            <summary>
            The transaction id
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexOrder">
            <summary>
            Order info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.Id">
            <summary>
            The id of the order
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.GroupId">
            <summary>
            The group id of the order
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.ClientOrderId">
            <summary>
            The client order id
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.Symbol">
            <summary>
            The symbol of the order
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.CreateTime">
            <summary>
            The creation time of the order
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.UpdateTime">
            <summary>
            The last update time
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.QuantityRemaining">
            <summary>
            The quantity left
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.Quantity">
            <summary>
            The original quantity
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.Type">
            <summary>
            The order type
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.TypePrevious">
            <summary>
            The previous order type
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.TimestampTif">
            <summary>
            Tif timestamp
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.PlaceHolder1">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.Flags">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.Status">
            <summary>
            The status of the order
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.StatusString">
            <summary>
            The raw status string
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.PlaceHolder3">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.PlaceHolder4">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.Price">
            <summary>
            The price of the order
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.PriceAverage">
            <summary>
            The average price of the order (market orders)
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.PriceTrailing">
            <summary>
            The trailing price of the order
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.PriceAuxilliaryLimit">
            <summary>
            The aux limit price
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.PlaceHolder5">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.PlaceHolder6">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.PlaceHolder7">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.Hidden">
            <summary>
            Whether the order is hidden
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.PlacedId">
            <summary>
            If another order caused this order to be placed (OCO) this will be that other order's ID
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.PlaceHolder8">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.PlaceHolder9">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.PlaceHolder10">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.Routing">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.PlaceHolder11">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.PlaceHolder12">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.Meta">
            <summary>
            Meta data for the order
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrder.Side">
            <summary>
            The side of the order
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexOrderBook">
            <summary>
            Order book
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrderBook.Bids">
            <summary>
            List of bids
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrderBook.Asks">
            <summary>
            List of asks
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexOrderBookBase">
            <summary>
            Base for order book
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexOrderBookEntry">
            <summary>
            Order book entry
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrderBookEntry.Price">
            <summary>
            The price of this entry
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrderBookEntry.Count">
            <summary>
            The amount of orders for this price
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexOrderBookEntry.Quantity">
            <summary>
            The total quantity for this price
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexRawOrderBookEntry">
            <summary>
            Raw order book entry
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexRawOrderBookEntry.OrderId">
            <summary>
            The id of this order
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexRawOrderBookEntry.Price">
            <summary>
            The price for this order
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexRawOrderBookEntry.Quantity">
            <summary>
            The quantity of this order
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexPerformance">
            <summary>
            Performance info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexPerformance.Timestamp">
            <summary>
            The timestamp of the calculation
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexPerformance.Performance">
            <summary>
            Performance rating
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexPlatformStatus">
            <summary>
            Platform status info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexPlatformStatus.Status">
            <summary>
            The current platform status
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexPosition">
            <summary>
            Position info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexPosition.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexPosition.Status">
            <summary>
            The status of the position
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexPosition.Quantity">
            <summary>
            The quantity
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexPosition.BasePrice">
            <summary>
            The base price
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexPosition.MarginFunding">
            <summary>
            The amount of funding being used
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexPosition.MarginFundingType">
            <summary>
            The funding type
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexPosition.ProfitLoss">
            <summary>
            Profit / loss
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexPosition.ProfitLossPercentage">
            <summary>
            Profit / loss percentage
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexPosition.LiquidationPrice">
            <summary>
            Liquidation price
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexPosition.Leverage">
            <summary>
            Beta value
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexPosition.Id">
            <summary>
            The id of the position
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexPositionExtended">
            <summary>
            Extended position info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexPositionExtended.CreateTime">
            <summary>
            The creation time
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexPositionExtended.UpdateTime">
            <summary>
            The update time
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexStats">
            <summary>
            Stat info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexStats.Timestamp">
            <summary>
            The timestamp
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexStats.Value">
            <summary>
            The value
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexSuccessResult">
            <summary>
            Result
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexSuccessResult.Success">
            <summary>
            Whether the operation was successful
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexSymbolOverview">
            <summary>
            Market overview
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexSymbolOverview.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexSymbolOverview.Frr">
            <summary>
            FRR
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexSymbolOverview.BestBidPrice">
            <summary>
            The best bid price
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexSymbolOverview.BestBidPeriod">
            <summary>
            The best bid price period
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexSymbolOverview.BestBidQuantity">
            <summary>
            The best bid quantity
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexSymbolOverview.BestAskPrice">
            <summary>
            The best ask price
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexSymbolOverview.BestAskPeriod">
            <summary>
            The best bid price period
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexSymbolOverview.BestAskQuantity">
            <summary>
            The best ask quantity
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexSymbolOverview.DailyChange">
            <summary>
            Change versus 24 hours ago
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexSymbolOverview.DailyChangePercentage">
            <summary>
            Change percentage versus 24 hours ago
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexSymbolOverview.LastPrice">
            <summary>
            The last trade price
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexSymbolOverview.Volume">
            <summary>
            The 24 hour volume
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexSymbolOverview.HighPrice">
            <summary>
            The 24 hour high price
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexSymbolOverview.LowPrice">
            <summary>
            The 24 hour low price
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexSymbolOverview.PlaceHolder1">
            <summary>
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexSymbolOverview.PlaceHolder2">
            <summary>
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexSymbolOverview.FrrAmountAvailable">
            <summary>
            FRR amount available
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexTradeDetails">
            <summary>
            Details of a trade
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTradeDetails.Id">
            <summary>
            The id of the trade
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTradeDetails.Symbol">
            <summary>
            The pair the trade is for
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTradeDetails.Timestamp">
            <summary>
            The time the trade was created
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTradeDetails.OrderId">
            <summary>
            The id of the order
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTradeDetails.Quantity">
            <summary>
            The executed quantity
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTradeDetails.Price">
            <summary>
            The price of the trade
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTradeDetails.OrderType">
            <summary>
            The type of the order
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTradeDetails.OrderPrice">
            <summary>
            The price of the order
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTradeDetails.Maker">
            <summary>
            If was maker
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTradeDetails.Fee">
            <summary>
            The fee
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTradeDetails.FeeAsset">
            <summary>
            The asset the fee is in
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexTradeSimple">
            <summary>
            Trade info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTradeSimple.Id">
            <summary>
            The id of the trade
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTradeSimple.Timestamp">
            <summary>
            The timestamp of the trade
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTradeSimple.Quantity">
            <summary>
            The quantity of the trade
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTradeSimple.Price">
            <summary>
            The price of the trade
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTradeSimple.Period">
            <summary>
            The period of the funding 
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexTradeSimple.UpdateType">
            <summary>
            The type of update
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexUserInfo">
            <summary>
            User info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexUserInfo.Id">
            <summary>
            The id of the user
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexUserInfo.Email">
            <summary>
            The email address of the user
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexUserInfo.UserName">
            <summary>
            The username of the user
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexWallet">
            <summary>
            Wallet info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexWallet.Type">
            <summary>
            The type of the wallet
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexWallet.Asset">
            <summary>
            The asset
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexWallet.Total">
            <summary>
            The current balance
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexWallet.UnsettledInterest">
            <summary>
            The unsettled interest
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexWallet.Available">
            <summary>
            The available balance
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.BitfinexWriteResult`1">
            <summary>
            Result V2.
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexWriteResult`1.Timestamp">
            <summary>
            Millisecond Time Stamp of the update.
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexWriteResult`1.Type">
            <summary>
            Purpose of notification ('on-req', 'oc-req', 'uca', 'fon-req', 'foc-req').
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexWriteResult`1.Id">
            <summary>
            Unique ID of the message.
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexWriteResult`1.Placeholder1">
            <summary>
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexWriteResult`1.Data">
            <summary>
            Data object.
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexWriteResult`1.Code">
            <summary>
            Work in progress.
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexWriteResult`1.Status">
            <summary>
            Status of the notification; it may vary over time (SUCCESS, ERROR, FAILURE, ...).
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.BitfinexWriteResult`1.Text">
            <summary>
            Text of the notification.
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.Socket.BitfinexSocketEvent`1">
            <summary>
            Socket event wrapper
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.Socket.BitfinexSocketEvent`1.ChannelId">
            <summary>
            The channel id of the event
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.Socket.BitfinexSocketEvent`1.EventType">
            <summary>
            The type of the event
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.Socket.BitfinexSocketEvent`1.Data">
            <summary>
            The data
            </summary>
        </member>
        <member name="M:Bitfinex.Net.Objects.Models.Socket.BitfinexSocketEvent`1.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:Bitfinex.Net.Objects.Models.Socket.BitfinexSocketEvent`1.#ctor(Bitfinex.Net.Enums.BitfinexEventType,`0)">
            <summary>
            ctor
            </summary>
            <param name="type"></param>
            <param name="data"></param>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.Socket.BitfinexStreamSymbolOverview">
            <summary>
            Market overview
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.Socket.BitfinexStreamSymbolOverview.Frr">
            <summary>
            FRR
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.Socket.BitfinexStreamSymbolOverview.BestBidPrice">
            <summary>
            The best bid price
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.Socket.BitfinexStreamSymbolOverview.BestBidPeriod">
            <summary>
            The best bid price period
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.Socket.BitfinexStreamSymbolOverview.BestBidQuantity">
            <summary>
            The best bid quantity
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.Socket.BitfinexStreamSymbolOverview.BestAskPrice">
            <summary>
            The best ask price
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.Socket.BitfinexStreamSymbolOverview.BestAskPeriod">
            <summary>
            The best bid price period
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.Socket.BitfinexStreamSymbolOverview.BestAskQuantity">
            <summary>
            The best ask quantity
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.Socket.BitfinexStreamSymbolOverview.DailyChange">
            <summary>
            Change versus 24 hours ago
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.Socket.BitfinexStreamSymbolOverview.DailyChangePercentage">
            <summary>
            Change percentage versus 24 hours ago
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.Socket.BitfinexStreamSymbolOverview.LastPrice">
            <summary>
            The last trade price
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.Socket.BitfinexStreamSymbolOverview.Volume">
            <summary>
            The 24 hour volume
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.Socket.BitfinexStreamSymbolOverview.HighPrice">
            <summary>
            The 24 hour high price
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.Socket.BitfinexStreamSymbolOverview.LowPrice">
            <summary>
            The 24 hour low price
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.Socket.BitfinexStreamSymbolOverview.PlaceHolder1">
            <summary>
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.Socket.BitfinexStreamSymbolOverview.PlaceHolder2">
            <summary>
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.Socket.BitfinexStreamSymbolOverview.FrrAmountAvailable">
            <summary>
            FRR amount available
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.V1.Bitfinex30DaySummary">
            <summary>
            30 day summary info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.Bitfinex30DaySummary.Timestamp">
            <summary>
            The timestamp of the data
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.Bitfinex30DaySummary.TradeVolume">
            <summary>
            Trade volume data
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.Bitfinex30DaySummary.FundingProfit">
            <summary>
            Trade volume data
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.Bitfinex30DaySummary.MakerFee">
            <summary>
            Current maker fee
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.Bitfinex30DaySummary.TakerFee">
            <summary>
            Current taker fee
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.V1.Bitfinex30DayFundingProfitEntry">
            <summary>
            Funding profit entry
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.Bitfinex30DayFundingProfitEntry.Asset">
            <summary>
            The asset
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.Bitfinex30DayFundingProfitEntry.Quantity">
            <summary>
            The asset
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.V1.Bitfinex30DaySummaryVolumeEntry">
            <summary>
            Summary entry
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.Bitfinex30DaySummaryVolumeEntry.Asset">
            <summary>
            The asset
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.Bitfinex30DaySummaryVolumeEntry.Volume">
            <summary>
            The volume
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.Bitfinex30DaySummaryVolumeEntry.VolumeMaker">
            <summary>
            The maker volume
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.Bitfinex30DaySummaryVolumeEntry.VolumeBFX">
            <summary>
            The volume on Bitfinex
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.Bitfinex30DaySummaryVolumeEntry.VolumeBFXMaker">
            <summary>
            The maker volume on Bitfinex
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.Bitfinex30DaySummaryVolumeEntry.VolumeETHFX">
            <summary>
            The volume on EthFinex
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.Bitfinex30DaySummaryVolumeEntry.VolumeETHFXMaker">
            <summary>
            The maker volume on EthFinex
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.V1.BitfinexAccountInfo">
            <summary>
            Account info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexAccountInfo.MakerFee">
            <summary>
            Maker trade fee
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexAccountInfo.TakerFee">
            <summary>
            Taker trade fee
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexAccountInfo.Fees">
            <summary>
            Symbol specific fees
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.V1.BitfinexFee">
            <summary>
            Fee info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexFee.Pairs">
            <summary>
            The fee pair
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexFee.MakerFee">
            <summary>
            Maker trade fee
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexFee.TakerFee">
            <summary>
            Taker trade fee
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.V1.BitfinexClosePositionResult">
            <summary>
            Close position result
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexClosePositionResult.Message">
            <summary>
            Status message
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexClosePositionResult.Position">
            <summary>
            The position status
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexClosePositionResult.Order">
            <summary>
            The order used to close the position
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.V1.BitfinexDepositAddress">
            <summary>
            Deposit address info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexDepositAddress.Result">
            <summary>
            Whether it was successful
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexDepositAddress.Method">
            <summary>
            The deposit method
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexDepositAddress.Asset">
            <summary>
            The asset the address is for
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexDepositAddress.Address">
            <summary>
            The deposit address
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.V1.BitfinexFundingBook">
            <summary>
            Funding order book
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexFundingBook.Bids">
            <summary>
            The bids in the book
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexFundingBook.Asks">
            <summary>
            The asks in the book
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.V1.BitfinexFundingBookEntry">
            <summary>
            Funding order book entry
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexFundingBookEntry.Price">
            <summary>
            The price of the entry
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexFundingBookEntry.Quantity">
            <summary>
            The quantity of the entry
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexFundingBookEntry.Period">
            <summary>
            The period in days
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexFundingBookEntry.Timestamp">
            <summary>
            The timestamp of the entry
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexFundingBookEntry.FlashReturnRate">
            <summary>
            Whether the offer is at ffr
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.V1.BitfinexFundingContract">
            <summary>
            Funding contract info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexFundingContract.Id">
            <summary>
            The id of the contract
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexFundingContract.PositionId">
            <summary>
            The id of the position
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexFundingContract.Asset">
            <summary>
            The asset of the contract
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexFundingContract.Price">
            <summary>
            The rate of the contract
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexFundingContract.Period">
            <summary>
            The period in days
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexFundingContract.Quantity">
            <summary>
            The quantity
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexFundingContract.Timestamp">
            <summary>
            The timestamp
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexFundingContract.AutoClose">
            <summary>
            If it is auto close
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.V1.BitfinexLend">
            <summary>
            Lend info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexLend.Price">
            <summary>
            The rate of the lend
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexLend.QuantityLent">
            <summary>
            The quantity that was lent
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexLend.QuantityUsed">
            <summary>
            The quantity that is used
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexLend.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.V1.BitfinexOffer">
            <summary>
            Offer info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexOffer.Id">
            <summary>
            The id of the offer
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexOffer.Asset">
            <summary>
            The asset of the offer
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexOffer.Price">
            <summary>
            The rate of the offer
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexOffer.Period">
            <summary>
            The period in days
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexOffer.Direction">
            <summary>
            The direction of the offer
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexOffer.Timestamp">
            <summary>
            The timestamp
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexOffer.IsLive">
            <summary>
            If the offer is live
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexOffer.IsCanceled">
            <summary>
            If the offer is canceled
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexOffer.Quantity">
            <summary>
            The original quantity of the offer
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexOffer.QuantityRemaining">
            <summary>
            The remaining quantity on the offer
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexOffer.QuantityFilled">
            <summary>
            The executed quantity of the offer
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexOffer.OfferId">
            <summary>
            The offer id
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.V1.BitfinexPlacedOrder">
            <summary>
            Placed order info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexPlacedOrder.Id">
            <summary>
            The id of the order
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexPlacedOrder.Symbol">
            <summary>
            The symbol the order is for
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexPlacedOrder.Exchange">
            <summary>
            On what exchange
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexPlacedOrder.Price">
            <summary>
            The price of the order
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexPlacedOrder.AverageExecutionPrice">
            <summary>
            The average execution price (for market orders)
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexPlacedOrder.Side">
            <summary>
            The side of the order
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexPlacedOrder.Type">
            <summary>
            The type of the order
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexPlacedOrder.Timestamp">
            <summary>
            The timestamp of the order
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexPlacedOrder.Live">
            <summary>
            If the order is live
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexPlacedOrder.Canceled">
            <summary>
            If the order is canceled
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexPlacedOrder.Hidden">
            <summary>
            If the order is hidden
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexPlacedOrder.Forced">
            <summary>
            If order was forced (margin only)
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexPlacedOrder.Quantity">
            <summary>
            The original quantity of the order
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexPlacedOrder.QuantityRemaining">
            <summary>
            The remaining quantity of the order
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexPlacedOrder.QuantityFilled">
            <summary>
            The executed quantity of the order
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexPlacedOrder.GroupId">
            <summary>
            The group id
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexPlacedOrder.ClientOrderId">
            <summary>
            The client order id
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexPlacedOrder.ClientOrderDate">
            <summary>
            The client order date
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexPlacedOrder.Source">
            <summary>
            The source of the order
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexPlacedOrder.OcoOrder">
            <summary>
            If this was an OneCancelsOther order this is the id of the other order
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexPlacedOrder.AffiliateCode">
            <summary>
            Affiliate code for the order
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.V1.BitfinexPositionV1">
            <summary>
            Position object of the V1 API
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexPositionV1.Id">
            <summary>
            The id of the position
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexPositionV1.Symbol">
            <summary>
            The symbol of the position
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexPositionV1.Status">
            <summary>
            The status of the position
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexPositionV1.Base">
            <summary>
            The base 
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexPositionV1.Quantity">
            <summary>
            The quantity of the position
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexPositionV1.Timestamp">
            <summary>
            The timestamp
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexPositionV1.Swap">
            <summary>
            Swap
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexPositionV1.ProfitLoss">
            <summary>
            The profit loss
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.V1.BitfinexResult">
            <summary>
            Result
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexResult.Result">
            <summary>
            Result string
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.V1.BitfinexTransferResult">
            <summary>
            Transfer results
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexTransferResult.Success">
            <summary>
            The status of the transfer
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexTransferResult.Message">
            <summary>
            Additional info
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.V1.BitfinexSymbolDetails">
            <summary>
            Symbol details
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexSymbolDetails.Symbol">
            <summary>
            The symbol pair
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexSymbolDetails.PricePrecision">
            <summary>
            The price precision of the pair
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexSymbolDetails.InitialMargin">
            <summary>
            The initial margin required to open a position
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexSymbolDetails.MinimumMargin">
            <summary>
            The minimal margin to maintain
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexSymbolDetails.MaximumOrderQuantity">
            <summary>
            The maximum order size
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexSymbolDetails.MinimumOrderQuantity">
            <summary>
            The minimum order size
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexSymbolDetails.Expiration">
            <summary>
            Expiration
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexSymbolDetails.Margin">
            <summary>
            If margin trading is enabled for the pair
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.V1.BitfinexWithdrawalFees">
            <summary>
            Withdrawal fee dictionary
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexWithdrawalFees.Withdraw">
            <summary>
            List of fees
            </summary>
        </member>
        <member name="T:Bitfinex.Net.Objects.Models.V1.BitfinexWithdrawalResult">
            <summary>
            Result of withdrawing
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexWithdrawalResult.Success">
            <summary>
            The status of the transfer
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexWithdrawalResult.Message">
            <summary>
            Additional info
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexWithdrawalResult.WithdrawalId">
            <summary>
            The id of the withdrawal
            </summary>
        </member>
        <member name="P:Bitfinex.Net.Objects.Models.V1.BitfinexWithdrawalResult.Fees">
            <summary>
            The fees paid
            </summary>
        </member>
        <member name="T:Bitfinex.Net.SymbolOrderBooks.BitfinexSymbolOrderBook">
            <summary>
            Live order book implementation
            </summary>
        </member>
        <member name="M:Bitfinex.Net.SymbolOrderBooks.BitfinexSymbolOrderBook.#ctor(System.String,Bitfinex.Net.Objects.BitfinexOrderBookOptions)">
            <summary>
            Create a new order book instance
            </summary>
            <param name="symbol">The symbol the order book is for</param>
            <param name="options">Options for the order book</param>
        </member>
        <member name="M:Bitfinex.Net.SymbolOrderBooks.BitfinexSymbolOrderBook.DoStartAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.SymbolOrderBooks.BitfinexSymbolOrderBook.DoReset">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.SymbolOrderBooks.BitfinexSymbolOrderBook.ProcessChecksum(CryptoExchange.Net.Sockets.DataEvent{System.Int32})">
            <summary>
            Process a received checksum
            </summary>
            <param name="checksum"></param>
        </member>
        <member name="M:Bitfinex.Net.SymbolOrderBooks.BitfinexSymbolOrderBook.DoChecksum(System.Int32)">
            <summary>
            Process a checksum
            </summary>
            <param name="checksum"></param>
            <returns></returns>
        </member>
        <member name="M:Bitfinex.Net.SymbolOrderBooks.BitfinexSymbolOrderBook.DoResyncAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitfinex.Net.SymbolOrderBooks.BitfinexSymbolOrderBook.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
        </member>
    </members>
</doc>
